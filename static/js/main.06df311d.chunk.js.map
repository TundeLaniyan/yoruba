{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/practice/practice.jsx","component/progress/progress.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/exercise/easyGame/easyGame.jsx","component/card/cardText.jsx","component/exercise/easyGame/easyGameAccent.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/reading/reading.jsx","component/exercise/rapidGame/rapidGame.jsx","component/exercise/exercise.jsx","img/logo.png","component/header/header.jsx","reducer.js","component/exercise/gameLogic.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","Slider","lecture","auto","random","exercise","setExercise","max","lesson","words","length","useEffect","start","randomNumber","prev","value","Math","ceil","className","disabled","onClick","style","backgroundImage","langauge","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","title","Progress","Component","percentage","props","color","percent","top","right","bottom","left","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","Object","values","reduce","total","currentValue","noOfExercise","to","fontWeight","task","GiGymBag","SiWeasyl","GiDiamondHard","GiBookCover","FaMemory","GiFastArrow","reading","entries","key","Value","setProgress","payload","type","GameFooter","audio","correct","incorrect","active","noText","languageText","setlanguageText","replace","split","setTimeout","language","Card","memo","hide","brightness","answer","Answer","TiTick","TiTimes","light","setLight","backgroundColor","filter","undefined","dispatch","Game","setState","soundState","setSoundState","setAnswer","results","setResults","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","setCleanUp","unMount","gameLimit","gameSpeed","isTouchDevice","answerQuestion","cardLimit","sort","forEach","clearTimeout","totalLength","cards","generateCards","delay","playCards","nextRound","endGame","result","handleOnClick","useCallback","input","setResult","CardText","HardGame","currentRound","setCurrentRound","setCorrect","displayCard","answerQuestions","totalCards","currentLength","curInput","clearIncorrect","correctInput","currentAnswer","incorrectInput","display","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","ref","inputLecture","hiddenIndex","indexOf","revealCard","curAnswer","Reading","remainingState","findIndex","el","silent","Exercise","location","handleRestart","pathname","exact","path","Header","src","logo","alt","saveState","window","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","GameLogic","Set","i","has","add","alert","floor","answerQuestionMultLectures","timeout","cb","timeOut","splice","navigator","maxTouchPoints","msMaxTouchPoints","slice","currentLecture","runningTotal","accumulation","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","confirm","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06df311d.chunk.js","sourcesContent":["class SoundClass {\r\n    #audio = new Audio();\r\n    url = \"\";\r\n    stop() {\r\n        this.#audio.pause();\r\n        this.#audio.currentTime = 0;\r\n    }\r\n    start(url) {\r\n        this.stop();\r\n        this.#audio = new Audio(url);\r\n        this.url = url;\r\n        this.#audio.play();\r\n    }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;","import React, { useEffect } from \"react\";\r\nimport { lesson } from \"../../../../data.json\";\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.css\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(\r\n    () => auto && Sound.start(`files/lecture${lecture}/${exercise}.m4a`),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [exercise]\r\n  );\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"switch switch--next\"\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n      ></button>\r\n      <div className=\"slider__img-container\">\r\n        <div\r\n          className=\"slider__img\"\r\n          onClick={() => Sound.start(`files/lecture${lecture}/${exercise}.m4a`)}\r\n          style={{\r\n            backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n          }}\r\n        ></div>\r\n        <h5>{lesson[lecture - 1].langauge?.[exercise - 1]}</h5>\r\n        <h5>{lesson[lecture - 1].words[exercise - 1]}</h5>\r\n      </div>\r\n      <button\r\n        className=\"switch\"\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button className=\"btn\" onClick={() => setRandom(random ? false : true)}>\r\n        {random ? \"Normal\" : \"Random\"}\r\n      </button>\r\n      <div className=\"btn\" onClick={() => setAuto(!auto)}>\r\n        {auto ? \"Auto\" : \"Manual\"}\r\n      </div>\r\n      <div className=\"btn\" onClick={() => setAutoPlay(!autoPlay)}>\r\n        {autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport \"./practice.css\";\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), []);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if (autoPlay)\r\n      setIntervalId(\r\n        setInterval(\r\n          () => setExercise((prev) => (prev < max ? prev + 1 : 1)),\r\n          4000\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"practice\">\r\n        <Slider\r\n          lecture={lecture}\r\n          auto={auto}\r\n          random={random}\r\n          exercise={exercise}\r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React from \"react\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\nimport \"./progress.css\";\r\n\r\nconst Progress = ({ className, Component, percentage = 0, ...props }) => {\r\n  const color = { complete: 'rgb(180, 107, 83)', incomplete: 'rgb(102, 72, 62)' };\r\n  const percent = {\r\n    top: {\r\n      backgroundImage: `linear-gradient(to right, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    right: {\r\n      backgroundImage: `linear-gradient(to bottom, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    bottom: {\r\n      backgroundImage: `linear-gradient(to left, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    left: {\r\n      backgroundImage: `linear-gradient(to top, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n  };\r\n\r\n  if (percentage < 12.5)\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%, ${color.complete} ${\r\n      50 + percentage * 4\r\n    }%, ${color.incomplete} ${50 + percentage * 4}%)`;\r\n  else if (percentage < 37.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} ${\r\n      (percentage - 12.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 12.5) * 4}%)`;\r\n  } else if (percentage < 62.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} ${\r\n      (percentage - 37.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 37.5) * 4}%)`;\r\n  } else if (percentage < 87.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} ${\r\n      (percentage - 62.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 62.5) * 4}%)`;\r\n  } else {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.complete} ${\r\n      (percentage - 87.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 87.5) * 4}%, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n  }\r\n\r\n  return (\r\n    <div className={`progress-container ${className}`}>\r\n      <div className=\"progress__top\" style={percent.top}></div>\r\n      <div className=\"progress__body\">\r\n        <div className=\"progress__side\" style={percent.left}></div>\r\n        <Component {...props} />\r\n        {percentage >= 75 && (\r\n          <div className=\"progress__pass\">\r\n            <TiTickOutline className=\"progress__pass-img\" />\r\n          </div>\r\n        )}\r\n        <div className=\"progress__side\" style={percent.right}></div>\r\n      </div>\r\n      <div className=\"progress__bottom\" style={percent.bottom}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Progress from \"../../progress/progress\";\r\nimport \"./lesson.css\";\r\n\r\nconst Lesson = ({ setLecture, lecture, progress }) => {\r\n  const noOfExercise = 5;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(\r\n      lesson.map((cur, index) => {\r\n        const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress\r\n          ? Object.values(levelProgress)\r\n          : [0];\r\n        const percentage =\r\n          levelProgressArray.reduce(\r\n            (total, currentValue) => total + currentValue\r\n          ) / (lecture > 1 ? noOfExercise : noOfExercise - 1);\r\n        percentage >= 75 && setPassed((prev) => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Select Level</div>\r\n      <div className=\"lesson__length\">\r\n        {passed} / {lesson.length}\r\n      </div>\r\n      {progression.map((cur, index) => (\r\n        <Progress\r\n          key={index}\r\n          Component={() => (\r\n            <Link\r\n              key={index}\r\n              className=\"lesson__container\"\r\n              to=\"/task\"\r\n              onClick={() => setLecture(index + 1)}\r\n            >\r\n              <div\r\n                className=\"lesson__img\"\r\n                style={{\r\n                  backgroundImage: `url(./img/lecture${index + 1}/1.jpg)`,\r\n                }}\r\n              />\r\n              <div style={{ fontWeight: 700 }}>{cur.title}</div>\r\n            </Link>\r\n          )}\r\n          percentage={cur.percentage}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lesson);\r\n","import React from \"react\";\r\nimport { GiDiamondHard, GiGymBag, GiBookCover } from \"react-icons/gi\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\nimport { GiFastArrow } from \"react-icons/gi\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  const task = {\r\n    // lesson: GrScheduleNew,\r\n    exercise: GiGymBag,\r\n    [lecture === 1 ? \"easyGameAccent\" : \"easyGame\"]: SiWeasyl,\r\n    // speaking: IoMdMicrophone,\r\n    hardGame: GiDiamondHard,\r\n    reading: GiBookCover,\r\n    memoryGame: FaMemory,\r\n    rapidGame: GiFastArrow,\r\n    // recall: GiBugleCall,\r\n  };\r\n  if (lecture === 1) delete task.reading;\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"title\">Select Task</div>\r\n      <div className=\"task__select\">\r\n        {Object.entries(task).map(([key, Value], index) => {\r\n          return (\r\n            <Progress\r\n              key={index}\r\n              className=\"task__box\"\r\n              Component={() => (\r\n                <Link className=\"task__container\" to={key}>\r\n                  <Value className=\"task__img\" />\r\n                  <div className=\"task__title\">{key}</div>\r\n                </Link>\r\n              )}\r\n              percentage={progress[lecture]?.[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);\r\n","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const resetProgress = () => ({ type: \"RESETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\nimport \"./gameFooter.css\";\r\n\r\nconst GameFooter = ({\r\n  percent = 100,\r\n  audio,\r\n  correct,\r\n  incorrect,\r\n  active,\r\n  noText,\r\n}) => {\r\n  const [languageText, setlanguageText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (noText) return;\r\n    const [exercise, lecture] = Sound.url\r\n      .replace(\"files/lecture\", \"\")\r\n      .replace(\".m4a\", \"\")\r\n      .split(\"/\");\r\n    setTimeout(() => {\r\n      if (exercise !== \"files\" && exercise > 0) {\r\n        setlanguageText(lesson[exercise - 1].language?.[lecture - 1]);\r\n        setTimeout(() => setlanguageText(\"\"), 3000);\r\n      }\r\n    }, 1500);\r\n    // eslint-disable-next-line\r\n  }, [Sound.url]);\r\n\r\n  return (\r\n    <div\r\n      className=\"game__footer\"\r\n      style={{\r\n        backgroundImage: `linear-gradient(to right, rgb(90 44 29 / 100%) ${percent}%, rgb(90 44 29 / 23%) ${percent}%)`,\r\n      }}\r\n    >\r\n      {audio && (\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() => active && Sound.start(audio)}\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n      )}\r\n      <h5 className=\"language-text\">{languageText}</h5>\r\n      <div className=\"score score__correct\">{correct}</div>\r\n      <div className=\"score score__incorrect\">{incorrect}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFooter;\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst Card = memo(function Card({\r\n  state,\r\n  lecture,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    onClick(state);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={\r\n        hide\r\n          ? { backgroundColor: \"#bbb7aa35\" }\r\n          : light\r\n          ? { filter: `brightness(${light})` }\r\n          : {}\r\n      }\r\n    >\r\n      <div\r\n        className=\"img\"\r\n        style={\r\n          hide >= 0 && !answer\r\n            ? {}\r\n            : {\r\n                backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n              }\r\n        }\r\n      />\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n      {!(hide >= 0) && (\r\n        <h5 className=\"card__text\">\r\n          {lesson[lecture - 1].words[exercise - 1]}\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  function answerQuestion(state) {\r\n    const answer = Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const totalLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGame\",\r\n      });\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            Game.correct();\r\n            Game.delay(2000, () => setNext((prev) => prev + 1), setCleanUp);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            Game.incorrect();\r\n            Game.delay(2000, () => incorrectInput(), setCleanUp);\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <div className=\"touch-btn\" onClick={handleTouchPlay}>\r\n          Play\r\n        </div>\r\n      )}\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={index}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture${lecture}/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst CardText = memo(function CardText({\r\n  state,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 2000);\r\n    onClick(state);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={\r\n        hide\r\n          ? { backgroundColor: \"#bbb7aa35\" }\r\n          : light\r\n          ? { filter: `brightness(${light})` }\r\n          : {}\r\n      }\r\n    >\r\n      <h1 className=\"card__text--large\">\r\n        {(!(hide >= 0) || answer) && lesson[0].words[exercise - 1]}\r\n      </h1>\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardText;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport CardText from \"../../card/cardText\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGameAccent = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lesson[0].words.length / 3;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 3;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  function answerQuestion(state) {\r\n    const answer = Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const cards = [next * 3 + 1, next * 3 + 2, next * 3 + 3];\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGameAccent\",\r\n      });\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            Game.correct();\r\n            Game.delay(2000, () => setNext((prev) => prev + 1), setCleanUp);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            Game.incorrect();\r\n            Game.delay(2000, () => incorrectInput(), setCleanUp);\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game easy-game--accent\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <div className=\"touch-btn\" onClick={handleTouchPlay}>\r\n          Play\r\n        </div>\r\n      )}\r\n      <div className=\"select select--accent\">\r\n        {state.map((cur, index) => (\r\n          <CardText\r\n            key={cur}\r\n            state={cur}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture1/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n        noText={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGameAccent);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 5;\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(isTouchDevice);\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    if (!isTouchDevice) Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"hardGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      const curInput = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${curInput.lecture}/${curInput.exercise}.m4a`);\r\n      Game.delay(2000, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      isTouchDevice && setTouchPlay(true);\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n      else answerQuestion(state, result);\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const currentAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${currentAnswer.lecture}/${currentAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n    });\r\n  }\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Hard Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <div className=\"touch-play\" onClick={handleTouchPlay}>\r\n            {currentRound ? \"Play\" : \"Next Round\"}\r\n          </div>\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 6;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setResults([]);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (200 * correct) / ((1 + gameLimit) * gameLimit + incorrect * 2),\r\n        exercise: \"memoryGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = 1000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setHidden(ref.current.state);\r\n        answerQuestion(ref.current.state);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, (5000 + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      setActive(false);\r\n      revealCard(input);\r\n      Game.delay(2500, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function revealCard(input) {\r\n    const current = [...hidden];\r\n    const hiddenIndex = current.indexOf(input);\r\n    current[hiddenIndex] = -current[hiddenIndex];\r\n    setHidden(current);\r\n  }\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    Game.delay(2000, () => {\r\n      // I dont understand this line\r\n      // if (next !== ref.current.next) return;\r\n\r\n      setCorrect((prev) => prev + 1);\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      const ENDOFROUND = currentRound === cardLimit - 2;\r\n      if (ENDOFROUND) {\r\n        setHidden([]);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        // isTouchDevice && setTouchPlay(true);\r\n        setHidden(state);\r\n        answerQuestion(state, result);\r\n      }\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    setHidden(state);\r\n    Game.delay(1500, () => {\r\n      const curAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n    });\r\n  }\r\n\r\n  function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    Game.delay(500, () => setActive(true));\r\n  }\r\n\r\n  useEffect(() => {\r\n    percent > 0 && setPauseInterval(touchPlay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Memory Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <div className=\"touch-play\" onClick={handleTouchPlay}>\r\n            {currentRound ? \"Play\" : \"Next Round\"}\r\n          </div>\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./reading.css\";\r\n\r\nconst Reading = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 4;\r\n  const cardLimit = 6;\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    setAnswer();\r\n    const totalLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"reading\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  function answerQuestion(state, result = results) {\r\n    const remainingState = state.filter((cur) => {\r\n      const index = result.findIndex((el) => el?.input === cur);\r\n      return index === -1 || result[index].answer !== \"correct\";\r\n    });\r\n\r\n    const answer = Game.answerQuestion({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n      silent: true,\r\n    });\r\n    setAnswer(answer);\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      Game.delay(2000, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n      else answerQuestion(state, result);\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => setActive(true));\r\n  }\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Reading</div>\r\n      <div className=\"text-block\">\r\n        {answer ? lesson[lecture - 1].language[answer - 1] : \"?\"}\r\n      </div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={cur}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            answer={results[index]?.answer}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter correct={correct} incorrect={incorrect} active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(Reading);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./rapidGame.css\";\r\n\r\nconst RapidGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 7;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const results = [];\r\n    setResults(results);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    answerQuestion(cards, results);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else {\r\n      const result =\r\n        (100 * correct) / ((2 * cardLimit - gameLimit + 1) * (gameLimit / 2)) +\r\n        incorrect;\r\n      Game.endGame({ result, exercise: \"rapidGame\", setProgress });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((7 + next) * 1750) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      setActive(false);\r\n      setPauseInterval(true);\r\n      Game.delay(2500, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n        !isTouchDevice && Game.delay(2500, () => setPauseInterval(false));\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, state, answer]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    Game.delay(2000, () => {\r\n      // I dont understand this line\r\n      // if (next !== ref.current.next) return;\r\n\r\n      isTouchDevice && setTouchPlay(true);\r\n      setCorrect((prev) => prev + 1);\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      const ENDOFROUND = currentRound === cardLimit - 2;\r\n      if (ENDOFROUND) setNext((prev) => prev + 1);\r\n      else answerQuestion(state);\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const curAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n      isTouchDevice && setPauseInterval(false);\r\n    });\r\n  }\r\n\r\n  function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    Game.delay(500, () => setActive(true));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPauseInterval(touchPlay);\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Rapid Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <div className=\"touch-play\" onClick={handleTouchPlay}>\r\n            {currentRound ? \"Play\" : \"Next Round\"}\r\n          </div>\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(RapidGame);\r\n","import React from \"react\";\r\nimport Practice from \"./practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"./lesson/lesson\";\r\nimport Task from \"./task/task\";\r\nimport EasyGame from \"./easyGame/easyGame\";\r\nimport EasyGameAccent from \"./easyGame/easyGameAccent\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"./hardGame/hardGame\";\r\nimport MemoryGame from \"./memoryGame/memoryGame\";\r\nimport Reading from \"./reading/reading\";\r\nimport \"./exercise.css\";\r\nimport RapidGame from \"./rapidGame/rapidGame\";\r\n\r\nconst Exercise = ({ lecture, setLecture, location, Game, handleRestart }) => {\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        {location.pathname !== \"/\" && (\r\n          <Link\r\n            to={`/${location.pathname === \"/task\" ? \"\" : \"task\"}`}\r\n            className=\"return\"\r\n          >\r\n            <TiArrowBack />\r\n          </Link>\r\n        )}\r\n        <Route exact path=\"/\">\r\n          <div className=\"reset\" onClick={handleRestart}>\r\n            Reset\r\n          </div>\r\n        </Route>\r\n        <Switch>\r\n          {/* <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/exercise\">\r\n            <Practice lecture={lecture} type=\"exercise\" />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGameAccent\">\r\n            <EasyGameAccent lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/reading\">\r\n            <Reading lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/rapidGame\">\r\n            <RapidGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Lesson setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState =\r\n  saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    case \"RESETPROGRESS\":\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\n\r\nclass GameLogic {\r\n  lecture = 1;\r\n  generateCards = function ({ cardLimit, totalLength, currentLength = 0 }) {\r\n    const cards = new Set();\r\n    let i = 0;\r\n    while (i < cardLimit) {\r\n      let value;\r\n      if ((!totalLength || currentLength) && Math.ceil(Math.random() * 2) === 2)\r\n        value = Math.ceil(Math.random() * currentLength) + totalLength;\r\n      else value = Math.ceil(Math.random() * (totalLength + currentLength));\r\n\r\n      if (!cards.has(value)) {\r\n        i++;\r\n        cards.add(value);\r\n      }\r\n    }\r\n    return [...cards];\r\n  };\r\n\r\n  playCards = function ({\r\n    cardLimit,\r\n    setSoundState,\r\n    gameSpeed,\r\n    cards,\r\n    autoPlay,\r\n    setCleanUp,\r\n  }) {\r\n    for (let i = 0; i < cardLimit; i++) {\r\n      this.delay(\r\n        gameSpeed * i,\r\n        () => {\r\n          autoPlay &&\r\n            Sound.start(`files/lecture${this.lecture}/${cards[i]}.m4a`);\r\n          setSoundState(i);\r\n        },\r\n        setCleanUp\r\n      );\r\n    }\r\n    return gameSpeed * cardLimit;\r\n    // this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n  };\r\n  endGame = function ({ result, exercise, setProgress }) {\r\n    setProgress({ result, exercise, lecture: this.lecture });\r\n    alert(\"result: \" + result + \"%\");\r\n  };\r\n\r\n  answerQuestion = function ({ state, cardLimit, silent }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    !silent && Sound.start(`files/lecture${this.lecture}/${state[value]}.m4a`);\r\n    return state[value];\r\n  };\r\n  answerQuestionMultLectures = function ({ state, cardLimit }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    const { lecture, exercise } = this.displayCard(state[value], this.lecture);\r\n    Sound.start(`files/lecture${lecture}/${exercise}.m4a`);\r\n    return state[value];\r\n  };\r\n  correct = function () {\r\n    Sound.start(\"files/yes.m4a\");\r\n  };\r\n  incorrect = function () {\r\n    Sound.start(\"files/no.m4a\");\r\n  };\r\n  delay = function (timeout, cb, setCleanUp) {\r\n    const timeOut = setTimeout(() => {\r\n      cb();\r\n      setCleanUp &&\r\n        setCleanUp((prev) => {\r\n          const index = prev.indexOf(timeOut);\r\n          index > -1 && prev.splice(index, 1);\r\n          return prev;\r\n        });\r\n    }, timeout);\r\n    setCleanUp && setCleanUp((prev) => [...prev, timeOut]);\r\n  };\r\n  isTouchDevice = () =>\r\n    \"ontouchstart\" in window ||\r\n    navigator.maxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0;\r\n  totalCards = () =>\r\n    lesson\r\n      .slice(0, this.lecture - 1)\r\n      .reduce(\r\n        (total, cur) =>\r\n          (typeof total === \"number\" ? total : total.words.length) +\r\n          cur.words.length,\r\n        0\r\n      );\r\n  displayCard = function (state, lecture) {\r\n    let runningTotal = state,\r\n      currentLecture,\r\n      exercise,\r\n      accumulation = 0;\r\n    for (let i = 0; i < lecture; i++) {\r\n      const current = lesson[i].words.length;\r\n      if (runningTotal - current <= 0) {\r\n        exercise = state - accumulation;\r\n        currentLecture = i + 1;\r\n        break;\r\n      }\r\n      runningTotal -= current;\r\n      accumulation += current;\r\n    }\r\n    return { exercise, lecture: currentLecture, state };\r\n  };\r\n  setResult = function ({ input, answer, results, state }) {\r\n    const current = [...results];\r\n    const index = state.findIndex((cur) => cur === input);\r\n    current[index] = { input, answer };\r\n    return current;\r\n  };\r\n  clearIncorrect = function (results) {\r\n    const result = results.map((cur) =>\r\n      cur?.answer === \"correct\" ? cur : { ...cur, answer: \"\" }\r\n    );\r\n    return result;\r\n  };\r\n  remainingState = function ({ state, results }) {\r\n    return state.filter((cur) => {\r\n      const index = results.findIndex((el) => el?.input === cur);\r\n      return index === -1 || results[index].answer !== \"correct\";\r\n    });\r\n  };\r\n  answerQuestions = function ({ state, results }) {\r\n    const remainingState = this.remainingState({ state, results });\r\n    return this.answerQuestionMultLectures({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n    });\r\n  };\r\n}\r\n\r\nexport default GameLogic;\r\n","import React, { useState } from \"react\";\nimport Exercise from \"./component/exercise/exercise\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport GameLogic from \"./component/exercise/gameLogic\";\nimport { resetProgress } from \"./action\";\nimport \"./App.css\";\n// import { Progress } from \"./progress\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem(\"Yourba-lecture\") || \"1\";\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const Game = new GameLogic();\n  Game.lecture = lecture;\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    Game.lecture = value;\n    window.localStorage.setItem(\"Yourba-lecture\", JSON.stringify(value));\n  };\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  const handleRestart = () => {\n    if (window.confirm(\"Are you sure you want to delete the progress?\"))\n      store.dispatch(resetProgress());\n  };\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Exercise\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n                Game={Game}\n                handleRestart={handleRestart}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}