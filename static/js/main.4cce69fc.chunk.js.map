{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/practice/practice.jsx","component/progress/progress.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/exercise/gameLogic.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/exercise/easyGame/easyGame.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/exercise.jsx","img/logo.png","component/header/header.jsx","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","Slider","lecture","auto","random","exercise","setExercise","max","lesson","lessons","length","useEffect","start","randomNumber","prev","value","Math","ceil","className","disabled","onClick","style","backgroundImage","langauge","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","title","Progress","Component","percentage","props","color","percent","top","right","bottom","left","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","Object","values","reduce","total","currentValue","to","fontWeight","task","GiGymBag","easyGame","SiWeasyl","hardGame","GiDiamondHard","memoryGame","FaMemory","entries","key","Value","setProgress","payload","type","generateCards","cardLimit","totalCards","setState","lastLectureLength","cards","Set","i","has","add","playCards","setSoundState","gameSpeed","setCleanUp","delay","endGame","result","alert","answerQuestion","floor","answerQuestionMultLectures","displayCard","currentLecture","position","correct","incorrect","timeout","cb","timeOut","setTimeout","indexOf","splice","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","slice","runningTotal","accumulation","GameFooter","audio","active","langaugeText","setLangaugeText","replace","split","Card","memo","hide","brightness","backgroundColor","filter","undefined","dispatch","soundState","answer","setAnswer","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","unMount","gameLimit","gameLogic","forEach","clearTimeout","nextRound","sort","handleOnClick","useCallback","input","HardGame","setCorrect","inputLecture","answerLecture","cardLecture","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","ref","hiddenIndex","class","Exercise","location","pathname","path","Header","src","logo","alt","saveState","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cce69fc.chunk.js","sourcesContent":["class SoundClass {\r\n    #audio = new Audio();\r\n    url = \"\";\r\n    stop() {\r\n        this.#audio.pause();\r\n        this.#audio.currentTime = 0;\r\n    }\r\n    start(url) {\r\n        this.stop();\r\n        this.#audio = new Audio(url);\r\n        this.url = url;\r\n        this.#audio.play();\r\n    }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;","import React, { useEffect, useState } from \"react\";\r\nimport { lesson } from '../../../../data.json';\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.css\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  useEffect(() => auto && Sound.start(`files/lecture${lecture}/${exercise}.m4a`), [exercise]);\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"switch switch--next\"\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n      ></button>\r\n      <div className=\"slider__img-container\">\r\n        <div\r\n          className=\"slider__img\"\r\n          onClick={() => Sound.start(`files/lecture${lecture}/${exercise}.m4a`)}\r\n          style={{backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`}}\r\n        ></div>\r\n        <h5>{lesson[lecture - 1].langauge?.[exercise - 1]}</h5>\r\n        <h5>{lesson[lecture - 1].lessons[exercise - 1]}</h5>\r\n      </div>\r\n      <button\r\n        className=\"switch\"\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => setRandom(random ? false : true)}\r\n      >\r\n        {random ? 'Normal' : 'Random'}\r\n      </button>\r\n      <div className=\"btn\" onClick={() => setAuto(!auto)}>\r\n        {auto ? \"Auto\" : \"Manual\"}\r\n      </div>\r\n      <div className=\"btn\" onClick={() => setAutoPlay(!autoPlay)}>\r\n        {autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport './practice.css';\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), [])\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if(autoPlay) setIntervalId(\r\n      setInterval(() => setExercise(prev => prev < max ? prev + 1 : 1), 4000)\r\n    )\r\n  }, [autoPlay])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"practice\">\r\n        <Slider \r\n          lecture={lecture} \r\n          auto={auto} \r\n          random={random}\r\n          exercise={exercise} \r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;","import React from \"react\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\nimport \"./progress.css\";\r\n\r\nconst Progress = ({ className, Component, percentage = 0, ...props }) => {\r\n  const color = { complete: 'rgb(180, 107, 83)', incomplete: 'rgb(102, 72, 62)' };\r\n  const percent = {\r\n    top: {\r\n      backgroundImage: `linear-gradient(to right, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    right: {\r\n      backgroundImage: `linear-gradient(to bottom, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    bottom: {\r\n      backgroundImage: `linear-gradient(to left, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    left: {\r\n      backgroundImage: `linear-gradient(to top, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n  };\r\n\r\n  if (percentage < 12.5)\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%, ${color.complete} ${\r\n      50 + percentage * 4\r\n    }%, ${color.incomplete} ${50 + percentage * 4}%)`;\r\n  else if (percentage < 37.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} ${\r\n      (percentage - 12.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 12.5) * 4}%)`;\r\n  } else if (percentage < 62.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} ${\r\n      (percentage - 37.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 37.5) * 4}%)`;\r\n  } else if (percentage < 87.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} ${\r\n      (percentage - 62.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 62.5) * 4}%)`;\r\n  } else {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.complete} ${\r\n      (percentage - 87.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 87.5) * 4}%, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n  }\r\n\r\n  return (\r\n    <div className={`progress-container ${className}`}>\r\n      <div className=\"progress__top\" style={percent.top}></div>\r\n      <div className=\"progress__body\">\r\n        <div className=\"progress__side\" style={percent.left}></div>\r\n        <Component {...props} />\r\n        {percentage >= 75 && (\r\n          <div className=\"progress__pass\">\r\n            <TiTickOutline className=\"progress__pass-img\" />\r\n          </div>\r\n        )}\r\n        <div className=\"progress__side\" style={percent.right}></div>\r\n      </div>\r\n      <div className=\"progress__bottom\" style={percent.bottom}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Progress from \"../../progress/progress\";\r\nimport \"./lesson.css\";\r\n\r\nconst Lesson = ({ setLecture, progress }) => {\r\n\r\n  const noOfExercise = 3;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(lesson.map((cur, index) => {\r\n      const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress ? Object.values(levelProgress) : [0];\r\n        const percentage = levelProgressArray.reduce((total, currentValue) => total + currentValue) / noOfExercise;         \r\n        percentage >= 75 && setPassed(prev => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n    }))\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Select Level</div>\r\n      <div className=\"lesson__length\">{passed} / {lesson.length}</div>\r\n        {progression.map((cur, index) => \r\n          <Progress\r\n            key={index}\r\n            Component={() => (\r\n              <Link\r\n                key={index}\r\n                className=\"lesson__container\"\r\n                to=\"/task\"\r\n                onClick={() => setLecture(index + 1)}\r\n              >\r\n                <div\r\n                  className=\"lesson__img\"\r\n                  style={{backgroundImage: `url(./img/lecture${index + 1}/1.jpg)`}}\r\n                />\r\n                <div style={{ fontWeight: 700 }}>{cur.title}</div>\r\n              </Link>\r\n            )}\r\n            percentage={cur.percentage}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state\r\n})\r\n\r\nexport default connect(mapStateToProps)(Lesson);","import React from \"react\";\r\nimport { GiDiamondHard, GiGymBag } from \"react-icons/gi\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { GiBugleCall } from \"react-icons/gi\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  const task = {\r\n    // lesson: GrScheduleNew,\r\n    exercise: GiGymBag,\r\n    easyGame: SiWeasyl,\r\n    // speaking: IoMdMicrophone,\r\n    hardGame: GiDiamondHard,\r\n    memoryGame: FaMemory,\r\n    // recall: GiBugleCall,\r\n  };\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"title\">Select Task</div>\r\n      <div className=\"task__select\">\r\n        {Object.entries(task).map(([key, Value], index) => {\r\n          return (\r\n            <Progress\r\n              key={index}\r\n              className=\"task__box\"\r\n              Component={() => (\r\n                <Link className=\"task__container\" to={key}>\r\n                  <Value className=\"task__img\" />\r\n                  <div className=\"task__title\">{key}</div>\r\n                </Link>\r\n              )}\r\n              percentage={progress[lecture]?.[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });","import { lesson } from '../../data.json';\r\nimport Sound from '../../Sound';\r\n\r\nexport default {\r\n    generateCards: function({ cardLimit, totalCards, setState, lastLectureLength }) {\r\n        const cards = new Set();\r\n        let i = 0;\r\n        while (i < cardLimit) {\r\n          let value; \r\n          if (!totalCards || lastLectureLength && Math.ceil(Math.random() * 2) === 2) {\r\n              value = Math.ceil(Math.random() * lastLectureLength) + totalCards;\r\n            } else { value = Math.ceil(Math.random() * totalCards); }\r\n          if (!cards.has(value)) {\r\n            i++;\r\n            cards.add(value);\r\n          }\r\n        }\r\n        setState([...cards]);\r\n        return [...cards]\r\n      },\r\n    playCards: function({ cardLimit, setSoundState, gameSpeed, cards, lecture, autoPlay, setCleanUp }) {\r\n        for (let i = 0; i < cardLimit; i++) {\r\n            this.delay(gameSpeed * i, () => {\r\n                autoPlay && Sound.start(`files/lecture${lecture}/${cards[i]}.m4a`);\r\n                setSoundState(i);\r\n            }, setCleanUp);\r\n        }\r\n        this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n    },\r\n    endGame: function({ result, exercise, lecture, setProgress }) {\r\n        setProgress({ result, exercise, lecture });\r\n        alert(\"result: \" + result + \"%\");\r\n    },\r\n    answerQuestion: function({ state, lecture, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        Sound.start(`files/lecture${lecture}/${state[value]}.m4a`);\r\n        return state[value];\r\n    },\r\n    answerQuestionMultLectures: function({ state, lecture, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        const { lecture: currentLecture, position } = this.displayCard(state[value], lecture);\r\n        Sound.start(`files/lecture${currentLecture}/${position}.m4a`);\r\n        return state[value];\r\n    },\r\n    correct: function() { Sound.start(\"files/yes.m4a\") },\r\n    incorrect: function() { Sound.start(\"files/no.m4a\") },\r\n    delay: function(timeout, cb, setCleanUp) { \r\n        const timeOut = setTimeout(() => { \r\n            cb();\r\n            setCleanUp && setCleanUp(prev => {\r\n                const index = prev.indexOf(timeOut);\r\n                index > -1 && prev.splice(index, 1);\r\n                return prev;\r\n            })\r\n        }, timeout);\r\n        setCleanUp && setCleanUp(prev => [...prev, timeOut]);\r\n    },\r\n    isTouchDevice: () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0,\r\n    totalCards: (lecture) => lesson.slice(0, lecture - 1).reduce((total, cur) =>\r\n        (typeof total === \"number\" ? total : total.lessons.length) + cur.lessons.length\r\n    , 0),\r\n    displayCard: function(state, lecture) {\r\n        let runningTotal = state, currentLecture, position, accumulation = 0;\r\n        for (let i = 0; i < lecture; i++) {\r\n          const current = lesson[i].lessons.length;\r\n          if (runningTotal - current <= 0) {\r\n            position = state - accumulation;\r\n            currentLecture = i + 1;\r\n            break;\r\n          }\r\n          runningTotal -= current;\r\n          accumulation +=current\r\n        }\r\n        return { position, lecture: currentLecture }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { GiSpeaker } from 'react-icons/gi';\r\nimport { lesson } from '../../data.json';\r\nimport Sound from '../../Sound';\r\nimport './gameFooter.css';\r\n\r\nconst GameFooter = ({ percent = 100, audio, correct, incorrect, active }) => {\r\n    const [langaugeText, setLangaugeText] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        const [exercise, lecture] = Sound.url.replace(\"files/lecture\", \"\").replace(\".m4a\", \"\").split(\"/\");\r\n        setTimeout(() => {\r\n            if (exercise !== 'files' && exercise > 0)\r\n                setLangaugeText(lesson[exercise - 1].langauge?.[lecture - 1]);\r\n        }, 1500);\r\n    }, [Sound.url])\r\n\r\n    return (\r\n        <div\r\n            className=\"game__footer\"\r\n            style={{\r\n            backgroundImage: `linear-gradient(to right, rgb(90 44 29 / 100%) ${percent}%, rgb(90 44 29 / 23%) ${percent}%)`,\r\n            }}\r\n        >\r\n            <div\r\n            className=\"score score__play\"\r\n            onClick={() => active && Sound.start(audio)}\r\n            >\r\n                <GiSpeaker />\r\n            </div>\r\n            <h5 className=\"langauge-text\">{langaugeText}</h5>\r\n            <div className=\"score score__correct\">{correct}</div>\r\n            <div className=\"score score__incorrect\">{incorrect}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameFooter;","import React, { memo } from 'react';\r\nimport { lesson } from '../../data.json';\r\nimport './card.css';\r\n\r\nconst Card = memo(function Card({ state, lecture, exercise, onClick, hide, brightness }) {\r\n    return (\r\n        <div \r\n          className=\"card\" \r\n          onClick={() => onClick(state)} \r\n          style={\r\n              hide ? \r\n              { backgroundColor: \"#bbb7aa35\" } : \r\n              brightness ? \r\n              { filter: `brightness(${brightness})`} : \r\n          {}}>\r\n            <div\r\n              className=\"img\"\r\n              style={hide >= 0 ? {} : { backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)` }}\r\n            />\r\n            {!(hide >= 0) && <h5 className=\"card__text\">{lesson[lecture - 1].lessons[exercise - 1]}</h5>}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Card;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./easyGame.css\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\n\r\nconst EasyGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = gameLogic.isTouchDevice();\r\n\r\n  useEffect(() => () => unMount.current.forEach(cur => clearTimeout(cur)), []);\r\n  \r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      setAnswer(gameLogic.answerQuestion({ state, lecture, cardLimit }));\r\n      setState(prev => prev.sort(() => (Math.random() > .5) ? 1 : -1));\r\n      setActive(true);\r\n    }\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const totalCards = lesson[lecture - 1].lessons.length;\r\n    const cards = gameLogic.generateCards({ cardLimit, totalCards, setState });\r\n    if(isTouchDevice) setActive(true);\r\n    else gameLogic.playCards({ cards, cardLimit, gameSpeed, setSoundState, lecture, setCleanUp, autoPlay: true });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else gameLogic.endGame({ \r\n      setProgress,\r\n      result: (gameLimit * 100) / (gameLimit + incorrect),\r\n      exercise: \"easyGame\",\r\n      lecture,\r\n    });\r\n  };\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    if (!active) return;\r\n    Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n    if (isTouchDevice && !touchPlay) return;\r\n    setActive(false);\r\n    gameLogic.delay(gameSpeed, () => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        gameLogic.delay(2000, () => {\r\n          setNext((prev) => prev + 1);\r\n        }, setCleanUp);\r\n      } else {\r\n        gameLogic.incorrect();\r\n        gameLogic.delay(2000, () => {\r\n          Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n          setIncorrect((prev) => prev + 1);\r\n          setActive(true);\r\n        }, setCleanUp);\r\n      }\r\n    }, setCleanUp);\r\n  }, [active]);\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>Play</div>}\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card \r\n            key={index} \r\n            state={cur} \r\n            lecture={lecture} \r\n            exercise={cur} \r\n            onClick={handleOnClick} \r\n            brightness={index === soundState ? 2 : 1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter \r\n        audio={`files/lecture${lecture}/${answer}.m4a`} \r\n        correct={next} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const displayCard = gameLogic.displayCard;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const cardLimit = next + 5;\r\n    const totalCards = gameLogic.totalCards(lecture);\r\n    const lastLectureLength = lesson[lecture - 1].lessons.length\r\n    gameLogic.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) {\r\n      nextRound()\r\n    } else {\r\n      gameLogic.endGame({ \r\n        result: (100 * (correct - incorrect)) / correct, \r\n        exercise: \"hardGame\", \r\n        lecture, \r\n        setProgress \r\n      })\r\n    }\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === next + 5) {\r\n      setTimeout(() => { answerQuestion(state) }, 2500);\r\n    }\r\n  }, [state]);\r\n  \r\n  function answerQuestion(state) {\r\n    setAnswer(gameLogic.answerQuestionMultLectures({ state, lecture, cardLimit: state.length }));\r\n    gameLogic.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    setActive(false);\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    Sound.start(`files/lecture${inputLecture}/${position}.m4a`);\r\n    gameLogic.delay(2000, () => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        setCorrect((prev) => prev + 1);\r\n        gameLogic.delay(1500, () => {\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          if (current.length === 1) setNext((prev) => prev + 1);\r\n          else answerQuestion(current);\r\n        });\r\n      } else {\r\n        gameLogic.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        gameLogic.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          Sound.start(`files/lecture${answerLecture}/${position}.m4a`);\r\n          setActive(true);\r\n        });\r\n      }\r\n    });\r\n  }, [active]);\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Hard Game</div>\r\n      <div className=\"select\">\r\n        {state.map((cur) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return <Card key={cur} state={cur} lecture={cardLecture} exercise={position} onClick={handleOnClick} />\r\n        })}\r\n      </div>\r\n      <GameFooter \r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`} \r\n        correct={correct} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = gameLogic.displayCard;\r\n  const memoryGame = next < 5;\r\n  const isTouchDevice = gameLogic.isTouchDevice() && !memoryGame;\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 10;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setPercent(100);\r\n    const totalCards = gameLogic.totalCards(lecture);\r\n    const lastLectureLength = lesson[lecture - 1].lessons.length\r\n    gameLogic.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), [])\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else gameLogic.endGame({ \r\n        result: (200 * correct) / (((1 + gameLimit) * gameLimit) + (incorrect * 2)),\r\n        exercise: \"memoryGame\",\r\n        lecture,\r\n        setProgress \r\n      });\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === cardLimit) {\r\n      !memoryGame && answerQuestion(state);\r\n    }\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = memoryGame ? 1000 : 3000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        if (memoryGame) {\r\n          setHidden(ref.current.state);\r\n          answerQuestion(ref.current.state);\r\n        } else {\r\n          setNext((prev) => prev + 1);\r\n        }\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((memoryGame ? 5000 : 12000) + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    if (!active) return;\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    Sound.start(`files/lecture${inputLecture}/${position}.m4a`);\r\n    setActive(false);\r\n    if (memoryGame) {\r\n      const current = [...hidden];\r\n      const hiddenIndex = current.indexOf(input);\r\n      current[hiddenIndex] = -current[hiddenIndex];\r\n      setHidden(current);\r\n    } else setPauseInterval(true);\r\n    gameLogic.delay(2500, () => {\r\n      const correct = input === answer;\r\n      if (correct) {\r\n        gameLogic.correct();\r\n        gameLogic.delay(2000, () => {\r\n          if (next !== ref.current.next) return;\r\n          isTouchDevice && setTouchPlay(true);\r\n          setCorrect((prev) => prev + 1);\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          memoryGame && setHidden(current);\r\n          if (current.length === 1) {\r\n            memoryGame && setHidden([]);\r\n            setNext((prev) => prev + 1);\r\n          } else answerQuestion(current);\r\n        });\r\n      } else {\r\n        gameLogic.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        memoryGame && setHidden(state);\r\n        gameLogic.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          Sound.start(`files/lecture${answerLecture}/${position}.m4a`);\r\n          setActive(true);\r\n        })\r\n      }\r\n      !memoryGame && setPauseInterval(false);\r\n    });\r\n  }, [active]);\r\n\r\n  function answerQuestion(state) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    setAnswer(gameLogic.answerQuestionMultLectures({ state, lecture, cardLimit: state.length }));\r\n    gameLogic.delay(2000, () => setActive(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPauseInterval(touchPlay);\r\n  }, [touchPlay])\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Memory Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay && <div class=\"touch-play\" onClick={handleTouchPlay}>Play</div>}\r\n        {state.map((cur, index) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return (\r\n            <Card \r\n              key={index} \r\n              state={cur} \r\n              lecture={cardLecture} \r\n              exercise={position} \r\n              onClick={handleOnClick} \r\n              hide={hidden[index]}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n      <GameFooter \r\n        percent={percent} \r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`} \r\n        correct={correct} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);","import React, { useState } from \"react\";\r\nimport Practice from \"./practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"./lesson/lesson\";\r\nimport Task from \"./task/task\";\r\nimport EasyGame from \"./easyGame/easyGame\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"./hardGame/hardGame\";\r\nimport MemoryGame from \"./memoryGame/memoryGame\";\r\nimport \"./exercise.css\";\r\n\r\nconst Exercise = ({ lecture, setLecture, location }) => {\r\n\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        <Link\r\n          to={`/${location.pathname !== \"/task\" ? \"task\" : \"\"}`}\r\n          className=\"return\"\r\n        >\r\n          {location.pathname !== \"/\" && <TiArrowBack />}\r\n        </Link>\r\n        <Switch>\r\n          {/* <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/exercise\">\r\n            <Practice\r\n              lecture={lecture}\r\n              type=\"exercise\"\r\n            />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Lesson setLecture={setLecture}/>\r\n          </Route> \r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState = saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useState } from \"react\";\nimport Exercise from \"./component/exercise/exercise\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\n// import { Progress } from \"./progress\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport \"./App.css\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem('Yourba-lecture') || '1';\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    window.localStorage.setItem('Yourba-lecture', JSON.stringify(value));\n  }\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header setLecture={setSaveLecture} />\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Exercise\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}