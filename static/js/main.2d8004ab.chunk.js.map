{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/button/button.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/navigation/navigation.jsx","component/exercise/practice/practice.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/exercise/easyGame/easyGame.jsx","component/card/cardText.jsx","component/exercise/easyGame/easyGameAccent.jsx","component/touchPlay/touchPlay.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/reading/reading.jsx","component/exercise/rapidGame/rapidGame.jsx","img/logo.png","component/home/home.jsx","pages/pages.jsx","reducer.js","component/exercise/gameLogic.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","a","getDuration","duration","playDelay","audio","Promise","resolve","addEventListener","delay","setTimeout","Slider","lecture","auto","random","exercise","setExercise","max","lesson","words","length","useEffect","randomNumber","prev","value","Math","ceil","className","disabled","onClick","src","alt","language","Button","forwardRef","ref","content","props","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Navigation","challenge","to","title","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","style","backgroundImage","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","percentage","Object","values","reduce","total","currentValue","noOfExercise","description","toFixed","width","task","location","easy","hard","reading","memory","rapid","entries","key","setProgress","payload","type","GameFooter","percent","correct","incorrect","active","noText","languageText","setlanguageText","replace","split","Card","memo","hide","brightness","answer","Answer","TiTick","TiTimes","light","setLight","filter","undefined","dispatch","Game","setState","soundState","setSoundState","setAnswer","results","setResults","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","setCleanUp","buttonRef","createRef","unMount","gameLimit","gameSpeed","isTouchDevice","answerQuestion","cardLimit","sort","forEach","clearTimeout","totalLength","cards","generateCards","playCards","nextRound","endGame","result","scrollIntoView","behaviour","handleOnClick","useCallback","input","setResult","incorrectInput","marginBottom","CardText","TouchPlay","round","HardGame","currentRound","setCurrentRound","setCorrect","displayCard","answerQuestions","totalCards","currentLength","curInput","correctInput","clearIncorrect","currentAnswer","display","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","inputLecture","revealCard","hiddenIndex","indexOf","curAnswer","Reading","remainingState","findIndex","el","silent","activeAnswer","setActiveAnswer","selectRef","behavior","handleTouchPlay","Home","setDisplay","logo","Pages","handleRestart","path","saveState","window","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","GameLogic","Set","i","has","add","start","alert","floor","answerQuestionMultLectures","timeout","cb","timeOut","splice","navigator","maxTouchPoints","msMaxTouchPoints","slice","currentLecture","runningTotal","accumulation","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","confirm","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d8004ab.chunk.js","sourcesContent":["class SoundClass {\r\n  #audio = new Audio();\r\n  url = \"\";\r\n  stop() {\r\n    this.#audio.pause();\r\n    this.#audio.currentTime = 0;\r\n  }\r\n  start(url) {\r\n    this.stop();\r\n    this.#audio = new Audio(url);\r\n    this.url = url;\r\n    this.#audio.play();\r\n  }\r\n  async play(url) {\r\n    this.stop();\r\n    this.#audio = new Audio(url);\r\n    this.url = url;\r\n    const duration = await this.getDuration(this.#audio);\r\n    await this.playDelay(duration);\r\n  }\r\n  getDuration(audio) {\r\n    return new Promise(function (resolve) {\r\n      audio.addEventListener(\"loadedmetadata\", function () {\r\n        resolve(audio.duration * 1000);\r\n      });\r\n    });\r\n  }\r\n  playDelay(delay) {\r\n    return new Promise((resolve) => {\r\n      this.#audio.play();\r\n      setTimeout(() => resolve(), delay);\r\n    });\r\n  }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;\r\n","import React, { useEffect } from \"react\";\r\nimport { lesson } from \"../../../../data.json\";\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.scss\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(\r\n    () => auto && Sound.play(`files/lecture${lecture}/${exercise}.m4a`),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [exercise]\r\n  );\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n        className=\"prev\"\r\n      >\r\n        <img src=\"./img/return.svg\" alt=\"<\" />\r\n      </button>\r\n      <div className=\"slider__text\">\r\n        <div>{lesson[lecture - 1].words[exercise - 1]}</div>\r\n        <div>{lesson[lecture - 1].language?.[exercise - 1]}</div>\r\n      </div>\r\n      <button\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n        className=\"next\"\r\n      >\r\n        <img src=\"./img/return.svg\" alt=\">\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"./button.scss\";\r\n\r\nconst Button = forwardRef(({ className, content, ...props }, ref) => {\r\n  return (\r\n    <div ref={ref} className={`button ${className}`} {...props}>\r\n      {content}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Button\r\n        onClick={() => setRandom(random ? false : true)}\r\n        content={random ? \"Normal\" : \"Random\"}\r\n      />\r\n      <Button\r\n        onClick={() => setAuto(!auto)}\r\n        content={auto ? \"Auto\" : \"Manual\"}\r\n      />\r\n      <Button\r\n        onClick={() => setAutoPlay(!autoPlay)}\r\n        content={autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../button/button\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = ({ challenge, lecture }) => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <Link to=\"/task\" className=\"return\">\r\n        <img src=\"./img/return.svg\" alt=\"<\" />\r\n      </Link>\r\n      <Button className=\"navigation-icon\" content=\"Learn Yoruba\" />\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"navigation__exercise\">\r\n        <img src=\"./img/exercise.svg\" alt=\"\" />\r\n        <span>{challenge}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport \"./practice.scss\";\r\nimport Sound from \"../../../Sound\";\r\nimport Navigation from \"../navigation/navigation\";\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), []);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if (autoPlay)\r\n      setIntervalId(\r\n        setInterval(\r\n          () => setExercise((prev) => (prev < max ? prev + 1 : 1)),\r\n          4000\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay]);\r\n\r\n  return (\r\n    <div className=\"practice\">\r\n      <Navigation challenge=\"Exercise\" lecture={lecture} />\r\n      <div className=\"practice__content\">\r\n        <div\r\n          className=\"practice__img\"\r\n          onClick={() => Sound.play(`files/lecture${lecture}/${exercise}.m4a`)}\r\n          style={{\r\n            backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n          }}\r\n        ></div>\r\n\r\n        <Slider\r\n          lecture={lecture}\r\n          auto={auto}\r\n          random={random}\r\n          exercise={exercise}\r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Button from \"../../button/button\";\r\nimport \"./lesson.scss\";\r\n\r\nconst Lesson = ({ setLecture, lecture, progress }) => {\r\n  const noOfExercise = 5;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(\r\n      lesson.map((cur, index) => {\r\n        const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress\r\n          ? Object.values(levelProgress)\r\n          : [0];\r\n        const percentage =\r\n          levelProgressArray.reduce(\r\n            (total, currentValue) => total + currentValue\r\n          ) / (lecture > 1 ? noOfExercise : noOfExercise - 1);\r\n        percentage >= 75 && setPassed((prev) => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Choose your interests</div>\r\n      <div className=\"sub-title\">\r\n        Choose your catergory and procceed to start learining youruba\r\n      </div>\r\n      {/* <div className=\"lesson__length\">\r\n        {passed} / {lesson.length}\r\n      </div> */}\r\n      <div>\r\n        {progression.map((cur, index) => (\r\n          <div key={index} className=\"lesson__container\">\r\n            <div className=\"lesson__container-top\">\r\n              <div\r\n                className=\"lesson__img\"\r\n                style={{\r\n                  backgroundImage: `url(./img/lecture${index + 1}/cover.svg)`,\r\n                }}\r\n              />\r\n              <div className=\"lesson__content\">\r\n                <div className=\"lesson__title\">{cur.title}</div>\r\n                <div className=\"lesson__description\">{cur.description}</div>\r\n                <Link to=\"/task\" onClick={() => setLecture(index + 1)}>\r\n                  <Button content={\"Continue\"} />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div className=\"progress-bar__text\">\r\n                {cur.percentage.toFixed(1)}%\r\n              </div>\r\n              <div\r\n                className=\"progress-bar__percentage\"\r\n                style={{ width: cur.percentage + \"%\" }}\r\n              ></div>\r\n            </div>\r\n            {/* percentage={cur.percentage} */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lesson);\r\n","import React from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// import { GiDiamondHard, GiGymBag, GiBookCover } from \"react-icons/gi\";\r\n// import { SiWeasyl } from \"react-icons/si\";\r\n// import { FaMemory } from \"react-icons/fa\";\r\n// import { GiFastArrow } from \"react-icons/gi\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.scss\";\r\nimport Button from \"../../button/button\";\r\n\r\nconst Task = ({ lecture, progress, location }) => {\r\n  // const task = {\r\n  //   // lesson: GrScheduleNew,\r\n  //   exercise: GiGymBag,\r\n  //   [lecture === 1 ? \"easyGameAccent\" : \"easyGame\"]: SiWeasyl,\r\n  //   // speaking: IoMdMicrophone,\r\n  //   hardGame: GiDiamondHard,\r\n  //   reading: GiBookCover,\r\n  //   memoryGame: FaMemory,\r\n  //   rapidGame: GiFastArrow,\r\n  //   // recall: GiBugleCall,\r\n  // };\r\n  const task = {\r\n    exercise: \"exercise\",\r\n    easy: lecture === 1 ? \"easyGameAccent\" : \"easyGame\",\r\n    hard: \"hardGame\",\r\n    reading: \"reading\",\r\n    memory: \"memoryGame\",\r\n    rapid: \"rapidGame\",\r\n  };\r\n\r\n  if (lecture === 1) delete task.reading;\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <Link to=\"/\" className=\"return\">\r\n        <img src=\"./img/return.svg\" alt=\"<\" />\r\n      </Link>\r\n      <Button className=\"task-icon\" content=\"Learn Yoruba\" />\r\n      <img\r\n        className=\"task__cover-img\"\r\n        alt=\"\"\r\n        src={`./img/lecture${lecture}/cover.svg`}\r\n      />\r\n      <div className=\"task__content\">\r\n        <div className=\"task__title\">{lesson[lecture - 1].title}</div>\r\n        <div className=\"task__text\">Select Challenge</div>\r\n        <div className=\"task__select\">\r\n          {Object.entries(task).map(([key, value], index) => {\r\n            return (\r\n              <div key={index} className=\"task__container\" to={key}>\r\n                <img className=\"task__icon\" src={`./img/${key}.svg`} alt=\"\" />\r\n                <div className=\"task__challenge\">{key}</div>\r\n                {index > 0 && (\r\n                  <div className=\"task__progress\">\r\n                    {progress[lecture]?.[value]?.toFixed(1) || 0}%\r\n                  </div>\r\n                )}\r\n                <Link to={value}>\r\n                  <img className=\"task__icon\" src=\"./img/advance.svg\" alt=\"\" />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);\r\n","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const resetProgress = () => ({ type: \"RESETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\nimport \"./gameFooter.css\";\r\n\r\nconst GameFooter = ({\r\n  percent = 100,\r\n  audio,\r\n  correct,\r\n  incorrect,\r\n  active,\r\n  noText,\r\n}) => {\r\n  const [languageText, setlanguageText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (noText) return;\r\n    const [exercise, lecture] = Sound.url\r\n      .replace(\"files/lecture\", \"\")\r\n      .replace(\".m4a\", \"\")\r\n      .split(\"/\");\r\n    setTimeout(() => {\r\n      if (exercise !== \"files\" && exercise > 0) {\r\n        setlanguageText(lesson[exercise - 1].language?.[lecture - 1]);\r\n        setTimeout(() => setlanguageText(\"\"), 3000);\r\n      }\r\n    }, 1500);\r\n    // eslint-disable-next-line\r\n  }, [Sound.url]);\r\n\r\n  return (\r\n    <div\r\n      className=\"game__footer\"\r\n      style={{\r\n        backgroundImage: `linear-gradient(to right, #054d54 ${percent}%, #054d5459 ${percent}%)`,\r\n      }}\r\n    >\r\n      {audio && (\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={async () => active && Sound.play(audio)}\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n      )}\r\n      <h5 className=\"language-text\">{languageText}</h5>\r\n      <div className=\"score score__correct\">{correct}</div>\r\n      <div className=\"score score__incorrect\">{incorrect}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFooter;\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst Card = memo(function Card({\r\n  state,\r\n  lecture,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    onClick(state);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={!hide && light ? { filter: `brightness(${light})` } : {}}\r\n    >\r\n      <div\r\n        className=\"img\"\r\n        style={\r\n          hide >= 0 && !answer\r\n            ? {}\r\n            : {\r\n                backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n              }\r\n        }\r\n      />\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n      {!(hide >= 0) && (\r\n        <h5 className=\"card__text\">\r\n          {lesson[lecture - 1].words[exercise - 1]}\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React, {\r\n  createRef,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport Button from \"../../button/button\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const buttonRef = createRef();\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => buttonRef.current?.scrollIntoView({ behaviour: \"smooth\" }));\r\n\r\n  async function answerQuestion(state) {\r\n    const answer = await Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGame\",\r\n      });\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const totalLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      await Sound.play(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        async () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            await Game.correct();\r\n            setNext((prev) => prev + 1);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            await Game.incorrect();\r\n            incorrectInput();\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.play(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <Navigation challenge=\"Easy Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={index}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <Button\r\n          className=\"easy-game__button\"\r\n          onClick={handleTouchPlay}\r\n          ref={buttonRef}\r\n          content=\"Play\"\r\n        />\r\n      )}\r\n      <div style={{ marginBottom: \"9rem\" }} />\r\n      <GameFooter\r\n        audio={`files/lecture${lecture}/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst CardText = memo(function CardText({\r\n  state,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 2000);\r\n    onClick(state);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={!hide && light ? { filter: `brightness(${light})` } : {}}\r\n    >\r\n      <h1 className=\"card__text--large\">\r\n        {(!(hide >= 0) || answer) && lesson[0].words[exercise - 1]}\r\n      </h1>\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardText;\r\n","import React, {\r\n  createRef,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport CardText from \"../../card/cardText\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./easyGame.css\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport Button from \"../../button/button\";\r\n\r\nconst EasyGameAccent = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const buttonRef = createRef();\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lesson[0].words.length / 3;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 3;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  async function answerQuestion(state) {\r\n    const answer = await Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGameAccent\",\r\n      });\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const cards = [next * 3 + 1, next * 3 + 2, next * 3 + 3];\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      await Sound.play(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        async () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            await Game.correct();\r\n            setNext((prev) => prev + 1);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            await Game.incorrect();\r\n            incorrectInput();\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.play(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game easy-game--accent\">\r\n      <Navigation challenge=\"Easy Game\" lecture={lecture} />\r\n      <div className=\"select select--accent\">\r\n        {state.map((cur, index) => (\r\n          <CardText\r\n            key={cur}\r\n            state={cur}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <Button\r\n          className=\"easy-game__button\"\r\n          onClick={handleTouchPlay}\r\n          ref={buttonRef}\r\n          content=\"Play\"\r\n        />\r\n      )}\r\n      <div style={{ marginBottom: \"9rem\" }} />\r\n      <GameFooter\r\n        audio={`files/lecture1/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n        noText={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGameAccent);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./touchPlay.scss\";\r\n\r\nconst TouchPlay = ({ round, onClick, Sound }) => {\r\n  // eslint-disable-next-line\r\n  useEffect(() => Sound.stop(), []);\r\n  return (\r\n    <div className=\"touch-play\" onClick={onClick}>\r\n      {round ? \"Play\" : \"Next Round\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TouchPlay;\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 5;\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(isTouchDevice);\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    if (!isTouchDevice) Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"hardGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = await Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      const curInput = displayCard(input, lecture);\r\n      await Sound.play(\r\n        `files/lecture${curInput.lecture}/${curInput.exercise}.m4a`\r\n      );\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) correctInput(input);\r\n      else incorrectInput(input);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    isTouchDevice && setTouchPlay(true);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n    else answerQuestion(state, result);\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    const currentAnswer = displayCard(answer, lecture);\r\n    await Sound.play(\r\n      `files/lecture${currentAnswer.lecture}/${currentAnswer.exercise}.m4a`\r\n    );\r\n    setActive(true);\r\n  }\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <Navigation challenge=\"Hard Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay\r\n            round={currentRound}\r\n            onClick={handleTouchPlay}\r\n            Sound={Sound}\r\n          />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n                active={active}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n                active={active}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 6;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setResults([]);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (200 * correct) / ((1 + gameLimit) * gameLimit + incorrect * 2),\r\n        exercise: \"memoryGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = 1000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setHidden(ref.current.state);\r\n        answerQuestion(ref.current.state);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, (5000 + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      setActive(false);\r\n      revealCard(input);\r\n      await Sound.play(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) correctInput(input);\r\n      else incorrectInput(input);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function revealCard(input) {\r\n    const current = [...hidden];\r\n    const hiddenIndex = current.indexOf(input);\r\n    current[hiddenIndex] = -current[hiddenIndex];\r\n    setHidden(current);\r\n  }\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    const ENDOFROUND = currentRound === cardLimit - 2;\r\n    if (ENDOFROUND) {\r\n      setHidden([]);\r\n      setNext((prev) => prev + 1);\r\n    } else {\r\n      // isTouchDevice && setTouchPlay(true);\r\n      setHidden(state);\r\n      answerQuestion(state, result);\r\n    }\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    setHidden(state);\r\n    const curAnswer = displayCard(answer, lecture);\r\n    await Sound.play(\r\n      `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n    );\r\n    setActive(true);\r\n  }\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = await Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    percent > 0 && setPauseInterval(touchPlay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <Navigation challenge=\"Memory Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay\r\n            round={currentRound}\r\n            onClick={handleTouchPlay}\r\n            Sound={Sound}\r\n          />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n                active={active}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n                active={active}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./reading.css\";\r\n\r\nconst Reading = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 4;\r\n  const cardLimit = 6;\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    setAnswer();\r\n    const totalLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"reading\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    const remainingState = state.filter((cur) => {\r\n      const index = result.findIndex((el) => el?.input === cur);\r\n      return index === -1 || result[index].answer !== \"correct\";\r\n    });\r\n\r\n    const answer = await Game.answerQuestion({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n      silent: true,\r\n    });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      await Sound.play(`files/lecture${lecture}/${input}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) correctInput(input);\r\n      else incorrectInput(input);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n    else answerQuestion(state, result);\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"reading\">\r\n      <Navigation challenge=\"Reading\" lecture={lecture} />\r\n      <div className=\"text-block\">\r\n        {answer ? lesson[lecture - 1].language[answer - 1] : \"?\"}\r\n      </div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={cur}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            answer={results[index]?.answer}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter correct={correct} incorrect={incorrect} active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(Reading);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./rapidGame.css\";\r\n\r\nconst RapidGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [activeAnswer, setActiveAnswer] = useState(true);\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const selectRef = useRef();\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 7;\r\n\r\n  async function nextRound() {\r\n    setState([]);\r\n    const results = [];\r\n    setResults(results);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    !isTouchDevice && setPauseInterval(true);\r\n    await answerQuestion(cards, results);\r\n    !isTouchDevice && setPauseInterval(false);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(\r\n    () => selectRef.current.scrollIntoView({ behavior: \"smooth\" }),\r\n    [touchPlay]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else {\r\n      const result =\r\n        (100 * correct) / ((2 * cardLimit - gameLimit + 1) * (gameLimit / 2)) +\r\n        incorrect;\r\n      Game.endGame({ result, exercise: \"rapidGame\", setProgress });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((7 + next) * 1000) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      setActive(false);\r\n      setPauseInterval(true);\r\n      await Sound.play(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) await correctInput(input);\r\n      else await incorrectInput(input);\r\n      !isTouchDevice && setPauseInterval(false);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, state, answer, touchPlay, pauseInterval]\r\n  );\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    const ENDOFROUND = currentRound === cardLimit - 2;\r\n    if (ENDOFROUND) setNext((prev) => prev + 1);\r\n    else await answerQuestion(state, result);\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    const curAnswer = displayCard(answer, lecture);\r\n    await Sound.play(\r\n      `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n    );\r\n    setActive(true);\r\n    isTouchDevice && setPauseInterval(false);\r\n  }\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = await Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    isTouchDevice && setPauseInterval(touchPlay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = async () => {\r\n    if (!activeAnswer) return;\r\n    setActiveAnswer(false);\r\n    await answerQuestion(state);\r\n    setTouchPlay(false);\r\n    setActiveAnswer(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"rapid-game\">\r\n      <Navigation challenge=\"Rapid Game\" lecture={lecture} />\r\n      <div className=\"select\" ref={selectRef}>\r\n        {touchPlay ? (\r\n          <TouchPlay\r\n            round={currentRound}\r\n            onClick={handleTouchPlay}\r\n            Sound={Sound}\r\n          />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(RapidGame);\r\n","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React, { useEffect, useState } from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport Lesson from \"../exercise/lesson/lesson\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = ({ setLecture, lecture }) => {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  useEffect(\r\n    () =>\r\n      setTimeout(() => {\r\n        setDisplay(false);\r\n      }, 5500),\r\n    []\r\n  );\r\n\r\n  if (!display) return <Lesson setLecture={setLecture} lecture={lecture} />;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n      <div className=\"title-container\">\r\n        <div className=\"title\">Learn Yoruba</div>\r\n        <div className=\"sub-title\">\r\n          One of the principal languages of Nigeria\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Practice from \"../component/exercise/practice/practice\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"../component/exercise/lesson/lesson\";\r\nimport Task from \"../component/exercise/task/task\";\r\nimport EasyGame from \"../component/exercise/easyGame/easyGame\";\r\nimport EasyGameAccent from \"../component/exercise/easyGame/easyGameAccent\";\r\nimport HardGame from \"../component/exercise/hardGame/hardGame\";\r\nimport MemoryGame from \"../component/exercise/memoryGame/memoryGame\";\r\nimport Reading from \"../component/exercise/reading/reading\";\r\nimport RapidGame from \"../component/exercise/rapidGame/rapidGame\";\r\nimport Home from \"../component/home/home\";\r\nimport \"./pages.css\";\r\n\r\nconst Pages = ({ lecture, setLecture, location, Game, handleRestart }) => {\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        {/* <Route exact path=\"/\">\r\n          <div className=\"reset\" onClick={handleRestart}>\r\n            Reset\r\n          </div>\r\n        </Route> */}\r\n        <Switch>\r\n          <Route path=\"/exercise\">\r\n            <Practice lecture={lecture} type=\"exercise\" />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} Game={Game} location={location} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGameAccent\">\r\n            <EasyGameAccent lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/reading\">\r\n            <Reading lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/rapidGame\">\r\n            <RapidGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/lesson\">\r\n            <Lesson setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState =\r\n  saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    case \"RESETPROGRESS\":\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\n\r\nclass GameLogic {\r\n  lecture = 1;\r\n  generateCards = function ({ cardLimit, totalLength, currentLength = 0 }) {\r\n    const cards = new Set();\r\n    let i = 0;\r\n    while (i < cardLimit) {\r\n      let value;\r\n      if ((!totalLength || currentLength) && Math.ceil(Math.random() * 2) === 2)\r\n        value = Math.ceil(Math.random() * currentLength) + totalLength;\r\n      else value = Math.ceil(Math.random() * (totalLength + currentLength));\r\n\r\n      if (!cards.has(value)) {\r\n        i++;\r\n        cards.add(value);\r\n      }\r\n    }\r\n    return [...cards];\r\n  };\r\n\r\n  playCards = function ({\r\n    cardLimit,\r\n    setSoundState,\r\n    gameSpeed,\r\n    cards,\r\n    autoPlay,\r\n    setCleanUp,\r\n  }) {\r\n    for (let i = 0; i < cardLimit; i++) {\r\n      this.delay(\r\n        gameSpeed * i,\r\n        () => {\r\n          autoPlay &&\r\n            Sound.start(`files/lecture${this.lecture}/${cards[i]}.m4a`);\r\n          setSoundState(i);\r\n        },\r\n        setCleanUp\r\n      );\r\n    }\r\n    return gameSpeed * cardLimit;\r\n    // this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n  };\r\n  endGame = function ({ result, exercise, setProgress }) {\r\n    setProgress({ result, exercise, lecture: this.lecture });\r\n    alert(\"result: \" + result + \"%\");\r\n  };\r\n\r\n  answerQuestion = async function ({ state, cardLimit, silent }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    !silent &&\r\n      (await Sound.play(`files/lecture${this.lecture}/${state[value]}.m4a`));\r\n    return state[value];\r\n  };\r\n  answerQuestionMultLectures = async function ({ state, cardLimit }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    const { lecture, exercise } = this.displayCard(state[value], this.lecture);\r\n    await Sound.play(`files/lecture${lecture}/${exercise}.m4a`);\r\n    return state[value];\r\n  };\r\n  correct = async () => await Sound.play(\"files/yes.m4a\");\r\n  incorrect = async () => await Sound.play(\"files/no.m4a\");\r\n  delay = function (timeout, cb, setCleanUp) {\r\n    const timeOut = setTimeout(() => {\r\n      cb();\r\n      setCleanUp &&\r\n        setCleanUp((prev) => {\r\n          const index = prev.indexOf(timeOut);\r\n          index > -1 && prev.splice(index, 1);\r\n          return prev;\r\n        });\r\n    }, timeout);\r\n    setCleanUp && setCleanUp((prev) => [...prev, timeOut]);\r\n  };\r\n  isTouchDevice = () =>\r\n    \"ontouchstart\" in window ||\r\n    navigator.maxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0;\r\n  totalCards = () =>\r\n    lesson\r\n      .slice(0, this.lecture - 1)\r\n      .reduce(\r\n        (total, cur) =>\r\n          (typeof total === \"number\" ? total : total.words.length) +\r\n          cur.words.length,\r\n        0\r\n      );\r\n  displayCard = function (state, lecture) {\r\n    let runningTotal = state,\r\n      currentLecture,\r\n      exercise,\r\n      accumulation = 0;\r\n    for (let i = 0; i < lecture; i++) {\r\n      const current = lesson[i].words.length;\r\n      if (runningTotal - current <= 0) {\r\n        exercise = state - accumulation;\r\n        currentLecture = i + 1;\r\n        break;\r\n      }\r\n      runningTotal -= current;\r\n      accumulation += current;\r\n    }\r\n    return { exercise, lecture: currentLecture, state };\r\n  };\r\n  setResult = function ({ input, answer, results, state }) {\r\n    const current = [...results];\r\n    const index = state.findIndex((cur) => cur === input);\r\n    current[index] = { input, answer };\r\n    return current;\r\n  };\r\n  clearIncorrect = function (results) {\r\n    const result = results.map((cur) =>\r\n      cur?.answer === \"correct\" ? cur : { ...cur, answer: \"\" }\r\n    );\r\n    return result;\r\n  };\r\n  remainingState = function ({ state, results }) {\r\n    return state.filter((cur) => {\r\n      const index = results.findIndex((el) => el?.input === cur);\r\n      return index === -1 || results[index].answer !== \"correct\";\r\n    });\r\n  };\r\n  answerQuestions = async function ({ state, results }) {\r\n    const remainingState = this.remainingState({ state, results });\r\n    return await this.answerQuestionMultLectures({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n    });\r\n  };\r\n}\r\n\r\nexport default GameLogic;\r\n","import React, { useState } from \"react\";\nimport Pages from \"./pages/pages\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport GameLogic from \"./component/exercise/gameLogic\";\nimport { resetProgress } from \"./action\";\nimport \"./App.css\";\n// import { Progress } from \"./progress\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem(\"Yourba-lecture\") || \"1\";\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const Game = new GameLogic();\n  Game.lecture = lecture;\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    Game.lecture = value;\n    window.localStorage.setItem(\"Yourba-lecture\", JSON.stringify(value));\n  };\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  const handleRestart = () => {\n    if (window.confirm(\"Are you sure you want to delete the progress?\"))\n      store.dispatch(resetProgress());\n  };\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        {/* <Header /> */}\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Pages\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n                Game={Game}\n                handleRestart={handleRestart}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}