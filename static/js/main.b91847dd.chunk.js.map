{"version":3,"sources":["component/exercise/practice/slider/slider.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/practice/practice.jsx","component/progress/progress.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/exercise/gameLogic.js","component/gameFooter/gameFooter.jsx","component/exercise/easyGame/easyGame.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/exercise.jsx","img/logo.png","component/header/header.jsx","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Slider","lecture","auto","random","exercise","setExercise","useState","Audio","audio","setAudio","max","lesson","lessons","length","play","pause","currentAudio","useEffect","randomNumber","prev","value","Math","ceil","className","disabled","onClick","style","backgroundImage","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Practice","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","title","Progress","Component","percentage","props","color","percent","top","right","bottom","left","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","Object","values","reduce","total","currentValue","to","fontWeight","task","GiGymBag","easyGame","SiWeasyl","hardGame","GiDiamondHard","memoryGame","FaMemory","entries","key","Value","setProgress","payload","type","generateCards","cardLimit","totalCards","setState","lastLectureLength","cards","Set","i","has","add","playCards","setSoundState","gameSpeed","setCleanUp","delay","this","endGame","result","alert","answerQuestion","floor","answerQuestionMultLectures","displayCard","currentLecture","position","correct","incorrect","timeout","cb","timeOut","setTimeout","indexOf","splice","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","slice","runningTotal","accumulation","GameFooter","active","undefined","dispatch","soundState","answer","setAnswer","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","unMount","gameLimit","gameLogic","forEach","clearTimeout","nextRound","sort","filter","input","setCorrect","cardLecture","inputLecture","answerLecture","handleOnClick","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","ref","class","hiddenIndex","backgroundColor","Exercise","location","pathname","path","Header","src","logo","alt","saveState","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b91847dd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { lesson } from '../../../../data.json';\r\nimport \"./slider.css\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const [audio, setAudio] = useState(new Audio());\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  function play() {\r\n    audio.pause();\r\n    const currentAudio = new Audio(`files/lecture${lecture}/${exercise}.m4a`);\r\n    currentAudio.play();\r\n    setAudio(currentAudio);\r\n  };\r\n  \r\n  useEffect(() => auto && play(), [exercise]);\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"switch switch--next\"\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n      ></button>\r\n      <div className=\"slider__img-container\">\r\n        <div\r\n          className=\"slider__img\"\r\n          onClick={play}\r\n          style={{backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`}}\r\n        ></div>\r\n        <h5>{lesson[lecture - 1].lessons[exercise - 1]}</h5>\r\n      </div>\r\n      <button\r\n        className=\"switch\"\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => setRandom(random ? false : true)}\r\n      >\r\n        {random ? 'Normal' : 'Random'}\r\n      </button>\r\n      <div className=\"btn\" onClick={() => setAuto(!auto)}>\r\n        {auto ? \"Auto\" : \"Manual\"}\r\n      </div>\r\n      <div className=\"btn\" onClick={() => setAutoPlay(!autoPlay)}>\r\n        {autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport './practice.css';\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), [])\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if(autoPlay) setIntervalId(\r\n      setInterval(() => setExercise(prev => prev < max ? prev + 1 : 1), 4000)\r\n    )\r\n  }, [autoPlay])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"practice\">\r\n        <Slider \r\n          lecture={lecture} \r\n          auto={auto} \r\n          random={random}\r\n          exercise={exercise} \r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;","import React from \"react\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\nimport \"./progress.css\";\r\n\r\nconst Progress = ({ className, Component, percentage = 0, ...props }) => {\r\n  const color = { complete: 'rgb(180, 107, 83)', incomplete: 'rgb(102, 72, 62)' };\r\n  const percent = {\r\n    top: {\r\n      backgroundImage: `linear-gradient(to right, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    right: {\r\n      backgroundImage: `linear-gradient(to bottom, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    bottom: {\r\n      backgroundImage: `linear-gradient(to left, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    left: {\r\n      backgroundImage: `linear-gradient(to top, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n  };\r\n\r\n  if (percentage < 12.5)\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%, ${color.complete} ${\r\n      50 + percentage * 4\r\n    }%, ${color.incomplete} ${50 + percentage * 4}%)`;\r\n  else if (percentage < 37.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} ${\r\n      (percentage - 12.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 12.5) * 4}%)`;\r\n  } else if (percentage < 62.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} ${\r\n      (percentage - 37.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 37.5) * 4}%)`;\r\n  } else if (percentage < 87.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} ${\r\n      (percentage - 62.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 62.5) * 4}%)`;\r\n  } else {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.complete} ${\r\n      (percentage - 87.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 87.5) * 4}%, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n  }\r\n\r\n  return (\r\n    <div className={`progress-container ${className}`}>\r\n      <div className=\"progress__top\" style={percent.top}></div>\r\n      <div className=\"progress__body\">\r\n        <div className=\"progress__side\" style={percent.left}></div>\r\n        <Component {...props} />\r\n        {percentage >= 75 && (\r\n          <div className=\"progress__pass\">\r\n            <TiTickOutline className=\"progress__pass-img\" />\r\n          </div>\r\n        )}\r\n        <div className=\"progress__side\" style={percent.right}></div>\r\n      </div>\r\n      <div className=\"progress__bottom\" style={percent.bottom}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Progress from \"../../progress/progress\";\r\nimport \"./lesson.css\";\r\n\r\nconst Lesson = ({ setLecture, progress }) => {\r\n\r\n  const noOfExercise = 3;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(lesson.map((cur, index) => {\r\n      const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress ? Object.values(levelProgress) : [0];\r\n        const percentage = levelProgressArray.reduce((total, currentValue) => total + currentValue) / noOfExercise;         \r\n        percentage >= 75 && setPassed(prev => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n    }))\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Select Level</div>\r\n      <div className=\"lesson__length\">{passed} / {lesson.length}</div>\r\n        {progression.map((cur, index) => \r\n          <Progress\r\n            key={index}\r\n            Component={() => (\r\n              <Link\r\n                key={index}\r\n                className=\"lesson__container\"\r\n                to=\"/task\"\r\n                onClick={() => setLecture(index + 1)}\r\n              >\r\n                <div\r\n                  className=\"lesson__img\"\r\n                  style={{backgroundImage: `url(./img/lecture${index + 1}/1.jpg)`}}\r\n                />\r\n                <div style={{ fontWeight: 700 }}>{cur.title}</div>\r\n              </Link>\r\n            )}\r\n            percentage={cur.percentage}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state\r\n})\r\n\r\nexport default connect(mapStateToProps)(Lesson);","import React from \"react\";\r\nimport { GiDiamondHard, GiGymBag } from \"react-icons/gi\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { GiBugleCall } from \"react-icons/gi\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  const task = {\r\n    // lesson: GrScheduleNew,\r\n    exercise: GiGymBag,\r\n    easyGame: SiWeasyl,\r\n    // speaking: IoMdMicrophone,\r\n    hardGame: GiDiamondHard,\r\n    memoryGame: FaMemory,\r\n    // recall: GiBugleCall,\r\n  };\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"title\">Select Task</div>\r\n      <div className=\"task__select\">\r\n        {Object.entries(task).map(([key, Value], index) => {\r\n          return (\r\n            <Progress\r\n              key={index}\r\n              className=\"task__box\"\r\n              Component={() => (\r\n                <Link className=\"task__container\" to={key}>\r\n                  <Value className=\"task__img\" />\r\n                  <div className=\"task__title\">{key}</div>\r\n                </Link>\r\n              )}\r\n              percentage={progress[lecture]?.[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });","import { lesson } from '../../data.json';\r\n\r\nexport default {\r\n    generateCards: function({ cardLimit, totalCards, setState, lastLectureLength }) {\r\n        const cards = new Set();\r\n        let i = 0;\r\n        while (i < cardLimit) {\r\n          let value; \r\n          if (!totalCards || lastLectureLength && Math.ceil(Math.random() * 2) === 2) {\r\n              value = Math.ceil(Math.random() * lastLectureLength) + totalCards;\r\n            } else { value = Math.ceil(Math.random() * totalCards); }\r\n          if (!cards.has(value)) {\r\n            i++;\r\n            cards.add(value);\r\n          }\r\n        }\r\n        setState([...cards]);\r\n        return [...cards]\r\n      },\r\n    playCards: function({ cardLimit, setSoundState, gameSpeed, cards, lecture, autoPlay, setCleanUp }) {\r\n        for (let i = 0; i < cardLimit; i++) {\r\n            this.delay(gameSpeed * i, () => {\r\n                autoPlay && new Audio(`files/lecture${lecture}/${cards[i]}.m4a`).play();\r\n                setSoundState(i);\r\n            }, setCleanUp);\r\n        }\r\n        this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n    },\r\n    endGame: function({ result, exercise, lecture, setProgress }) {\r\n        setProgress({ result, exercise, lecture });\r\n        alert(\"result: \" + result + \"%\");\r\n    },\r\n    answerQuestion: function({ state, lecture, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        new Audio(`files/lecture${lecture}/${state[value]}.m4a`).play();\r\n        return state[value];\r\n    },\r\n    answerQuestionMultLectures: function({ state, lecture, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        const { lecture: currentLecture, position } = this.displayCard(state[value], lecture);\r\n        new Audio(`files/lecture${currentLecture}/${position}.m4a`).play();\r\n        return state[value];\r\n    },\r\n    correct: function() { new Audio(\"files/yes.m4a\").play() },\r\n    incorrect: function() { new Audio(\"files/no.m4a\").play() },\r\n    delay: function(timeout, cb, setCleanUp) { \r\n        const timeOut = setTimeout(() => { \r\n            cb();\r\n            setCleanUp && setCleanUp(prev => {\r\n                const index = prev.indexOf(timeOut);\r\n                index > -1 && prev.splice(index, 1);\r\n                return prev;\r\n            })\r\n        }, timeout);\r\n        setCleanUp && setCleanUp(prev => [...prev, timeOut]);\r\n    },\r\n    isTouchDevice: () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0,\r\n    totalCards: (lecture) => lesson.slice(0, lecture - 1).reduce((total, cur) =>\r\n        (typeof total === \"number\" ? total : total.lessons.length) + cur.lessons.length\r\n    , 0),\r\n    displayCard: function(state, lecture) {\r\n        let runningTotal = state, currentLecture, position, accumulation = 0;\r\n        for (let i = 0; i < lecture; i++) {\r\n          const current = lesson[i].lessons.length;\r\n          if (runningTotal - current <= 0) {\r\n            position = state - accumulation;\r\n            currentLecture = i + 1;\r\n            break;\r\n          }\r\n          runningTotal -= current;\r\n          accumulation +=current\r\n        }\r\n        return { position, lecture: currentLecture }\r\n    }\r\n}","import React from 'react';\r\nimport { GiSpeaker } from 'react-icons/gi';\r\nimport './gameFooter.css';\r\n\r\nconst GameFooter = ({ percent = 100, audio, correct, incorrect, active }) => {\r\n\r\n    return (\r\n        <div\r\n            className=\"game__footer\"\r\n            style={{\r\n            backgroundImage: `linear-gradient(to right, rgb(90 44 29 / 100%) ${percent}%, rgb(90 44 29 / 23%) ${percent}%)`,\r\n            }}\r\n        >\r\n            <div\r\n            className=\"score score__play\"\r\n            onClick={() => active && new Audio(audio).play()}\r\n            >\r\n            <GiSpeaker />\r\n            </div>\r\n            <div className=\"score score__correct\">{correct}</div>\r\n            <div className=\"score score__incorrect\">{incorrect}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameFooter;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./easyGame.css\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\n\r\nconst EasyGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = gameLogic.isTouchDevice();\r\n\r\n  useEffect(() => () => unMount.current.forEach(cur => clearTimeout(cur)), []);\r\n  \r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      setAnswer(gameLogic.answerQuestion({ state, lecture, cardLimit }));\r\n      setState(prev => prev.sort(() => (Math.random() > .5) ? 1 : -1));\r\n      setActive(true);\r\n    }\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const totalCards = lesson[lecture - 1].lessons.length;\r\n    const cards = gameLogic.generateCards({ cardLimit, totalCards, setState });\r\n    if(isTouchDevice) setActive(true);\r\n    else gameLogic.playCards({ cards, cardLimit, gameSpeed, setSoundState, lecture, setCleanUp, autoPlay: true });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else gameLogic.endGame({ \r\n      setProgress,\r\n      result: (gameLimit * 100) / (gameLimit + incorrect),\r\n      exercise: \"easyGame\",\r\n      lecture,\r\n    });\r\n  };\r\n\r\n  function handleOnClick(input) {\r\n    if (!active) return;\r\n    new Audio(`files/lecture${lecture}/${input}.m4a`).play();\r\n    if (isTouchDevice && !touchPlay) return;\r\n    setActive(false);\r\n    gameLogic.delay(gameSpeed, () => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        gameLogic.delay(2000, () => {\r\n          setNext((prev) => prev + 1);\r\n        }, setCleanUp);\r\n      } else {\r\n        gameLogic.incorrect();\r\n        gameLogic.delay(2000, () => {\r\n          new Audio(`files/lecture${lecture}/${answer}.m4a`).play();\r\n          setIncorrect((prev) => prev + 1);\r\n          setActive(true);\r\n        }, setCleanUp);\r\n      }\r\n    }, setCleanUp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>Play</div>}\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"container\"\r\n            style={{ filter: `brightness(${index === soundState ? 2 : 1})`}}\r\n            onClick={() => handleOnClick(cur)}\r\n          >\r\n            <div\r\n              className=\"img\"\r\n              style={{ backgroundImage: `url(./img/lecture${lecture}/${cur}.jpg)` }}\r\n            ></div>\r\n            <h5 className=\"container__text\">{lesson[lecture - 1].lessons[cur - 1]}</h5>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <GameFooter \r\n        audio={`files/lecture${lecture}/${answer}.m4a`} \r\n        correct={next} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);","import React, { useEffect, useState } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const displayCard = gameLogic.displayCard;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const cardLimit = next + 5;\r\n    const totalCards = gameLogic.totalCards(lecture);\r\n    const lastLectureLength = lesson[lecture - 1].lessons.length\r\n    gameLogic.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) {\r\n      nextRound()\r\n    } else {\r\n      gameLogic.endGame({ \r\n        result: (100 * (correct - incorrect)) / correct, \r\n        exercise: \"hardGame\", \r\n        lecture, \r\n        setProgress \r\n      })\r\n    }\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === next + 5) {\r\n      setTimeout(() => { answerQuestion(state) }, 2500);\r\n    }\r\n  }, [state]);\r\n  \r\n  function answerQuestion(state) {\r\n    setAnswer(gameLogic.answerQuestionMultLectures({ state, lecture, cardLimit: state.length }));\r\n    setActive(true);\r\n  }\r\n\r\n  function handleOnClick(input) {\r\n    if (!active) return;\r\n    setActive(false);\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    new Audio(`files/lecture${inputLecture}/${position}.m4a`).play();\r\n    gameLogic.delay(2000, () => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        setCorrect((prev) => prev + 1);\r\n        gameLogic.delay(1500, () => {\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          if (current.length === 1) setNext((prev) => prev + 1);\r\n          else answerQuestion(current);\r\n        });\r\n      } else {\r\n        gameLogic.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        gameLogic.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          new Audio(`files/lecture${answerLecture}/${position}.m4a`).play();\r\n          setActive(true);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Hard Game</div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return(\r\n          <div\r\n            key={index}\r\n            className=\"container\"\r\n            onClick={() => handleOnClick(cur)}\r\n          >\r\n            <div\r\n              className=\"img\"\r\n              style={{\r\n                backgroundImage: `url(./img/lecture${cardLecture}/${position}.jpg)`,\r\n              }}\r\n            ></div>\r\n            <h5 className=\"container__text\">{lesson[cardLecture - 1].lessons[position - 1]}</h5>\r\n          </div>\r\n        )})}\r\n      </div>\r\n      \r\n      <GameFooter \r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`} \r\n        correct={correct} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = gameLogic.displayCard;\r\n  const memoryGame = next < 5;\r\n  const isTouchDevice = gameLogic.isTouchDevice() && !memoryGame;\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 10;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setPercent(100);\r\n    const totalCards = gameLogic.totalCards(lecture);\r\n    const lastLectureLength = lesson[lecture - 1].lessons.length\r\n    gameLogic.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), [])\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else gameLogic.endGame({ \r\n        result: (200 * correct) / (((1 + gameLimit) * gameLimit) + (incorrect * 2)),\r\n        exercise: \"memoryGame\",\r\n        lecture,\r\n        setProgress \r\n      });\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === cardLimit) {\r\n      !memoryGame && answerQuestion(state);\r\n    }\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = memoryGame ? 1000 : 3000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        if (memoryGame) {\r\n          setHidden(ref.current.state);\r\n          answerQuestion(ref.current.state);\r\n        } else {\r\n          setNext((prev) => prev + 1);\r\n        }\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((memoryGame ? 5000 : 12000) + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n  }, [pauseInterval, next]);\r\n\r\n  function handleOnClick(input) {\r\n    if (!active) return;\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    new Audio(`files/lecture${inputLecture}/${position}.m4a`).play();\r\n    setActive(false);\r\n    if (memoryGame) {\r\n      const current = [...hidden];\r\n      const hiddenIndex = current.indexOf(input);\r\n      current[hiddenIndex] = -current[hiddenIndex];\r\n      setHidden(current);\r\n    } else setPauseInterval(true);\r\n    gameLogic.delay(2500, () => {\r\n      const correct = input === answer;\r\n      if (correct) {\r\n        gameLogic.correct();\r\n        gameLogic.delay(2000, () => {\r\n          if (next !== ref.current.next) return;\r\n          isTouchDevice && setTouchPlay(true);\r\n          setCorrect((prev) => prev + 1);\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          memoryGame && setHidden(current);\r\n          if (current.length === 1) {\r\n            memoryGame && setHidden([]);\r\n            setNext((prev) => prev + 1);\r\n          } else answerQuestion(current);\r\n        });\r\n      } else {\r\n        gameLogic.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        memoryGame && setHidden(state);\r\n        gameLogic.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          new Audio(`files/lecture${answerLecture}/${position}.m4a`).play()\r\n          setActive(true);\r\n        })\r\n      }\r\n      !memoryGame && setPauseInterval(false);\r\n    });\r\n  }\r\n\r\n  const answerQuestion = (state) => {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n\r\n    setAnswer(gameLogic.answerQuestionMultLectures({ state, lecture, cardLimit: state.length }));\r\n    setActive(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPauseInterval(touchPlay);\r\n  }, [touchPlay])\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Memory Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay && <div class=\"touch-play\" onClick={handleTouchPlay}>Play</div>}\r\n        {state.map((cur, index) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"container\"\r\n              onClick={() => handleOnClick(cur)}\r\n              style={hidden[index] ? { backgroundColor: \"#bbb7aa35\" } : {}}\r\n            >\r\n              <div\r\n                className=\"img\"\r\n                style={\r\n                  hidden[index] >= 0\r\n                    ? {}\r\n                    : { backgroundImage: `url(./img/lecture${cardLecture}/${position}.jpg)`,}\r\n                }\r\n              ></div>\r\n              {!(hidden[index] >= 0) && \r\n                <h5 className=\"container__text\">{lesson[cardLecture - 1].lessons[position - 1]}</h5>}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <GameFooter \r\n        percent={percent} \r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`} \r\n        correct={correct} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);","import React, { useState } from \"react\";\r\nimport Practice from \"./practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"./lesson/lesson\";\r\nimport Task from \"./task/task\";\r\nimport EasyGame from \"./easyGame/easyGame\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"./hardGame/hardGame\";\r\nimport MemoryGame from \"./memoryGame/memoryGame\";\r\nimport \"./exercise.css\";\r\n\r\nconst Exercise = ({ lecture, setLecture, location }) => {\r\n\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        <Link\r\n          to={`/${location.pathname !== \"/task\" ? \"task\" : \"\"}`}\r\n          className=\"return\"\r\n        >\r\n          {location.pathname !== \"/\" && <TiArrowBack />}\r\n        </Link>\r\n        <Switch>\r\n          {/* <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/exercise\">\r\n            <Practice\r\n              lecture={lecture}\r\n              type=\"exercise\"\r\n            />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Lesson setLecture={setLecture}/>\r\n          </Route> \r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState = saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useState } from \"react\";\nimport Exercise from \"./component/exercise/exercise\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\n// import { Progress } from \"./progress\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport \"./App.css\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem('Yourba-lecture') || '1';\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    window.localStorage.setItem('Yourba-lecture', JSON.stringify(value));\n  }\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header setLecture={setSaveLecture} />\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Exercise\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}