{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/button/button.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/navigation/navigation.jsx","component/exercise/practice/practice.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/exercise/easyGame/easyGame.jsx","component/card/cardText.jsx","component/exercise/easyGame/easyGameAccent.jsx","component/touchPlay/touchPlay.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/reading/reading.jsx","component/exercise/rapidGame/rapidGame.jsx","img/logo.png","component/home/home.jsx","pages/pages.jsx","reducer.js","component/exercise/gameLogic.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","Slider","lecture","auto","random","exercise","setExercise","max","lesson","words","length","useEffect","start","randomNumber","prev","value","Math","ceil","className","disabled","onClick","src","language","Button","content","props","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Navigation","challenge","to","title","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","style","backgroundImage","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","percentage","Object","values","reduce","total","currentValue","noOfExercise","description","toFixed","width","task","location","easy","hard","reading","memory","rapid","entries","key","setProgress","payload","type","GameFooter","percent","audio","correct","incorrect","active","noText","languageText","setlanguageText","replace","split","setTimeout","Card","memo","hide","brightness","answer","Answer","TiTick","TiTimes","light","setLight","filter","undefined","dispatch","Game","setState","soundState","setSoundState","setAnswer","results","setResults","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","setCleanUp","unMount","gameLimit","gameSpeed","isTouchDevice","answerQuestion","cardLimit","sort","forEach","clearTimeout","totalLength","cards","generateCards","delay","playCards","nextRound","endGame","result","handleOnClick","useCallback","input","setResult","CardText","TouchPlay","round","HardGame","currentRound","setCurrentRound","setCorrect","displayCard","answerQuestions","totalCards","currentLength","curInput","clearIncorrect","correctInput","currentAnswer","incorrectInput","display","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","ref","inputLecture","hiddenIndex","indexOf","revealCard","curAnswer","Reading","remainingState","findIndex","el","silent","Home","setDisplay","logo","alt","Pages","handleRestart","exact","path","saveState","window","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","GameLogic","Set","i","has","add","alert","floor","answerQuestionMultLectures","timeout","cb","timeOut","splice","navigator","maxTouchPoints","msMaxTouchPoints","slice","currentLecture","runningTotal","accumulation","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","confirm","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e5d4e9c.chunk.js","sourcesContent":["class SoundClass {\r\n    #audio = new Audio();\r\n    url = \"\";\r\n    stop() {\r\n        this.#audio.pause();\r\n        this.#audio.currentTime = 0;\r\n    }\r\n    start(url) {\r\n        this.stop();\r\n        this.#audio = new Audio(url);\r\n        this.url = url;\r\n        this.#audio.play();\r\n    }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;","import React, { useEffect } from \"react\";\r\nimport { lesson } from \"../../../../data.json\";\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.scss\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(\r\n    () => auto && Sound.start(`files/lecture${lecture}/${exercise}.m4a`),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [exercise]\r\n  );\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n        className=\"prev\"\r\n      >\r\n        <img src=\"./img/return.svg\" />\r\n      </button>\r\n      <div className=\"slider__text\">\r\n        <div>{lesson[lecture - 1].words[exercise - 1]}</div>\r\n        <div>{lesson[lecture - 1].language?.[exercise - 1]}</div>\r\n      </div>\r\n      <button\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n        className=\"next\"\r\n      >\r\n        <img src=\"./img/return.svg\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({ className, content, ...props }) => {\r\n  return (\r\n    <div className={`button ${className}`} {...props}>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Button\r\n        onClick={() => setRandom(random ? false : true)}\r\n        content={random ? \"Normal\" : \"Random\"}\r\n      />\r\n      <Button\r\n        onClick={() => setAuto(!auto)}\r\n        content={auto ? \"Auto\" : \"Manual\"}\r\n      />\r\n      <Button\r\n        onClick={() => setAutoPlay(!autoPlay)}\r\n        content={autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../button/button\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = ({ challenge, lecture }) => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <Link to=\"/task\" className=\"return\">\r\n        <img src=\"./img/return.svg\" />\r\n      </Link>\r\n      <Button className=\"navigation-icon\" content=\"Learn Yoruba\" />\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"navigation__exercise\">\r\n        <img src=\"./img/exercise.svg\" />\r\n        <span>{challenge}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../button/button\";\r\nimport \"./practice.scss\";\r\nimport Sound from \"../../../Sound\";\r\nimport Navigation from \"../navigation/navigation\";\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), []);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if (autoPlay)\r\n      setIntervalId(\r\n        setInterval(\r\n          () => setExercise((prev) => (prev < max ? prev + 1 : 1)),\r\n          4000\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay]);\r\n\r\n  return (\r\n    <div className=\"practice\">\r\n      <Navigation challenge=\"Exercise\" lecture={lecture} />\r\n      <div className=\"practice__content\">\r\n        <div\r\n          className=\"practice__img\"\r\n          onClick={() => Sound.start(`files/lecture${lecture}/${exercise}.m4a`)}\r\n          style={{\r\n            backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n          }}\r\n        ></div>\r\n\r\n        <Slider\r\n          lecture={lecture}\r\n          auto={auto}\r\n          random={random}\r\n          exercise={exercise}\r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Button from \"../../button/button\";\r\nimport \"./lesson.scss\";\r\n\r\nconst Lesson = ({ setLecture, lecture, progress }) => {\r\n  const noOfExercise = 5;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(\r\n      lesson.map((cur, index) => {\r\n        const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress\r\n          ? Object.values(levelProgress)\r\n          : [0];\r\n        const percentage =\r\n          levelProgressArray.reduce(\r\n            (total, currentValue) => total + currentValue\r\n          ) / (lecture > 1 ? noOfExercise : noOfExercise - 1);\r\n        percentage >= 75 && setPassed((prev) => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Choose your interests</div>\r\n      <div className=\"sub-title\">\r\n        Choose your catergory and procceed to start learining youruba\r\n      </div>\r\n      {/* <div className=\"lesson__length\">\r\n        {passed} / {lesson.length}\r\n      </div> */}\r\n      <div>\r\n        {progression.map((cur, index) => (\r\n          <div key={index} className=\"lesson__container\">\r\n            <div className=\"lesson__container-top\">\r\n              <div\r\n                className=\"lesson__img\"\r\n                style={{\r\n                  backgroundImage: `url(./img/lecture${index + 1}/cover.svg)`,\r\n                }}\r\n              />\r\n              <div className=\"lesson__content\">\r\n                <div className=\"lesson__title\">{cur.title}</div>\r\n                <div className=\"lesson__description\">{cur.description}</div>\r\n                <Link to=\"/task\" onClick={() => setLecture(index + 1)}>\r\n                  <Button content={\"Continue\"} />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div className=\"progress-bar__text\">\r\n                {cur.percentage.toFixed(1)}%\r\n              </div>\r\n              <div\r\n                className=\"progress-bar__percentage\"\r\n                style={{ width: cur.percentage + \"%\" }}\r\n              ></div>\r\n            </div>\r\n            {/* percentage={cur.percentage} */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lesson);\r\n","import React from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { GiDiamondHard, GiGymBag, GiBookCover } from \"react-icons/gi\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\nimport { GiFastArrow } from \"react-icons/gi\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.scss\";\r\nimport Button from \"../../button/button\";\r\n\r\nconst Task = ({ lecture, progress, location }) => {\r\n  // const task = {\r\n  //   // lesson: GrScheduleNew,\r\n  //   exercise: GiGymBag,\r\n  //   [lecture === 1 ? \"easyGameAccent\" : \"easyGame\"]: SiWeasyl,\r\n  //   // speaking: IoMdMicrophone,\r\n  //   hardGame: GiDiamondHard,\r\n  //   reading: GiBookCover,\r\n  //   memoryGame: FaMemory,\r\n  //   rapidGame: GiFastArrow,\r\n  //   // recall: GiBugleCall,\r\n  // };\r\n  const task = {\r\n    exercise: \"exercise\",\r\n    easy: lecture === 1 ? \"easyGameAccent\" : \"easyGame\",\r\n    hard: \"hardGame\",\r\n    reading: \"reading\",\r\n    memory: \"memoryGame\",\r\n    rapid: \"rapidGame\",\r\n  };\r\n\r\n  if (lecture === 1) delete task.reading;\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <Link to=\"/\" className=\"return\">\r\n        <img src=\"./img/return.svg\" />\r\n      </Link>\r\n      <Button className=\"task-icon\" content=\"Learn Yoruba\" />\r\n      <img\r\n        className=\"task__cover-img\"\r\n        src={`./img/lecture${lecture}/cover.svg`}\r\n      />\r\n      <div className=\"task__content\">\r\n        <div className=\"task__title\">{lesson[lecture - 1].title}</div>\r\n        <div className=\"task__text\">Select Challenge</div>\r\n        <div className=\"task__select\">\r\n          {Object.entries(task).map(([key, value], index) => {\r\n            return (\r\n              <div key={index} className=\"task__container\" to={key}>\r\n                <img className=\"task__icon\" src={`./img/${key}.svg`} />\r\n                <div className=\"task__challenge\">{key}</div>\r\n                {index > 0 && (\r\n                  <div className=\"task__progress\">\r\n                    {progress[lecture]?.[value]?.toFixed(1) || 0}%\r\n                  </div>\r\n                )}\r\n                <Link to={value}>\r\n                  <img className=\"task__icon\" src=\"./img/advance.svg\" />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);\r\n","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const resetProgress = () => ({ type: \"RESETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\nimport \"./gameFooter.css\";\r\n\r\nconst GameFooter = ({\r\n  percent = 100,\r\n  audio,\r\n  correct,\r\n  incorrect,\r\n  active,\r\n  noText,\r\n}) => {\r\n  const [languageText, setlanguageText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (noText) return;\r\n    const [exercise, lecture] = Sound.url\r\n      .replace(\"files/lecture\", \"\")\r\n      .replace(\".m4a\", \"\")\r\n      .split(\"/\");\r\n    setTimeout(() => {\r\n      if (exercise !== \"files\" && exercise > 0) {\r\n        setlanguageText(lesson[exercise - 1].language?.[lecture - 1]);\r\n        setTimeout(() => setlanguageText(\"\"), 3000);\r\n      }\r\n    }, 1500);\r\n    // eslint-disable-next-line\r\n  }, [Sound.url]);\r\n\r\n  return (\r\n    <div\r\n      className=\"game__footer\"\r\n      style={{\r\n        backgroundImage: `linear-gradient(to right, #054d54 ${percent}%, #054d5459 ${percent}%)`,\r\n      }}\r\n    >\r\n      {audio && (\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() => active && Sound.start(audio)}\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n      )}\r\n      <h5 className=\"language-text\">{languageText}</h5>\r\n      <div className=\"score score__correct\">{correct}</div>\r\n      <div className=\"score score__incorrect\">{incorrect}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFooter;\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst Card = memo(function Card({\r\n  state,\r\n  lecture,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    onClick(state);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={!hide && light ? { filter: `brightness(${light})` } : {}}\r\n    >\r\n      <div\r\n        className=\"img\"\r\n        style={\r\n          hide >= 0 && !answer\r\n            ? {}\r\n            : {\r\n                backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n              }\r\n        }\r\n      />\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n      {!(hide >= 0) && (\r\n        <h5 className=\"card__text\">\r\n          {lesson[lecture - 1].words[exercise - 1]}\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport Button from \"../../button/button\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  function answerQuestion(state) {\r\n    const answer = Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const totalLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGame\",\r\n      });\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            Game.correct();\r\n            Game.delay(2000, () => setNext((prev) => prev + 1), setCleanUp);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            Game.incorrect();\r\n            Game.delay(2000, () => incorrectInput(), setCleanUp);\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <Navigation challenge=\"Easy Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={index}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n          />\r\n        ))}\r\n      </div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <Button\r\n          className=\"easy-game__button\"\r\n          onClick={handleTouchPlay}\r\n          content=\"Play\"\r\n        />\r\n      )}\r\n      <GameFooter\r\n        audio={`files/lecture${lecture}/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst CardText = memo(function CardText({\r\n  state,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 2000);\r\n    onClick(state);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={!hide && light ? { filter: `brightness(${light})` } : {}}\r\n    >\r\n      <h1 className=\"card__text--large\">\r\n        {(!(hide >= 0) || answer) && lesson[0].words[exercise - 1]}\r\n      </h1>\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardText;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport CardText from \"../../card/cardText\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./easyGame.css\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport Button from \"../../button/button\";\r\n\r\nconst EasyGameAccent = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lesson[0].words.length / 3;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 3;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  function answerQuestion(state) {\r\n    const answer = Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const cards = [next * 3 + 1, next * 3 + 2, next * 3 + 3];\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGameAccent\",\r\n      });\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            Game.correct();\r\n            Game.delay(2000, () => setNext((prev) => prev + 1), setCleanUp);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            Game.incorrect();\r\n            Game.delay(2000, () => incorrectInput(), setCleanUp);\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game easy-game--accent\">\r\n      <Navigation challenge=\"Easy Game\" lecture={lecture} />\r\n      <div className=\"select select--accent\">\r\n        {state.map((cur, index) => (\r\n          <CardText\r\n            key={cur}\r\n            state={cur}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n          />\r\n        ))}\r\n      </div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <Button\r\n          className=\"easy-game__button\"\r\n          onClick={handleTouchPlay}\r\n          content=\"Play\"\r\n        />\r\n      )}\r\n      <GameFooter\r\n        audio={`files/lecture1/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n        noText={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGameAccent);\r\n","import React from \"react\";\r\nimport \"./touchPlay.scss\";\r\n\r\nconst TouchPlay = ({ round, onClick }) => {\r\n  return (\r\n    <div className=\"touch-play\" onClick={onClick}>\r\n      {round ? \"Play\" : \"Next Round\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TouchPlay;\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 5;\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(isTouchDevice);\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    if (!isTouchDevice) Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"hardGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      const curInput = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${curInput.lecture}/${curInput.exercise}.m4a`);\r\n      Game.delay(2000, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      isTouchDevice && setTouchPlay(true);\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n      else answerQuestion(state, result);\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const currentAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${currentAnswer.lecture}/${currentAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n    });\r\n  }\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <Navigation challenge=\"Hard Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay round={currentRound} onClick={handleTouchPlay} />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 6;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setResults([]);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (200 * correct) / ((1 + gameLimit) * gameLimit + incorrect * 2),\r\n        exercise: \"memoryGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = 1000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setHidden(ref.current.state);\r\n        answerQuestion(ref.current.state);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, (5000 + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      setActive(false);\r\n      revealCard(input);\r\n      Game.delay(2500, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function revealCard(input) {\r\n    const current = [...hidden];\r\n    const hiddenIndex = current.indexOf(input);\r\n    current[hiddenIndex] = -current[hiddenIndex];\r\n    setHidden(current);\r\n  }\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    Game.delay(2000, () => {\r\n      // I dont understand this line\r\n      // if (next !== ref.current.next) return;\r\n\r\n      setCorrect((prev) => prev + 1);\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      const ENDOFROUND = currentRound === cardLimit - 2;\r\n      if (ENDOFROUND) {\r\n        setHidden([]);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        // isTouchDevice && setTouchPlay(true);\r\n        setHidden(state);\r\n        answerQuestion(state, result);\r\n      }\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    setHidden(state);\r\n    Game.delay(1500, () => {\r\n      const curAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n    });\r\n  }\r\n\r\n  function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    Game.delay(500, () => setActive(true));\r\n  }\r\n\r\n  useEffect(() => {\r\n    percent > 0 && setPauseInterval(touchPlay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <Navigation challenge=\"Memory Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay round={currentRound} onClick={handleTouchPlay} />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./reading.css\";\r\n\r\nconst Reading = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 4;\r\n  const cardLimit = 6;\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    setAnswer();\r\n    const totalLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"reading\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  function answerQuestion(state, result = results) {\r\n    const remainingState = state.filter((cur) => {\r\n      const index = result.findIndex((el) => el?.input === cur);\r\n      return index === -1 || result[index].answer !== \"correct\";\r\n    });\r\n\r\n    const answer = Game.answerQuestion({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n      silent: true,\r\n    });\r\n    setAnswer(answer);\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      Game.delay(2000, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n      else answerQuestion(state, result);\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => setActive(true));\r\n  }\r\n\r\n  return (\r\n    <div className=\"reading\">\r\n      <Navigation challenge=\"Reading\" lecture={lecture} />\r\n      <div className=\"text-block\">\r\n        {answer ? lesson[lecture - 1].language[answer - 1] : \"?\"}\r\n      </div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={cur}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            answer={results[index]?.answer}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter correct={correct} incorrect={incorrect} active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(Reading);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./rapidGame.css\";\r\n\r\nconst RapidGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 7;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const results = [];\r\n    setResults(results);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    answerQuestion(cards, results);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else {\r\n      const result =\r\n        (100 * correct) / ((2 * cardLimit - gameLimit + 1) * (gameLimit / 2)) +\r\n        incorrect;\r\n      Game.endGame({ result, exercise: \"rapidGame\", setProgress });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((7 + next) * 1750) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      setActive(false);\r\n      setPauseInterval(true);\r\n      Game.delay(2500, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput(input);\r\n        !isTouchDevice && Game.delay(2500, () => setPauseInterval(false));\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, state, answer]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    Game.correct();\r\n    Game.delay(2000, () => {\r\n      // I dont understand this line\r\n      // if (next !== ref.current.next) return;\r\n\r\n      isTouchDevice && setTouchPlay(true);\r\n      setCorrect((prev) => prev + 1);\r\n      setCurrentRound(currentRound + 1);\r\n      result = Game.clearIncorrect(result);\r\n      setResults(result);\r\n      const ENDOFROUND = currentRound === cardLimit - 2;\r\n      if (ENDOFROUND) setNext((prev) => prev + 1);\r\n      else answerQuestion(state);\r\n    });\r\n  }\r\n\r\n  function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const curAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n      isTouchDevice && setPauseInterval(false);\r\n    });\r\n  }\r\n\r\n  function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    Game.delay(500, () => setActive(true));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPauseInterval(touchPlay);\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"rapid-game\">\r\n      <Navigation challenge=\"Rapid Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay round={currentRound} onClick={handleTouchPlay} />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(RapidGame);\r\n","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React, { useEffect, useState } from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport Lesson from \"../exercise/lesson/lesson\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = ({ setLecture, lecture }) => {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  useEffect(\r\n    () =>\r\n      setTimeout(() => {\r\n        setDisplay(false);\r\n      }, 5500),\r\n    []\r\n  );\r\n\r\n  if (!display) return <Lesson setLecture={setLecture} lecture={lecture} />;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n      <div className=\"title-container\">\r\n        <div className=\"title\">Learn Yoruba</div>\r\n        <div className=\"sub-title\">\r\n          One of the principal languages of Nigeria\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Practice from \"../component/exercise/practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"../component/exercise/lesson/lesson\";\r\nimport Task from \"../component/exercise/task/task\";\r\nimport EasyGame from \"../component/exercise/easyGame/easyGame\";\r\nimport EasyGameAccent from \"../component/exercise/easyGame/easyGameAccent\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"../component/exercise/hardGame/hardGame\";\r\nimport MemoryGame from \"../component/exercise/memoryGame/memoryGame\";\r\nimport Reading from \"../component/exercise/reading/reading\";\r\nimport RapidGame from \"../component/exercise/rapidGame/rapidGame\";\r\nimport Home from \"../component/home/home\";\r\nimport \"./pages.css\";\r\n\r\nconst Pages = ({ lecture, setLecture, location, Game, handleRestart }) => {\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        {/* {location.pathname !== \"/\" && (\r\n          <Link\r\n            to={`/${location.pathname === \"/task\" ? \"\" : \"task\"}`}\r\n            className=\"return\"\r\n          >\r\n            <TiArrowBack />\r\n          </Link>\r\n        )} */}\r\n        <Route exact path=\"/\">\r\n          {/* <div className=\"reset\" onClick={handleRestart}>\r\n            Reset\r\n          </div> */}\r\n        </Route>\r\n        <Switch>\r\n          {/* <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/exercise\">\r\n            <Practice lecture={lecture} type=\"exercise\" />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} Game={Game} location={location} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGameAccent\">\r\n            <EasyGameAccent lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/reading\">\r\n            <Reading lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/rapidGame\">\r\n            <RapidGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          {/* <Route path=\"/lesson\">\r\n            <Lesson setLecture={setLecture} lecture={lecture} />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <Home setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState =\r\n  saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    case \"RESETPROGRESS\":\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\n\r\nclass GameLogic {\r\n  lecture = 1;\r\n  generateCards = function ({ cardLimit, totalLength, currentLength = 0 }) {\r\n    const cards = new Set();\r\n    let i = 0;\r\n    while (i < cardLimit) {\r\n      let value;\r\n      if ((!totalLength || currentLength) && Math.ceil(Math.random() * 2) === 2)\r\n        value = Math.ceil(Math.random() * currentLength) + totalLength;\r\n      else value = Math.ceil(Math.random() * (totalLength + currentLength));\r\n\r\n      if (!cards.has(value)) {\r\n        i++;\r\n        cards.add(value);\r\n      }\r\n    }\r\n    return [...cards];\r\n  };\r\n\r\n  playCards = function ({\r\n    cardLimit,\r\n    setSoundState,\r\n    gameSpeed,\r\n    cards,\r\n    autoPlay,\r\n    setCleanUp,\r\n  }) {\r\n    for (let i = 0; i < cardLimit; i++) {\r\n      this.delay(\r\n        gameSpeed * i,\r\n        () => {\r\n          autoPlay &&\r\n            Sound.start(`files/lecture${this.lecture}/${cards[i]}.m4a`);\r\n          setSoundState(i);\r\n        },\r\n        setCleanUp\r\n      );\r\n    }\r\n    return gameSpeed * cardLimit;\r\n    // this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n  };\r\n  endGame = function ({ result, exercise, setProgress }) {\r\n    setProgress({ result, exercise, lecture: this.lecture });\r\n    alert(\"result: \" + result + \"%\");\r\n  };\r\n\r\n  answerQuestion = function ({ state, cardLimit, silent }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    !silent && Sound.start(`files/lecture${this.lecture}/${state[value]}.m4a`);\r\n    return state[value];\r\n  };\r\n  answerQuestionMultLectures = function ({ state, cardLimit }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    const { lecture, exercise } = this.displayCard(state[value], this.lecture);\r\n    Sound.start(`files/lecture${lecture}/${exercise}.m4a`);\r\n    return state[value];\r\n  };\r\n  correct = function () {\r\n    Sound.start(\"files/yes.m4a\");\r\n  };\r\n  incorrect = function () {\r\n    Sound.start(\"files/no.m4a\");\r\n  };\r\n  delay = function (timeout, cb, setCleanUp) {\r\n    const timeOut = setTimeout(() => {\r\n      cb();\r\n      setCleanUp &&\r\n        setCleanUp((prev) => {\r\n          const index = prev.indexOf(timeOut);\r\n          index > -1 && prev.splice(index, 1);\r\n          return prev;\r\n        });\r\n    }, timeout);\r\n    setCleanUp && setCleanUp((prev) => [...prev, timeOut]);\r\n  };\r\n  isTouchDevice = () =>\r\n    \"ontouchstart\" in window ||\r\n    navigator.maxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0;\r\n  totalCards = () =>\r\n    lesson\r\n      .slice(0, this.lecture - 1)\r\n      .reduce(\r\n        (total, cur) =>\r\n          (typeof total === \"number\" ? total : total.words.length) +\r\n          cur.words.length,\r\n        0\r\n      );\r\n  displayCard = function (state, lecture) {\r\n    let runningTotal = state,\r\n      currentLecture,\r\n      exercise,\r\n      accumulation = 0;\r\n    for (let i = 0; i < lecture; i++) {\r\n      const current = lesson[i].words.length;\r\n      if (runningTotal - current <= 0) {\r\n        exercise = state - accumulation;\r\n        currentLecture = i + 1;\r\n        break;\r\n      }\r\n      runningTotal -= current;\r\n      accumulation += current;\r\n    }\r\n    return { exercise, lecture: currentLecture, state };\r\n  };\r\n  setResult = function ({ input, answer, results, state }) {\r\n    const current = [...results];\r\n    const index = state.findIndex((cur) => cur === input);\r\n    current[index] = { input, answer };\r\n    return current;\r\n  };\r\n  clearIncorrect = function (results) {\r\n    const result = results.map((cur) =>\r\n      cur?.answer === \"correct\" ? cur : { ...cur, answer: \"\" }\r\n    );\r\n    return result;\r\n  };\r\n  remainingState = function ({ state, results }) {\r\n    return state.filter((cur) => {\r\n      const index = results.findIndex((el) => el?.input === cur);\r\n      return index === -1 || results[index].answer !== \"correct\";\r\n    });\r\n  };\r\n  answerQuestions = function ({ state, results }) {\r\n    const remainingState = this.remainingState({ state, results });\r\n    return this.answerQuestionMultLectures({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n    });\r\n  };\r\n}\r\n\r\nexport default GameLogic;\r\n","import React, { useState } from \"react\";\nimport Pages from \"./pages/pages\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport GameLogic from \"./component/exercise/gameLogic\";\nimport { resetProgress } from \"./action\";\nimport \"./App.css\";\n// import { Progress } from \"./progress\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem(\"Yourba-lecture\") || \"1\";\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const Game = new GameLogic();\n  Game.lecture = lecture;\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    Game.lecture = value;\n    window.localStorage.setItem(\"Yourba-lecture\", JSON.stringify(value));\n  };\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  const handleRestart = () => {\n    if (window.confirm(\"Are you sure you want to delete the progress?\"))\n      store.dispatch(resetProgress());\n  };\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        {/* <Header /> */}\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Pages\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n                Game={Game}\n                handleRestart={handleRestart}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}