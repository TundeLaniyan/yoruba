{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/practice/practice.jsx","component/progress/progress.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/exercise/easyGame/easyGame.jsx","component/card/cardText.jsx","component/exercise/easyGame/easyGameAccent.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/exercise.jsx","img/logo.png","component/header/header.jsx","reducer.js","component/exercise/gameLogic.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","Slider","lecture","auto","random","exercise","setExercise","max","lesson","lessons","length","useEffect","start","randomNumber","prev","value","Math","ceil","className","disabled","onClick","style","backgroundImage","langauge","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","title","Progress","Component","percentage","props","color","percent","top","right","bottom","left","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","Object","values","reduce","total","currentValue","to","fontWeight","task","GiGymBag","SiWeasyl","GiDiamondHard","FaMemory","entries","key","Value","setProgress","payload","type","GameFooter","audio","correct","incorrect","active","noText","langaugeText","setLangaugeText","replace","split","setTimeout","Card","memo","hide","brightness","backgroundColor","filter","undefined","dispatch","Game","setState","soundState","setSoundState","answer","setAnswer","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","setCleanUp","unMount","gameLimit","gameSpeed","isTouchDevice","forEach","clearTimeout","totalCards","cards","generateCards","cardLimit","playCards","nextRound","endGame","result","answerQuestion","sort","handleOnClick","useCallback","input","delay","CardText","ans","HardGame","setCorrect","displayCard","answerQuestionMultLectures","lastLectureLength","inputLecture","position","splice","indexOf","answerLecture","cardLecture","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","ref","memoryGame","hiddenIndex","Exercise","location","pathname","path","Header","src","logo","alt","saveState","window","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","GameLogic","Set","i","has","add","alert","floor","timeout","cb","timeOut","navigator","maxTouchPoints","msMaxTouchPoints","slice","currentLecture","runningTotal","accumulation","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba6ba7aa.chunk.js","sourcesContent":["class SoundClass {\r\n    #audio = new Audio();\r\n    url = \"\";\r\n    stop() {\r\n        this.#audio.pause();\r\n        this.#audio.currentTime = 0;\r\n    }\r\n    start(url) {\r\n        this.stop();\r\n        this.#audio = new Audio(url);\r\n        this.url = url;\r\n        this.#audio.play();\r\n    }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;","import React, { useEffect } from \"react\";\r\nimport { lesson } from '../../../../data.json';\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.css\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => auto && Sound.start(`files/lecture${lecture}/${exercise}.m4a`), [exercise]);\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"switch switch--next\"\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n      ></button>\r\n      <div className=\"slider__img-container\">\r\n        <div\r\n          className=\"slider__img\"\r\n          onClick={() => Sound.start(`files/lecture${lecture}/${exercise}.m4a`)}\r\n          style={{backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`}}\r\n        ></div>\r\n        <h5>{lesson[lecture - 1].langauge?.[exercise - 1]}</h5>\r\n        <h5>{lesson[lecture - 1].lessons[exercise - 1]}</h5>\r\n      </div>\r\n      <button\r\n        className=\"switch\"\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => setRandom(random ? false : true)}\r\n      >\r\n        {random ? 'Normal' : 'Random'}\r\n      </button>\r\n      <div className=\"btn\" onClick={() => setAuto(!auto)}>\r\n        {auto ? \"Auto\" : \"Manual\"}\r\n      </div>\r\n      <div className=\"btn\" onClick={() => setAutoPlay(!autoPlay)}>\r\n        {autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport './practice.css';\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), [])\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if(autoPlay) setIntervalId(\r\n      setInterval(() => setExercise(prev => prev < max ? prev + 1 : 1), 4000)\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"practice\">\r\n        <Slider \r\n          lecture={lecture} \r\n          auto={auto} \r\n          random={random}\r\n          exercise={exercise} \r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;","import React from \"react\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\nimport \"./progress.css\";\r\n\r\nconst Progress = ({ className, Component, percentage = 0, ...props }) => {\r\n  const color = { complete: 'rgb(180, 107, 83)', incomplete: 'rgb(102, 72, 62)' };\r\n  const percent = {\r\n    top: {\r\n      backgroundImage: `linear-gradient(to right, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    right: {\r\n      backgroundImage: `linear-gradient(to bottom, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    bottom: {\r\n      backgroundImage: `linear-gradient(to left, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    left: {\r\n      backgroundImage: `linear-gradient(to top, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n  };\r\n\r\n  if (percentage < 12.5)\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%, ${color.complete} ${\r\n      50 + percentage * 4\r\n    }%, ${color.incomplete} ${50 + percentage * 4}%)`;\r\n  else if (percentage < 37.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} ${\r\n      (percentage - 12.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 12.5) * 4}%)`;\r\n  } else if (percentage < 62.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} ${\r\n      (percentage - 37.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 37.5) * 4}%)`;\r\n  } else if (percentage < 87.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} ${\r\n      (percentage - 62.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 62.5) * 4}%)`;\r\n  } else {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.complete} ${\r\n      (percentage - 87.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 87.5) * 4}%, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n  }\r\n\r\n  return (\r\n    <div className={`progress-container ${className}`}>\r\n      <div className=\"progress__top\" style={percent.top}></div>\r\n      <div className=\"progress__body\">\r\n        <div className=\"progress__side\" style={percent.left}></div>\r\n        <Component {...props} />\r\n        {percentage >= 75 && (\r\n          <div className=\"progress__pass\">\r\n            <TiTickOutline className=\"progress__pass-img\" />\r\n          </div>\r\n        )}\r\n        <div className=\"progress__side\" style={percent.right}></div>\r\n      </div>\r\n      <div className=\"progress__bottom\" style={percent.bottom}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Progress from \"../../progress/progress\";\r\nimport \"./lesson.css\";\r\n\r\nconst Lesson = ({ setLecture, progress }) => {\r\n\r\n  const noOfExercise = 3;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(lesson.map((cur, index) => {\r\n      const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress ? Object.values(levelProgress) : [0];\r\n        const percentage = levelProgressArray.reduce((total, currentValue) => total + currentValue) / noOfExercise;         \r\n        percentage >= 75 && setPassed(prev => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n    }))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Select Level</div>\r\n      <div className=\"lesson__length\">{passed} / {lesson.length}</div>\r\n        {progression.map((cur, index) => \r\n          <Progress\r\n            key={index}\r\n            Component={() => (\r\n              <Link\r\n                key={index}\r\n                className=\"lesson__container\"\r\n                to=\"/task\"\r\n                onClick={() => setLecture(index + 1)}\r\n              >\r\n                <div\r\n                  className=\"lesson__img\"\r\n                  style={{backgroundImage: `url(./img/lecture${index + 1}/1.jpg)`}}\r\n                />\r\n                <div style={{ fontWeight: 700 }}>{cur.title}</div>\r\n              </Link>\r\n            )}\r\n            percentage={cur.percentage}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state\r\n})\r\n\r\nexport default connect(mapStateToProps)(Lesson);","import React from \"react\";\r\nimport { GiDiamondHard, GiGymBag } from \"react-icons/gi\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { GiBugleCall } from \"react-icons/gi\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  const task = {\r\n    // lesson: GrScheduleNew,\r\n    exercise: GiGymBag,\r\n    [lecture === 1 ? 'easyGameAccent' : 'easyGame']: SiWeasyl,\r\n    // speaking: IoMdMicrophone,\r\n    hardGame: GiDiamondHard,\r\n    memoryGame: FaMemory,\r\n    // recall: GiBugleCall,\r\n  };\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"title\">Select Task</div>\r\n      <div className=\"task__select\">\r\n        {Object.entries(task).map(([key, Value], index) => {\r\n          return (\r\n            <Progress\r\n              key={index}\r\n              className=\"task__box\"\r\n              Component={() => (\r\n                <Link className=\"task__container\" to={key}>\r\n                  <Value className=\"task__img\" />\r\n                  <div className=\"task__title\">{key}</div>\r\n                </Link>\r\n              )}\r\n              percentage={progress[lecture]?.[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });","import React, { useState, useEffect } from 'react';\r\nimport { GiSpeaker } from 'react-icons/gi';\r\nimport { lesson } from '../../data.json';\r\nimport Sound from '../../Sound';\r\nimport './gameFooter.css';\r\n\r\nconst GameFooter = ({ percent = 100, audio, correct, incorrect, active, noText }) => {\r\n    const [langaugeText, setLangaugeText] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        if (noText) return;\r\n        const [exercise, lecture] = Sound.url.replace(\"files/lecture\", \"\").replace(\".m4a\", \"\").split(\"/\");\r\n        setTimeout(() => {\r\n            if (exercise !== 'files' && exercise > 0)\r\n            setLangaugeText(lesson[exercise - 1].langauge?.[lecture - 1]);\r\n        }, 1500);\r\n        // eslint-disable-next-line\r\n    }, [Sound.url])\r\n\r\n    return (\r\n        <div\r\n            className=\"game__footer\"\r\n            style={{\r\n            backgroundImage: `linear-gradient(to right, rgb(90 44 29 / 100%) ${percent}%, rgb(90 44 29 / 23%) ${percent}%)`,\r\n            }}\r\n        >\r\n            <div\r\n            className=\"score score__play\"\r\n            onClick={() => active && Sound.start(audio)}\r\n            >\r\n                <GiSpeaker />\r\n            </div>\r\n            <h5 className=\"langauge-text\">{langaugeText}</h5>\r\n            <div className=\"score score__correct\">{correct}</div>\r\n            <div className=\"score score__incorrect\">{incorrect}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameFooter;","import React, { memo } from 'react';\r\nimport { lesson } from '../../data.json';\r\nimport './card.css';\r\n\r\nconst Card = memo(function Card({ state, lecture, exercise, onClick, hide, brightness }) {\r\n    return (\r\n        <div \r\n          className=\"card\" \r\n          onClick={() => onClick(state)} \r\n          style={\r\n              hide ? \r\n              { backgroundColor: \"#bbb7aa35\" } : \r\n              brightness ? \r\n              { filter: `brightness(${brightness})`} : \r\n          {}}>\r\n            <div\r\n              className=\"img\"\r\n              style={hide >= 0 ? {} : { backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)` }}\r\n            />\r\n            {!(hide >= 0) && <h5 className=\"card__text\">{lesson[lecture - 1].lessons[exercise - 1]}</h5>}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Card;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(() => () => unMount.current.forEach(cur => clearTimeout(cur)), []);\r\n  \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse() , [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      setAnswer(Game.answerQuestion({ state, cardLimit }));\r\n      setState(prev => prev.sort(() => (Math.random() > .5) ? 1 : -1));\r\n      setActive(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const totalCards = lesson[lecture - 1].lessons.length;\r\n    const cards = Game.generateCards({ cardLimit, totalCards, setState });\r\n    if(isTouchDevice) setActive(true);\r\n    else Game.playCards({ cards, cardLimit, gameSpeed, setSoundState, setCleanUp, autoPlay: true });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else Game.endGame({ \r\n      setProgress,\r\n      result: (gameLimit * 100) / (gameLimit + incorrect),\r\n      exercise: \"easyGame\",\r\n    });\r\n  };\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    if (!active) return;\r\n    Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n    if (isTouchDevice && !touchPlay) return;\r\n    setActive(false);\r\n    Game.delay(gameSpeed, () => {\r\n      if (input === answer) {\r\n        Game.correct();\r\n        Game.delay(2000, () => {\r\n          setNext((prev) => prev + 1);\r\n        }, setCleanUp);\r\n      } else {\r\n        Game.incorrect();\r\n        Game.delay(2000, () => {\r\n          Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n          setIncorrect((prev) => prev + 1);\r\n          setActive(true);\r\n        }, setCleanUp);\r\n      }\r\n    }, setCleanUp);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [active, touchPlay, answer]);\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>Play</div>}\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card \r\n            key={index} \r\n            state={cur} \r\n            lecture={lecture} \r\n            exercise={cur} \r\n            onClick={handleOnClick} \r\n            brightness={index === soundState ? 2 : 1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter \r\n        audio={`files/lecture${lecture}/${answer}.m4a`} \r\n        correct={next} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);","import React, { memo } from 'react';\r\nimport { lesson } from '../../data.json';\r\nimport './card.css';\r\n\r\nconst CardText = memo(function CardText({ state, exercise, onClick, hide, brightness }) {\r\n  return (\r\n    <div \r\n      className=\"card\" \r\n      onClick={() => onClick(state)} \r\n      style={\r\n        hide ? \r\n        { backgroundColor: \"#bbb7aa35\" } : \r\n        brightness ? \r\n        { filter: `brightness(${brightness})`} : {}\r\n      }\r\n    >\r\n      <h1 className=\"card__text--large\">\r\n        {!(hide >= 0) && lesson[0].lessons[exercise - 1]}\r\n      </h1>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default CardText;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport CardText from \"../../card/cardText\";\r\nimport { lesson } from '../../../data.json';\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGameAccent = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lesson[0].lessons.length / 3;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 3;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(() => () => unMount.current.forEach(cur => clearTimeout(cur)), []);\r\n  \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      const ans = Game.answerQuestion({ state, cardLimit });\r\n      setAnswer(ans)\r\n      setState(prev => prev.sort(() => (Math.random() > .5) ? 1 : -1));\r\n      setActive(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const cards = [next*3 + 1, next*3 + 2, next*3 + 3];\r\n    setState(cards);\r\n    if(isTouchDevice) setActive(true);\r\n    else Game.playCards({ cards, cardLimit, gameSpeed, setSoundState, setCleanUp, autoPlay: true });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else Game.endGame({ \r\n      setProgress,\r\n      result: (gameLimit * 100) / (gameLimit + incorrect),\r\n      exercise: \"easyGame\",\r\n    });\r\n  };\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    if (!active) return;\r\n    Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n    if (isTouchDevice && !touchPlay) return;\r\n    setActive(false);\r\n    Game.delay(gameSpeed, () => {\r\n      if (input === answer) {\r\n        Game.correct();\r\n        Game.delay(2000, () => {\r\n          setNext((prev) => prev + 1);\r\n        }, setCleanUp);\r\n      } else {\r\n        Game.incorrect();\r\n        Game.delay(2000, () => {\r\n          Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n          setIncorrect((prev) => prev + 1);\r\n          setActive(true);\r\n        }, setCleanUp);\r\n      }\r\n    }, setCleanUp);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [active, touchPlay, answer]);\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      { !touchPlay && isTouchDevice && \r\n        <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>Play</div> }\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <CardText \r\n            key={cur} \r\n            state={cur} \r\n            exercise={cur} \r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter \r\n        audio={`files/lecture1/${answer}.m4a`} \r\n        correct={next} \r\n        incorrect={incorrect} \r\n        active={active}\r\n        noText={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGameAccent);","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const displayCard = Game.displayCard;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const cardLimit = next + 5;\r\n    const totalCards = Game.totalCards();\r\n    const lastLectureLength = lesson[lecture - 1].lessons.length;\r\n    Game.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) {\r\n      nextRound()\r\n    } else {\r\n      Game.endGame({ \r\n        result: (100 * (correct - incorrect)) / correct, \r\n        exercise: \"hardGame\", \r\n        setProgress \r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === next + 5) {\r\n      setTimeout(() => { answerQuestion(state) }, 2500);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n  \r\n  function answerQuestion(state) {\r\n    setAnswer(Game.answerQuestionMultLectures({ state, cardLimit: state.length }));\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    setActive(false);\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    Sound.start(`files/lecture${inputLecture}/${position}.m4a`);\r\n    Game.delay(2000, () => {\r\n      if (input === answer) {\r\n        Game.correct();\r\n        setCorrect((prev) => prev + 1);\r\n        Game.delay(1500, () => {\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          if (current.length === 1) setNext((prev) => prev + 1);\r\n          else answerQuestion(current);\r\n        });\r\n      } else {\r\n        Game.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        Game.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          Sound.start(`files/lecture${answerLecture}/${position}.m4a`);\r\n          setActive(true);\r\n        });\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [active]);\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Hard Game</div>\r\n      <div className=\"select\">\r\n        {state.map((cur) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return cardLecture > 1 ? <Card  \r\n            key={cur} \r\n            state={cur} \r\n            lecture={cardLecture}\r\n            exercise={position} \r\n            onClick={handleOnClick} \r\n          /> : <CardText\r\n            key={cur} \r\n            state={cur} \r\n            exercise={cur} \r\n            onClick={handleOnClick}\r\n          /> \r\n        })}\r\n      </div>\r\n      <GameFooter \r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`} \r\n        correct={correct} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const memoryGame = next < 5;\r\n  const isTouchDevice = Game.isTouchDevice() && !memoryGame;\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 10;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setPercent(100);\r\n    const totalCards = Game.totalCards();\r\n    const lastLectureLength = lesson[lecture - 1].lessons.length\r\n    Game.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), [])\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else Game.endGame({ \r\n        result: (200 * correct) / (((1 + gameLimit) * gameLimit) + (incorrect * 2)),\r\n        exercise: \"memoryGame\",\r\n        setProgress \r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === cardLimit) {\r\n      !memoryGame && answerQuestion(state);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = memoryGame ? 1000 : 3000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        if (memoryGame) {\r\n          setHidden(ref.current.state);\r\n          answerQuestion(ref.current.state);\r\n        } else {\r\n          setNext((prev) => prev + 1);\r\n        }\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((memoryGame ? 5000 : 12000) + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback((input) => {\r\n    if (!active) return;\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    Sound.start(`files/lecture${inputLecture}/${position}.m4a`);\r\n    setActive(false);\r\n    if (memoryGame) {\r\n      const current = [...hidden];\r\n      const hiddenIndex = current.indexOf(input);\r\n      current[hiddenIndex] = -current[hiddenIndex];\r\n      setHidden(current);\r\n    } else setPauseInterval(true);\r\n    Game.delay(2500, () => {\r\n      const correct = input === answer;\r\n      if (correct) {\r\n        Game.correct();\r\n        Game.delay(2000, () => {\r\n          if (next !== ref.current.next) return;\r\n          isTouchDevice && setTouchPlay(true);\r\n          setCorrect((prev) => prev + 1);\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          memoryGame && setHidden(current);\r\n          if (current.length === 1) {\r\n            memoryGame && setHidden([]);\r\n            setNext((prev) => prev + 1);\r\n          } else answerQuestion(current);\r\n        });\r\n      } else {\r\n        Game.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        memoryGame && setHidden(state);\r\n        Game.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          Sound.start(`files/lecture${answerLecture}/${position}.m4a`);\r\n          setActive(true);\r\n          !memoryGame && isTouchDevice && setPauseInterval(false);\r\n        })\r\n      }\r\n      !memoryGame && !isTouchDevice && setPauseInterval(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [active]);\r\n\r\n  function answerQuestion(state) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    setAnswer(Game.answerQuestionMultLectures({ state, cardLimit: state.length }));\r\n    Game.delay(2000, () => setActive(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPauseInterval(touchPlay);\r\n  }, [touchPlay])\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Memory Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay ? \r\n          <div className=\"touch-play\" onClick={handleTouchPlay}>Play</div> :\r\n          state.map((cur, index) => {\r\n            const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n            return cardLecture > 1 ?\r\n              <Card \r\n                key={cur} \r\n                state={cur} \r\n                lecture={cardLecture} \r\n                exercise={position} \r\n                onClick={handleOnClick} \r\n                hide={hidden[index]}\r\n              /> : \r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n              />\r\n          })\r\n        }\r\n      </div>\r\n      <GameFooter \r\n        percent={percent} \r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`} \r\n        correct={correct} \r\n        incorrect={incorrect} \r\n        active={active} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);","import React from \"react\";\r\nimport Practice from \"./practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"./lesson/lesson\";\r\nimport Task from \"./task/task\";\r\nimport EasyGame from \"./easyGame/easyGame\";\r\nimport EasyGameAccent from \"./easyGame/easyGameAccent\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"./hardGame/hardGame\";\r\nimport MemoryGame from \"./memoryGame/memoryGame\";\r\nimport \"./exercise.css\";\r\n\r\nconst Exercise = ({ lecture, setLecture, location, Game }) => {\r\n\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        <Link\r\n          to={`/${location.pathname !== \"/task\" ? \"task\" : \"\"}`}\r\n          className=\"return\"\r\n        >\r\n          {location.pathname !== \"/\" && <TiArrowBack />}\r\n        </Link>\r\n        <Switch>\r\n          {/* <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/exercise\">\r\n            <Practice lecture={lecture} type=\"exercise\" />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGameAccent\">\r\n            <EasyGameAccent lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Lesson setLecture={setLecture} />\r\n          </Route> \r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState = saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { lesson } from '../../data.json';\r\nimport Sound from '../../Sound';\r\n\r\nclass GameLogic {\r\n    lecture = 1;\r\n    generateCards = function({ cardLimit, totalCards, setState, lastLectureLength }) {\r\n        const cards = new Set();\r\n        let i = 0;\r\n        while (i < cardLimit) {\r\n          let value; \r\n          if ((!totalCards || lastLectureLength) && Math.ceil(Math.random() * 2) === 2) {\r\n              value = Math.ceil(Math.random() * lastLectureLength) + totalCards;\r\n          } else { value = Math.ceil(Math.random() * totalCards); }\r\n          if (!cards.has(value)) {\r\n            i++;\r\n            cards.add(value);\r\n          }\r\n        }\r\n        setState([...cards]);\r\n        return [...cards]\r\n      };\r\n\r\n    playCards = function({ cardLimit, setSoundState, gameSpeed, cards, autoPlay, setCleanUp }) {\r\n        for (let i = 0; i < cardLimit; i++) {\r\n            this.delay(gameSpeed * i, () => {\r\n                autoPlay && Sound.start(`files/lecture${this.lecture}/${cards[i]}.m4a`);\r\n                setSoundState(i);\r\n            }, setCleanUp);\r\n        }\r\n        this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n    };\r\n    endGame = function({ result, exercise, setProgress }) {\r\n        setProgress({ result, exercise, lecture: this.lecture });\r\n        alert(\"result: \" + result + \"%\");\r\n    };\r\n\r\n    answerQuestion = function({ state, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        Sound.start(`files/lecture${this.lecture}/${state[value]}.m4a`);\r\n        return state[value];\r\n    };\r\n    answerQuestionMultLectures = function({ state, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        const { lecture, position } = this.displayCard(state[value], this.lecture);\r\n        Sound.start(`files/lecture${lecture}/${position}.m4a`);\r\n        return state[value];\r\n    };\r\n    correct = function() { Sound.start(\"files/yes.m4a\") };\r\n    incorrect = function() { Sound.start(\"files/no.m4a\") };\r\n    delay = function(timeout, cb, setCleanUp) { \r\n        const timeOut = setTimeout(() => { \r\n            cb();\r\n            setCleanUp && setCleanUp(prev => {\r\n                const index = prev.indexOf(timeOut);\r\n                index > -1 && prev.splice(index, 1);\r\n                return prev;\r\n            })\r\n        }, timeout);\r\n        setCleanUp && setCleanUp(prev => [...prev, timeOut]);\r\n    };\r\n    isTouchDevice = () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n    totalCards = () => lesson.slice(0, this.lecture - 1).reduce((total, cur) =>\r\n        (typeof total === \"number\" ? total : total.lessons.length) + cur.lessons.length\r\n    , 0);\r\n    displayCard = function(state, lecture) {\r\n        let runningTotal = state, currentLecture, position, accumulation = 0;\r\n        for (let i = 0; i < lecture; i++) {\r\n          const current = lesson[i].lessons.length;\r\n          if (runningTotal - current <= 0) {\r\n            position = state - accumulation;\r\n            currentLecture = i + 1;\r\n            break;\r\n          }\r\n          runningTotal -= current;\r\n          accumulation +=current\r\n        }\r\n        return { position, lecture: currentLecture }\r\n    };\r\n}\r\n\r\nexport default GameLogic","import React, { useState } from \"react\";\nimport Exercise from \"./component/exercise/exercise\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport GameLogic from \"./component/exercise/gameLogic\";\nimport \"./App.css\";\n// import { Progress } from \"./progress\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem('Yourba-lecture') || '1';\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const Game = new GameLogic();\n  Game.lecture = lecture;\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    Game.lecture = value;\n    window.localStorage.setItem('Yourba-lecture', JSON.stringify(value));\n  }\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header setLecture={setSaveLecture} />\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Exercise\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n                Game={Game}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}