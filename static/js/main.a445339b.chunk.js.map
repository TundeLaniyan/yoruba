{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/button/button.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/navigation/navigation.jsx","component/exercise/practice/practice.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/exercise/gameLogic.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/card/cardText.jsx","component/exercise/easyGame/easyGame.jsx","component/exercise/easyGame/easyGameAccent.jsx","component/touchPlay/touchPlay.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/reading/reading.jsx","component/exercise/rapidGame/rapidGame.jsx","img/logo.png","component/home/home.jsx","pages/pages.jsx","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","a","getDuration","duration","playDelay","audio","Promise","resolve","addEventListener","delay","setTimeout","Slider","lecture","auto","random","exercise","setExercise","getWord","max","lesson","text","length","useEffect","randomNumber","prev","value","Math","ceil","className","disabled","onClick","src","alt","Button","forwardRef","ref","content","props","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Navigation","challenge","to","title","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","style","backgroundImage","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","percentage","Object","values","reduce","total","currentValue","noOfExercise","description","toFixed","width","task","easy","hard","reading","memory","rapid","entries","key","setProgress","payload","type","GameLogic","generateCards","cardLimit","totalLength","currentLength","cards","Set","i","has","add","playCards","setSoundState","gameSpeed","setCleanUp","start","endGame","result","alert","answerQuestion","silent","floor","answerQuestionMultLectures","displayCard","correct","incorrect","timeout","cb","timeOut","indexOf","splice","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","totalCards","slice","currentLecture","runningTotal","accumulation","setResult","input","answer","results","findIndex","clearIncorrect","remainingState","filter","el","answerQuestions","replace","getWordMult","translate","currentLesson","loop","k","toLowerCase","Game","GameFooter","percent","active","noText","languageText","setLanguageText","soundText","Card","memo","hide","brightness","Answer","TiTick","TiTimes","light","setLight","CardText","undefined","dispatch","CurrentCard","setState","soundState","setAnswer","setResults","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","buttonRef","createRef","unMount","gameLimit","forEach","clearTimeout","nextRound","scrollIntoView","behaviour","shuffleCards","card","sort","prevState","handleOnClick","useCallback","incorrectInput","marginBottom","TouchPlay","round","HardGame","currentRound","setCurrentRound","setCorrect","correctInput","display","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","revealCard","hiddenIndex","Reading","activeAnswer","setActiveAnswer","selectRef","behavior","handleTouchPlay","Home","setDisplay","logo","Pages","location","handleRestart","path","saveState","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","confirm","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a445339b.chunk.js","sourcesContent":["class SoundClass {\r\n  #audio = new Audio();\r\n  url = \"\";\r\n  stop() {\r\n    this.#audio.pause();\r\n    this.#audio.currentTime = 0;\r\n  }\r\n  start(url) {\r\n    this.stop();\r\n    this.#audio = new Audio(url);\r\n    this.url = url;\r\n    this.#audio.play();\r\n  }\r\n  async play(url) {\r\n    this.stop();\r\n    this.#audio = new Audio(url);\r\n    this.url = url;\r\n    const duration = await this.getDuration(this.#audio);\r\n    await this.playDelay(duration);\r\n  }\r\n  getDuration(audio) {\r\n    return new Promise(function (resolve) {\r\n      audio.addEventListener(\"loadedmetadata\", function () {\r\n        resolve(audio.duration * 1000);\r\n      });\r\n    });\r\n  }\r\n  playDelay(delay) {\r\n    return new Promise((resolve) => {\r\n      this.#audio.play();\r\n      setTimeout(() => resolve(), delay);\r\n    });\r\n  }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;\r\n","import React, { useEffect } from \"react\";\r\nimport { NATIVELANGUAGE, TARGETLANGUAGE } from \"../../../../constant\";\r\nimport { lesson } from \"../../../../data.json\";\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.scss\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise, getWord }) => {\r\n  const max = lesson[lecture - 1].text.length;\r\n\r\n  useEffect(\r\n    () => auto && Sound.play(`audio/${getWord(lecture, exercise)}.m4a`),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [exercise]\r\n  );\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n        className=\"prev\"\r\n      >\r\n        <img src=\"./img/return.svg\" alt=\"<\" />\r\n      </button>\r\n      <div className=\"slider__text\">\r\n        <div>\r\n          {lecture !== 1 &&\r\n            lesson[lecture - 1].text[exercise - 1][NATIVELANGUAGE]}\r\n        </div>\r\n        <div>{lesson[lecture - 1].text[exercise - 1][TARGETLANGUAGE]}</div>\r\n      </div>\r\n      <button\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n        className=\"next\"\r\n      >\r\n        <img src=\"./img/return.svg\" alt=\">\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"./button.scss\";\r\n\r\nconst Button = forwardRef(({ className, content, ...props }, ref) => {\r\n  return (\r\n    <div ref={ref} className={`button ${className}`} {...props}>\r\n      {content}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../../../button/button\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Button\r\n        onClick={() => setRandom(random ? false : true)}\r\n        content={random ? \"Normal\" : \"Random\"}\r\n      />\r\n      <Button\r\n        onClick={() => setAuto(!auto)}\r\n        content={auto ? \"Auto\" : \"Manual\"}\r\n      />\r\n      <Button\r\n        onClick={() => setAutoPlay(!autoPlay)}\r\n        content={autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../button/button\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = ({ challenge, lecture }) => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <Link to=\"/task\" className=\"return\">\r\n        <img src=\"./img/return.svg\" alt=\"<\" />\r\n      </Link>\r\n      <Button className=\"navigation-icon\" content=\"Learn Yoruba\" />\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"navigation__exercise\">\r\n        <img src=\"./img/exercise.svg\" alt=\"\" />\r\n        <span>{challenge}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport \"./practice.scss\";\r\nimport Sound from \"../../../Sound\";\r\nimport Navigation from \"../navigation/navigation\";\r\n\r\nconst Practice = ({ lecture, getWord }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].text.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), []);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if (autoPlay)\r\n      setIntervalId(\r\n        setInterval(\r\n          () => setExercise((prev) => (prev < max ? prev + 1 : 1)),\r\n          4000\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay]);\r\n\r\n  return (\r\n    <div className=\"practice\">\r\n      <Navigation challenge=\"Exercise\" lecture={lecture} />\r\n      <div className=\"practice__content\">\r\n        <div\r\n          className=\"practice__img\"\r\n          onClick={() => Sound.play(`audio/${getWord(lecture, exercise)}.m4a`)}\r\n          style={{\r\n            backgroundImage: `url(./images/${getWord(lecture, exercise)}.jpg)`,\r\n          }}\r\n        />\r\n        <Slider\r\n          lecture={lecture}\r\n          auto={auto}\r\n          random={random}\r\n          exercise={exercise}\r\n          setExercise={setExercise}\r\n          getWord={getWord}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Button from \"../../button/button\";\r\nimport \"./lesson.scss\";\r\n\r\nconst Lesson = ({ setLecture, lecture, progress }) => {\r\n  const noOfExercise = 5;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(\r\n      lesson.map((cur, index) => {\r\n        const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress\r\n          ? Object.values(levelProgress)\r\n          : [0];\r\n        const percentage =\r\n          levelProgressArray.reduce(\r\n            (total, currentValue) => total + currentValue\r\n          ) / (lecture > 1 ? noOfExercise : noOfExercise - 1);\r\n        percentage >= 75 && setPassed((prev) => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Choose your interests</div>\r\n      <div className=\"sub-title\">\r\n        Choose your catergory and procceed to start learining youruba\r\n      </div>\r\n      {/* <div className=\"lesson__length\">\r\n        {passed} / {lesson.length}\r\n      </div> */}\r\n      <div>\r\n        {progression.map((cur, index) => (\r\n          <div key={index} className=\"lesson__container\">\r\n            <div className=\"lesson__container-top\">\r\n              <div\r\n                className=\"lesson__img\"\r\n                style={{\r\n                  backgroundImage: `url(./images/Lecture${index + 1}.svg)`,\r\n                }}\r\n              />\r\n              <div className=\"lesson__content\">\r\n                <div className=\"lesson__title\">{cur.title}</div>\r\n                <div className=\"lesson__description\">{cur.description}</div>\r\n                <Link to=\"/task\" onClick={() => setLecture(index + 1)}>\r\n                  <Button content={\"Continue\"} />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div className=\"progress-bar__text\">\r\n                {cur.percentage.toFixed(1)}%\r\n              </div>\r\n              <div\r\n                className=\"progress-bar__percentage\"\r\n                style={{ width: cur.percentage + \"%\" }}\r\n              ></div>\r\n            </div>\r\n            {/* percentage={cur.percentage} */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lesson);\r\n","import React from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// import { GiDiamondHard, GiGymBag, GiBookCover } from \"react-icons/gi\";\r\n// import { SiWeasyl } from \"react-icons/si\";\r\n// import { FaMemory } from \"react-icons/fa\";\r\n// import { GiFastArrow } from \"react-icons/gi\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.scss\";\r\nimport Button from \"../../button/button\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  // const task = {\r\n  //   // lesson: GrScheduleNew,\r\n  //   exercise: GiGymBag,\r\n  //   [lecture === 1 ? \"easyGameAccent\" : \"easyGame\"]: SiWeasyl,\r\n  //   // speaking: IoMdMicrophone,\r\n  //   hardGame: GiDiamondHard,\r\n  //   reading: GiBookCover,\r\n  //   memoryGame: FaMemory,\r\n  //   rapidGame: GiFastArrow,\r\n  //   // recall: GiBugleCall,\r\n  // };\r\n  const task = {\r\n    exercise: \"exercise\",\r\n    // easy: lecture === 1 ? \"easyGameAccent\" : \"easyGame\",\r\n    easy: \"easyGame\",\r\n    hard: \"hardGame\",\r\n    reading: \"reading\",\r\n    memory: \"memoryGame\",\r\n    rapid: \"rapidGame\",\r\n  };\r\n\r\n  if (lecture === 1) delete task.reading;\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <Link to=\"/\" className=\"return\">\r\n        <img src=\"./img/return.svg\" alt=\"<\" />\r\n      </Link>\r\n      <Button className=\"task-icon\" content=\"Learn Yoruba\" />\r\n      <img\r\n        className=\"task__cover-img\"\r\n        alt=\"\"\r\n        src={`./images/lecture${lecture}.svg`}\r\n      />\r\n      <div className=\"task__content\">\r\n        <div className=\"task__title\">{lesson[lecture - 1].title}</div>\r\n        <div className=\"task__text\">Select Challenge</div>\r\n        <div className=\"task__select\">\r\n          {Object.entries(task).map(([key, value], index) => {\r\n            return (\r\n              <div key={index} className=\"task__container\" to={key}>\r\n                <img className=\"task__icon\" src={`./img/${key}.svg`} alt=\"\" />\r\n                <div className=\"task__challenge\">{key}</div>\r\n                {index > 0 && (\r\n                  <div className=\"task__progress\">\r\n                    {progress[lecture]?.[value]?.toFixed(1) || 0}%\r\n                  </div>\r\n                )}\r\n                <Link to={value}>\r\n                  <img className=\"task__icon\" src=\"./img/advance.svg\" alt=\"\" />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);\r\n","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const resetProgress = () => ({ type: \"RESETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });\r\n","import { NATIVELANGUAGE, TARGETLANGUAGE } from \"../../constant\";\r\nimport { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\n\r\nclass GameLogic {\r\n  lecture = 1;\r\n  generateCards = function ({ cardLimit, totalLength, currentLength = 0 }) {\r\n    const cards = new Set();\r\n    let i = 0;\r\n    while (i < cardLimit) {\r\n      let value;\r\n      if ((!totalLength || currentLength) && Math.ceil(Math.random() * 2) === 2)\r\n        value = Math.ceil(Math.random() * currentLength) + totalLength;\r\n      else value = Math.ceil(Math.random() * (totalLength + currentLength));\r\n\r\n      if (!cards.has(value)) {\r\n        i++;\r\n        cards.add(value);\r\n      }\r\n    }\r\n    return [...cards];\r\n  };\r\n\r\n  playCards = function ({\r\n    cardLimit,\r\n    setSoundState,\r\n    gameSpeed,\r\n    cards,\r\n    autoPlay,\r\n    setCleanUp,\r\n  }) {\r\n    for (let i = 0; i < cardLimit; i++) {\r\n      this.delay(\r\n        gameSpeed * i,\r\n        () => {\r\n          autoPlay &&\r\n            Sound.start(`audio/${this.getWord(this.lecture, cards[i])}.m4a`);\r\n          setSoundState(i);\r\n        },\r\n        setCleanUp\r\n      );\r\n    }\r\n    return gameSpeed * cardLimit;\r\n    // this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n  };\r\n  endGame = function ({ result, exercise, setProgress }) {\r\n    setProgress({ result, exercise, lecture: this.lecture });\r\n    alert(\"result: \" + result + \"%\");\r\n  };\r\n\r\n  answerQuestion = async function ({ state, cardLimit, silent }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    !silent &&\r\n      (await Sound.play(\r\n        `audio/${this.getWord(this.lecture, state[value])}.m4a`\r\n      ));\r\n    return state[value];\r\n  };\r\n  answerQuestionMultLectures = async function ({ state, cardLimit }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    const { lecture, exercise } = this.displayCard(state[value], this.lecture);\r\n    await Sound.play(`audio/${this.getWord(lecture, exercise)}.m4a`);\r\n    return state[value];\r\n  };\r\n  correct = async () => await Sound.play(\"audio/yes.m4a\");\r\n  incorrect = async () => await Sound.play(\"audio/no.m4a\");\r\n  delay = function (timeout, cb, setCleanUp) {\r\n    const timeOut = setTimeout(() => {\r\n      cb();\r\n      setCleanUp &&\r\n        setCleanUp((prev) => {\r\n          const index = prev.indexOf(timeOut);\r\n          index > -1 && prev.splice(index, 1);\r\n          return prev;\r\n        });\r\n    }, timeout);\r\n    setCleanUp && setCleanUp((prev) => [...prev, timeOut]);\r\n  };\r\n  isTouchDevice = () =>\r\n    \"ontouchstart\" in window ||\r\n    navigator.maxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0;\r\n  totalCards = () =>\r\n    lesson\r\n      .slice(0, this.lecture - 1)\r\n      .reduce(\r\n        (total, cur) =>\r\n          (typeof total === \"number\" ? total : total.text.length) +\r\n          cur.text.length,\r\n        0\r\n      );\r\n  displayCard = function (state, lecture) {\r\n    let runningTotal = state,\r\n      currentLecture,\r\n      exercise,\r\n      accumulation = 0;\r\n    for (let i = 0; i < lecture; i++) {\r\n      const current = lesson[i].text.length;\r\n      if (runningTotal - current <= 0) {\r\n        exercise = state - accumulation;\r\n        currentLecture = i + 1;\r\n        break;\r\n      }\r\n      runningTotal -= current;\r\n      accumulation += current;\r\n    }\r\n    return { exercise, lecture: currentLecture, state };\r\n  };\r\n  setResult = function ({ input, answer, results, state }) {\r\n    const current = [...results];\r\n    const index = state.findIndex((cur) => cur === input);\r\n    current[index] = { input, answer };\r\n    return current;\r\n  };\r\n  clearIncorrect = function (results) {\r\n    const result = results.map((cur) =>\r\n      cur?.answer === \"correct\" ? cur : { ...cur, answer: \"\" }\r\n    );\r\n    return result;\r\n  };\r\n  remainingState = function ({ state, results }) {\r\n    return state.filter((cur) => {\r\n      const index = results.findIndex((el) => el?.input === cur);\r\n      return index === -1 || results[index].answer !== \"correct\";\r\n    });\r\n  };\r\n  answerQuestions = async function ({ state, results }) {\r\n    const remainingState = this.remainingState({ state, results });\r\n    return await this.answerQuestionMultLectures({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n    });\r\n  };\r\n  getWord = (lecture, exercise) => {\r\n    if (!lecture || !exercise) return \"\";\r\n    return lesson[lecture - 1].text[exercise - 1][NATIVELANGUAGE].replace(\r\n      /\\s/g,\r\n      \"-\"\r\n    ).replace(\"?\", \"\");\r\n  };\r\n  getWordMult = (state, currentLecture) => {\r\n    if (!state || !currentLecture) return \"\";\r\n    const { lecture, exercise } = this.displayCard(state, currentLecture);\r\n    return this.getWord(lecture, exercise);\r\n  };\r\n  translate = (translate) => {\r\n    if (!translate) return \"\";\r\n    let text = \"\",\r\n      currentLesson;\r\n    loop: for (let i = 0; i < lesson.length; i++) {\r\n      for (let k = 0; k < lesson[i].text.length; k++) {\r\n        if (\r\n          translate.toLowerCase() ===\r\n          lesson[i].text[k][NATIVELANGUAGE].toLowerCase()\r\n        ) {\r\n          text = lesson[i].text[k][TARGETLANGUAGE];\r\n          currentLesson = i + 1;\r\n          break loop;\r\n        }\r\n      }\r\n    }\r\n    return { text, lesson: currentLesson };\r\n  };\r\n}\r\n\r\nexport default GameLogic;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\n// import { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\nimport GameLogic from \"../exercise/gameLogic\";\r\nimport \"./gameFooter.css\";\r\nconst Game = new GameLogic();\r\n\r\nconst GameFooter = ({\r\n  percent = 100,\r\n  audio,\r\n  correct,\r\n  incorrect,\r\n  active,\r\n  noText,\r\n}) => {\r\n  const [languageText, setLanguageText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // console.log(noText, Sound.url);\r\n    if (noText) return;\r\n    const soundText = Sound.url\r\n      .replace(\"audio/\", \"\")\r\n      .replace(\".m4a\", \"\")\r\n      .replace(/-/g, \" \");\r\n    const { text, lesson } = Game.translate(soundText);\r\n    if (lesson > 1) {\r\n      setLanguageText(text);\r\n      setTimeout(() => setLanguageText(\"\"), 4500);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [Sound.url]);\r\n\r\n  return (\r\n    <div\r\n      className=\"game__footer\"\r\n      style={{\r\n        backgroundImage: `linear-gradient(to right, #054d54 ${percent}%, #054d5459 ${percent}%)`,\r\n      }}\r\n    >\r\n      {audio && (\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() => active && Sound.play(audio)}\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n      )}\r\n      <h5 className=\"language-text\">{languageText}</h5>\r\n      <div className=\"score score__correct\">{correct}</div>\r\n      <div className=\"score score__incorrect\">{incorrect}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFooter;\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { lesson } from \"../../data.json\";\r\nimport { NATIVELANGUAGE } from \"../../constant\";\r\nimport \"./card.css\";\r\nimport GameLogic from \"../exercise/gameLogic\";\r\n\r\nconst Card = memo(function Card({\r\n  state,\r\n  lecture,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const text = lesson[lecture - 1].text[exercise - 1][NATIVELANGUAGE];\r\n\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    onClick(state);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={!hide && light ? { filter: `brightness(${light})` } : {}}\r\n    >\r\n      <div\r\n        className=\"img\"\r\n        style={\r\n          hide >= 0 && !answer\r\n            ? {}\r\n            : {\r\n                backgroundImage: `url(./images/${new GameLogic().getWord(\r\n                  lecture,\r\n                  exercise\r\n                )}.jpg)`,\r\n              }\r\n        }\r\n      />\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n      {!(hide >= 0) && <h5 className=\"card__text\">{text}</h5>}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React, { memo, useState } from \"react\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport { NATIVELANGUAGE } from \"../../constant\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst CardText = memo(function CardText({\r\n  state,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n  answer,\r\n  active = true,\r\n}) {\r\n  const Answer = answer === \"correct\" ? TiTick : TiTimes;\r\n  const [light, setLight] = useState(brightness);\r\n  const handleOnClick = () => {\r\n    if (answer || !active) return;\r\n    setLight(0.5);\r\n    setTimeout(() => {\r\n      setLight(brightness);\r\n    }, 2000);\r\n    onClick(state);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={handleOnClick}\r\n      style={!hide && light ? { filter: `brightness(${light})` } : {}}\r\n    >\r\n      <h1 className=\"card__text--large\">\r\n        {(!(hide >= 0) || answer) &&\r\n          lesson[0].text[exercise - 1][NATIVELANGUAGE]}\r\n      </h1>\r\n      {answer && (\r\n        <div className={`card__answer card__answer--${answer}`}>\r\n          <Answer className=\"card__answer-img\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardText;\r\n","import React, {\r\n  createRef,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport Button from \"../../button/button\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress, Game }) => {\r\n  const CurrentCard = lecture === 1 ? CardText : Card;\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const buttonRef = createRef();\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lecture === 1 ? lesson[0].text.length / 3 : 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = lecture === 1 ? 3 : 4;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => buttonRef.current?.scrollIntoView({ behaviour: \"smooth\" }));\r\n\r\n  const shuffleCards = (card) =>\r\n    [...card].sort(() => (Math.random() > 0.5 ? 1 : -1));\r\n\r\n  async function answerQuestion(state) {\r\n    setState((prevState) => shuffleCards(prevState));\r\n    const answer = await Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGame\",\r\n      });\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const totalLength = lesson[lecture - 1].text.length;\r\n    const cards =\r\n      lecture === 1\r\n        ? [next * 3 + 1, next * 3 + 2, next * 3 + 3]\r\n        : Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      await Sound.play(`audio/${Game.getWord(lecture, input)}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) {\r\n        setResults(\r\n          Game.setResult({ input, state, results, answer: \"correct\" })\r\n        );\r\n        await Game.correct();\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        setResults(\r\n          Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n        );\r\n        await Game.incorrect();\r\n        incorrectInput();\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.play(`audio/${Game.getWord(lecture, answer)}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className={`easy-game ${lecture === 1 && \"easy-game--accent\"}`}>\r\n      <Navigation challenge=\"Easy Game\" lecture={lecture} />\r\n      <div className={`select ${lecture === 1 && \"select--accent\"}`}>\r\n        {state.map((cur, index) => (\r\n          <CurrentCard\r\n            key={index}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <Button\r\n          className=\"easy-game__button\"\r\n          onClick={handleTouchPlay}\r\n          ref={buttonRef}\r\n          content=\"Play\"\r\n        />\r\n      )}\r\n      <div style={{ marginBottom: \"9rem\" }} />\r\n      <GameFooter\r\n        audio={`audio/${Game.getWord(lecture, answer)}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n        noText={lecture === 1}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);\r\n","import React, {\r\n  createRef,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport CardText from \"../../card/cardText\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./easyGame.css\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport Button from \"../../button/button\";\r\n\r\nconst EasyGameAccent = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const buttonRef = createRef();\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lesson[0].text.length / 3;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 3;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  async function answerQuestion(state) {\r\n    const answer = await Game.answerQuestion({ state, cardLimit });\r\n    setAnswer(answer);\r\n    setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n    setActive(true);\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGameAccent\",\r\n      });\r\n  }\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setResults([]);\r\n    setTouchPlay(false);\r\n    const cards = [next * 3 + 1, next * 3 + 2, next * 3 + 3];\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else {\r\n      const delay = Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n      Game.delay(delay, () => answerQuestion(cards));\r\n    }\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      await Sound.play(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        async () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"correct\" })\r\n            );\r\n            await Game.correct();\r\n            setNext((prev) => prev + 1);\r\n          } else {\r\n            setResults(\r\n              Game.setResult({ input, state, results, answer: \"incorrect\" })\r\n            );\r\n            await Game.incorrect();\r\n            incorrectInput();\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.play(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  function handleTouchPlay() {\r\n    setTouchPlay(true);\r\n    answerQuestion(state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game easy-game--accent\">\r\n      <Navigation challenge=\"Easy Game\" lecture={lecture} />\r\n      <div className=\"select select--accent\">\r\n        {state.map((cur, index) => (\r\n          <CardText\r\n            key={cur}\r\n            state={cur}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n            answer={results[index]?.answer}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <Button\r\n          className=\"easy-game__button\"\r\n          onClick={handleTouchPlay}\r\n          ref={buttonRef}\r\n          content=\"Play\"\r\n        />\r\n      )}\r\n      <div style={{ marginBottom: \"9rem\" }} />\r\n      <GameFooter\r\n        audio={`audio/${Game.getWord(1, answer)}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n        noText={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGameAccent);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./touchPlay.scss\";\r\n\r\nconst TouchPlay = ({ round, onClick, Sound }) => {\r\n  // eslint-disable-next-line\r\n  useEffect(() => Sound.stop(), []);\r\n  return (\r\n    <div className=\"touch-play\" onClick={onClick}>\r\n      {round ? \"Play\" : \"Next Round\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TouchPlay;\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 5;\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(isTouchDevice);\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].text.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    if (!isTouchDevice) Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"hardGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = await Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      await Sound.play(`audio/${Game.getWordMult(input, lecture)}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) correctInput(input);\r\n      else incorrectInput(input);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    isTouchDevice && setTouchPlay(true);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n    else answerQuestion(state, result);\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    await Sound.play(`audio/${Game.getWordMult(answer, lecture)}.m4a`);\r\n    setActive(true);\r\n  }\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <Navigation challenge=\"Hard Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay\r\n            round={currentRound}\r\n            onClick={handleTouchPlay}\r\n            Sound={Sound}\r\n          />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            const CurrentCard = display.lecture > 1 ? Card : CardText;\r\n            return (\r\n              <CurrentCard\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                answer={results[index]?.answer}\r\n                active={active}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        audio={`audio/${Game.getWordMult(answer, lecture)}.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 6;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setResults([]);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].text.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (200 * correct) / ((1 + gameLimit) * gameLimit + incorrect * 2),\r\n        exercise: \"memoryGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = 1000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setHidden(ref.current.state);\r\n        answerQuestion(ref.current.state);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, (5000 + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      revealCard(input);\r\n      await Sound.play(`audio/${Game.getWordMult(input, lecture)}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) correctInput(input);\r\n      else incorrectInput(input);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function revealCard(input) {\r\n    const current = [...hidden];\r\n    const hiddenIndex = current.indexOf(input);\r\n    current[hiddenIndex] = -current[hiddenIndex];\r\n    setHidden(current);\r\n  }\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    const ENDOFROUND = currentRound === cardLimit - 2;\r\n    if (ENDOFROUND) {\r\n      setHidden([]);\r\n      setNext((prev) => prev + 1);\r\n    } else {\r\n      // isTouchDevice && setTouchPlay(true);\r\n      setHidden(state);\r\n      answerQuestion(state, result);\r\n    }\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    setHidden(state);\r\n    await Sound.play(`audio/${Game.getWordMult(answer, lecture)}.m4a`);\r\n    setActive(true);\r\n  }\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = await Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    percent > 0 && setPauseInterval(touchPlay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <Navigation challenge=\"Memory Game\" lecture={lecture} />\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <TouchPlay\r\n            round={currentRound}\r\n            onClick={handleTouchPlay}\r\n            Sound={Sound}\r\n          />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            const CurrentCard = display.lecture > 1 ? Card : CardText;\r\n            return (\r\n              <CurrentCard\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n                answer={results[index]?.answer}\r\n                active={active}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`audio/${Game.getWordMult(answer, lecture)}.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { TARGETLANGUAGE } from \"../../../constant\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./reading.css\";\r\n\r\nconst Reading = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 4;\r\n  const cardLimit = 6;\r\n\r\n  function nextRound() {\r\n    const results = [];\r\n    setResults(results);\r\n    setCurrentRound(0);\r\n    setAnswer();\r\n    const totalLength = lesson[lecture - 1].text.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength });\r\n    setState(cards);\r\n    Game.delay(2500, () => answerQuestion(cards, results));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"reading\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    const remainingState = state.filter((cur) => {\r\n      const index = result.findIndex((el) => el?.input === cur);\r\n      return index === -1 || result[index].answer !== \"correct\";\r\n    });\r\n\r\n    const answer = await Game.answerQuestion({\r\n      state: remainingState,\r\n      cardLimit: remainingState.length,\r\n      silent: true,\r\n    });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      await Sound.play(`audio/${Game.getWord(lecture, input)}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) correctInput(input);\r\n      else incorrectInput(input);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    if (currentRound === cardLimit - 2) setNext((prev) => prev + 1);\r\n    else answerQuestion(state, result);\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"reading\">\r\n      <Navigation challenge=\"Reading\" lecture={lecture} />\r\n      <div className=\"text-block\">\r\n        {answer ? lesson[lecture - 1].text[answer - 1][TARGETLANGUAGE] : \"?\"}\r\n      </div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={cur}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            answer={results[index]?.answer}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter correct={correct} incorrect={incorrect} active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(Reading);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport TouchPlay from \"../../touchPlay/touchPlay\";\r\nimport Navigation from \"../navigation/navigation\";\r\nimport \"./rapidGame.css\";\r\n\r\nconst RapidGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [activeAnswer, setActiveAnswer] = useState(true);\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState();\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const selectRef = useRef();\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 5;\r\n  const cardLimit = next + 7;\r\n\r\n  async function nextRound() {\r\n    setState([]);\r\n    const results = [];\r\n    setResults(results);\r\n    setPercent(100);\r\n    setCurrentRound(0);\r\n    const totalLength = Game.totalCards();\r\n    const currentLength = lesson[lecture - 1].text.length;\r\n    const cards = Game.generateCards({ cardLimit, totalLength, currentLength });\r\n    setState(cards);\r\n    !isTouchDevice && setPauseInterval(true);\r\n    await answerQuestion(cards, results);\r\n    !isTouchDevice && setPauseInterval(false);\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(\r\n    () => selectRef.current.scrollIntoView({ behavior: \"smooth\" }),\r\n    [touchPlay]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else {\r\n      const result =\r\n        (100 * correct) / ((2 * cardLimit - gameLimit + 1) * (gameLimit / 2)) +\r\n        incorrect;\r\n      Game.endGame({ result, exercise: \"rapidGame\", setProgress });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((7 + next) * 1000) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    async (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      setPauseInterval(true);\r\n      await Sound.play(`audio/${Game.getWordMult(input, lecture)}.m4a`);\r\n      const CORRECT = input === answer;\r\n      if (CORRECT) await correctInput(input);\r\n      else await incorrectInput(input);\r\n      !isTouchDevice && setPauseInterval(false);\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, state, answer, touchPlay, pauseInterval]\r\n  );\r\n\r\n  async function correctInput(input) {\r\n    let result = Game.setResult({ input, state, results, answer: \"correct\" });\r\n    await Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    setCurrentRound(currentRound + 1);\r\n    result = Game.clearIncorrect(result);\r\n    setResults(result);\r\n    const ENDOFROUND = currentRound === cardLimit - 2;\r\n    if (ENDOFROUND) setNext((prev) => prev + 1);\r\n    else await answerQuestion(state, result);\r\n  }\r\n\r\n  async function incorrectInput(input) {\r\n    setResults(Game.setResult({ input, state, results, answer: \"incorrect\" }));\r\n    await Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    await Sound.play(`audio/${Game.getWordMult(answer, lecture)}.m4a`);\r\n    setActive(true);\r\n    isTouchDevice && setPauseInterval(false);\r\n  }\r\n\r\n  async function answerQuestion(state, result = results) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    const answer = await Game.answerQuestions({ state, results: result });\r\n    setAnswer(answer);\r\n    setActive(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    isTouchDevice && setPauseInterval(touchPlay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = async () => {\r\n    if (!activeAnswer) return;\r\n    setActiveAnswer(false);\r\n    await answerQuestion(state);\r\n    setTouchPlay(false);\r\n    setActiveAnswer(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"rapid-game\">\r\n      <Navigation challenge=\"Rapid Game\" lecture={lecture} />\r\n      <div className=\"select\" ref={selectRef}>\r\n        {touchPlay ? (\r\n          <TouchPlay\r\n            round={currentRound}\r\n            onClick={handleTouchPlay}\r\n            Sound={Sound}\r\n          />\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            const CurrentCard = display.lecture > 1 ? Card : CardText;\r\n            return (\r\n              <CurrentCard\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                active={active}\r\n                answer={results[index]?.answer}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`audio/${Game.getWordMult(answer, lecture)}.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(RapidGame);\r\n","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React, { useEffect, useState } from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport Lesson from \"../exercise/lesson/lesson\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = ({ setLecture, lecture }) => {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  useEffect(\r\n    () =>\r\n      setTimeout(() => {\r\n        setDisplay(false);\r\n      }, 5500),\r\n    []\r\n  );\r\n\r\n  if (!display) return <Lesson setLecture={setLecture} lecture={lecture} />;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n      <div className=\"title-container\">\r\n        <div className=\"title\">Learn Yoruba</div>\r\n        <div className=\"sub-title\">\r\n          One of the principal languages of Nigeria\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Practice from \"../component/exercise/practice/practice\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"../component/exercise/lesson/lesson\";\r\nimport Task from \"../component/exercise/task/task\";\r\nimport EasyGame from \"../component/exercise/easyGame/easyGame\";\r\nimport EasyGameAccent from \"../component/exercise/easyGame/easyGameAccent\";\r\nimport HardGame from \"../component/exercise/hardGame/hardGame\";\r\nimport MemoryGame from \"../component/exercise/memoryGame/memoryGame\";\r\nimport Reading from \"../component/exercise/reading/reading\";\r\nimport RapidGame from \"../component/exercise/rapidGame/rapidGame\";\r\nimport Home from \"../component/home/home\";\r\nimport \"./pages.css\";\r\n\r\nconst Pages = ({ lecture, setLecture, location, Game, handleRestart }) => {\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        {/* <Route exact path=\"/\">\r\n          <div className=\"reset\" onClick={handleRestart}>\r\n            Reset\r\n          </div>\r\n        </Route> */}\r\n        <Switch>\r\n          <Route path=\"/exercise\">\r\n            <Practice lecture={lecture} getWord={Game.getWord} />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGameAccent\">\r\n            <EasyGameAccent lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/reading\">\r\n            <Reading lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/rapidGame\">\r\n            <RapidGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/lesson\">\r\n            <Lesson setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState =\r\n  saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    case \"RESETPROGRESS\":\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\nimport Pages from \"./pages/pages\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport GameLogic from \"./component/exercise/gameLogic\";\nimport { resetProgress } from \"./action\";\nimport \"./App.css\";\n// import { Progress } from \"./progress\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem(\"Yourba-lecture\") || \"1\";\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const Game = new GameLogic();\n  Game.lecture = lecture;\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    Game.lecture = value;\n    window.localStorage.setItem(\"Yourba-lecture\", JSON.stringify(value));\n  };\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  const handleRestart = () => {\n    if (window.confirm(\"Are you sure you want to delete the progress?\"))\n      store.dispatch(resetProgress());\n  };\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        {/* <Header /> */}\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Pages\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n                Game={Game}\n                handleRestart={handleRestart}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}