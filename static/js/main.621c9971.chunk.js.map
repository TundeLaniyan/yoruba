{"version":3,"sources":["Sound.js","component/exercise/practice/slider/slider.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/practice/practice.jsx","component/progress/progress.jsx","component/exercise/lesson/lesson.jsx","component/exercise/task/task.jsx","action.js","component/gameFooter/gameFooter.jsx","component/card/card.jsx","component/exercise/easyGame/easyGame.jsx","component/card/cardText.jsx","component/exercise/easyGame/easyGameAccent.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/reading/reading.jsx","component/exercise/exercise.jsx","img/logo.png","component/header/header.jsx","reducer.js","component/exercise/gameLogic.js","App.js","reportWebVitals.js","index.js"],"names":["Sound","Audio","url","this","pause","currentTime","stop","play","Slider","lecture","auto","random","exercise","setExercise","max","lesson","words","length","useEffect","start","randomNumber","prev","value","Math","ceil","className","disabled","onClick","style","backgroundImage","langauge","Menu","setAuto","setRandom","autoPlay","setAutoPlay","Practice","useState","useRef","current","intervalId","setIntervalId","currentIntervalId","clearInterval","setInterval","title","Progress","Component","percentage","props","color","percent","top","right","bottom","left","connect","state","progress","setLecture","progression","setProgression","passed","setPassed","map","cur","index","levelProgress","Object","values","reduce","total","currentValue","noOfExercise","to","fontWeight","task","GiGymBag","SiWeasyl","GiDiamondHard","GiBookCover","FaMemory","reading","entries","key","Value","setProgress","payload","type","GameFooter","audio","correct","incorrect","active","noText","langaugeText","setLangaugeText","replace","split","setTimeout","Card","memo","hide","brightness","backgroundColor","filter","undefined","dispatch","Game","setState","soundState","setSoundState","answer","setAnswer","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","setCleanUp","unMount","gameLimit","gameSpeed","isTouchDevice","forEach","clearTimeout","totalCards","cards","generateCards","cardLimit","playCards","nextRound","endGame","result","answerQuestion","sort","handleOnClick","useCallback","input","delay","CardText","ans","HardGame","setCorrect","displayCard","answerQuestionMultLectures","lastLectureLength","curInput","updateState","correctInput","currentAnswer","splice","indexOf","display","hidden","setHidden","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","ref","memoryGame","inputLecture","hiddenIndex","revealCard","curAnswer","Reading","silent","language","Exercise","location","pathname","path","Header","src","logo","alt","saveState","window","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","GameLogic","Set","i","has","add","alert","floor","timeout","cb","timeOut","navigator","maxTouchPoints","msMaxTouchPoints","slice","currentLecture","runningTotal","accumulation","App","savedLecture","store","createStore","setSaveLecture","setItem","subscribe","getState","basename","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"41LAiBeA,EAFD,I,4FAdD,IAAIC,Q,KACbC,IAAM,G,wCACN,WACI,YAAAC,KAAA,MAAYC,QACZ,YAAAD,KAAA,MAAYE,YAAc,I,mBAE9B,SAAMH,GACFC,KAAKG,OACL,YAAAH,KAAA,MAAc,IAAIF,MAAMC,GACxBC,KAAKD,IAAMA,EACX,YAAAC,KAAA,MAAYI,W,qBCmCLC,EAzCA,SAAC,GAAsD,IAAD,EAAnDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC3CC,EAAMC,IAAON,EAAU,GAAGO,MAAMC,OAEtCC,qBACE,kBAAMR,GAAQV,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCG,EAAvC,WAEd,CAACA,IAGH,IAAMQ,EAAe,SAACC,EAAMC,GAC1B,OAAIX,EAAeY,KAAKC,KAAKD,KAAKZ,SAAWG,GACtCO,EAAOC,GAGhB,OACE,sBAAKG,UAAU,SAAf,UACE,wBACEA,UAAU,sBACVC,UAAWf,GAAUC,EAAW,EAChCe,QAAS,kBAAMd,GAAY,SAACQ,GAAD,OAAUD,EAAaC,GAAO,SAE3D,sBAAKI,UAAU,wBAAf,UACE,qBACEA,UAAU,cACVE,QAAS,kBAAM3B,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCG,EAAvC,UACfgB,MAAO,CACLC,gBAAgB,oBAAD,OAAsBpB,EAAtB,YAAiCG,EAAjC,YAGnB,uCAAKG,IAAON,EAAU,GAAGqB,gBAAzB,aAAK,EAA+BlB,EAAW,KAC/C,6BAAKG,IAAON,EAAU,GAAGO,MAAMJ,EAAW,QAE5C,wBACEa,UAAU,SACVC,UAAWf,GAAUC,EAAWE,EAAM,EACtCa,QAAS,kBAAMd,GAAY,SAACQ,GAAD,OAAUD,EAAaC,EAAM,aCrBjDU,G,MAhBF,SAAC,GAAiE,IAA/DrB,EAA8D,EAA9DA,KAAMsB,EAAwD,EAAxDA,QAASrB,EAA+C,EAA/CA,OAAQsB,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC1D,OACE,sBAAKV,UAAU,OAAf,UACE,wBAAQA,UAAU,MAAME,QAAS,kBAAMM,GAAUtB,IAAjD,SACGA,EAAS,SAAW,WAEvB,qBAAKc,UAAU,MAAME,QAAS,kBAAMK,GAAStB,IAA7C,SACGA,EAAO,OAAS,WAEnB,qBAAKe,UAAU,MAAME,QAAS,kBAAMQ,GAAaD,IAAjD,SACGA,EAAW,iBAAmB,yBC2CxBE,G,MAlDE,SAAC,GAAiB,IAAf3B,EAAc,EAAdA,QAClB,EAAwB4B,oBAAS,GAAjC,mBAAO3B,EAAP,KAAasB,EAAb,KACA,EAA4BK,oBAAS,GAArC,mBAAO1B,EAAP,KAAesB,EAAf,KACA,EAAgCI,mBAAS,GAAzC,mBAAOzB,EAAP,KAAiBC,EAAjB,KACwByB,mBACRC,QAAU3B,EAC1B,MAAgCyB,oBAAS,GAAzC,mBAAOH,EAAP,KAAiBC,EAAjB,KACA,EAAoCE,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAoBJ,mBAC1BI,EAAkBH,QAAUC,EAC5B,IAAM1B,EAAMC,IAAON,EAAU,GAAGO,MAAMC,OAgBtC,OAdAC,qBAAU,kBAAM,kBAAMyB,cAAcD,EAAkBH,YAAU,IAEhErB,qBAAU,WACRyB,cAAcH,GACVN,GACFO,EACEG,aACE,kBAAM/B,GAAY,SAACQ,GAAD,OAAWA,EAAOP,EAAMO,EAAO,EAAI,OACrD,QAIL,CAACa,IAGF,gCACE,qBAAKT,UAAU,QAAf,SAAwBV,IAAON,EAAU,GAAGoC,QAC5C,sBAAKpB,UAAU,WAAf,UACE,cAAC,EAAD,CACEhB,QAASA,EACTC,KAAMA,EACNC,OAAQA,EACRC,SAAUA,EACVC,YAAaA,IAEf,cAAC,EAAD,CACEH,KAAMA,EACNsB,QAASA,EACTE,SAAUA,EACVC,YAAaA,EACbxB,OAAQA,EACRsB,UAAWA,Y,+FCqBNa,EAlEE,SAAC,GAAwD,IAAtDrB,EAAqD,EAArDA,UAAWsB,EAA0C,EAA1CA,UAA0C,IAA/BC,kBAA+B,MAAlB,EAAkB,EAAZC,EAAY,iBACjEC,EAAoB,oBAApBA,EAAqD,mBACrDC,EAAU,CACdC,IAAK,CACHvB,gBAAgB,6BAAD,OAA+BqB,EAA/B,gBAAqDA,EAArD,SAEjBG,MAAO,CACLxB,gBAAgB,8BAAD,OAAgCqB,EAAhC,gBAAsDA,EAAtD,SAEjBI,OAAQ,CACNzB,gBAAgB,4BAAD,OAA8BqB,EAA9B,gBAAoDA,EAApD,SAEjBK,KAAM,CACJ1B,gBAAgB,2BAAD,OAA6BqB,EAA7B,gBAAmDA,EAAnD,UAmCnB,OA/BIF,EAAa,KACfG,EAAQC,IAAIvB,gBAAZ,oCAA2DqB,EAA3D,iBAAoFA,EAApF,iBAA2GA,EAA3G,YACE,GAAkB,EAAbF,EADP,cAEME,EAFN,YAE0B,GAAkB,EAAbF,EAF/B,MAGOA,EAAa,MACpBG,EAAQC,IAAIvB,gBAAZ,oCAA2DqB,EAA3D,iBAAoFA,EAApF,SACAC,EAAQE,MAAMxB,gBAAd,qCAA8DqB,EAA9D,YACwB,GAArBF,EAAa,MADhB,cAEME,EAFN,YAEgD,GAArBF,EAAa,MAFxC,OAGSA,EAAa,MACtBG,EAAQC,IAAIvB,gBAAZ,oCAA2DqB,EAA3D,iBAAoFA,EAApF,SACAC,EAAQE,MAAMxB,gBAAd,qCAA8DqB,EAA9D,kBAAsFA,EAAtF,UACAC,EAAQG,OAAOzB,gBAAf,mCAA6DqB,EAA7D,YACwB,GAArBF,EAAa,MADhB,cAEME,EAFN,YAEgD,GAArBF,EAAa,MAFxC,OAGSA,EAAa,MACtBG,EAAQC,IAAIvB,gBAAZ,oCAA2DqB,EAA3D,iBAAoFA,EAApF,SACAC,EAAQE,MAAMxB,gBAAd,qCAA8DqB,EAA9D,kBAAsFA,EAAtF,UACAC,EAAQG,OAAOzB,gBAAf,mCAA6DqB,EAA7D,kBAAqFA,EAArF,UACAC,EAAQI,KAAK1B,gBAAb,kCAA0DqB,EAA1D,YACwB,GAArBF,EAAa,MADhB,cAEME,EAFN,YAEgD,GAArBF,EAAa,MAFxC,QAIAG,EAAQC,IAAIvB,gBAAZ,oCAA2DqB,EAA3D,YACwB,GAArBF,EAAa,MADhB,cAEME,EAFN,YAEgD,GAArBF,EAAa,MAFxC,cAEuDE,EAFvD,iBAEgFA,EAFhF,SAGAC,EAAQE,MAAMxB,gBAAd,qCAA8DqB,EAA9D,kBAAsFA,EAAtF,UACAC,EAAQG,OAAOzB,gBAAf,mCAA6DqB,EAA7D,kBAAqFA,EAArF,UACAC,EAAQI,KAAK1B,gBAAb,kCAA0DqB,EAA1D,kBAAkFA,EAAlF,WAIA,sBAAKzB,UAAS,6BAAwBA,GAAtC,UACE,qBAAKA,UAAU,gBAAgBG,MAAOuB,EAAQC,MAC9C,sBAAK3B,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAiBG,MAAOuB,EAAQI,OAC/C,cAACR,EAAD,eAAeE,IACdD,GAAc,IACb,qBAAKvB,UAAU,iBAAf,SACE,cAAC,IAAD,CAAeA,UAAU,yBAG7B,qBAAKA,UAAU,iBAAiBG,MAAOuB,EAAQE,WAEjD,qBAAK5B,UAAU,mBAAmBG,MAAOuB,EAAQG,aCCxCE,G,MAAAA,aAJS,SAACC,GAAD,MAAY,CAClCC,SAAUD,KAGGD,EA3DA,SAAC,GAAuC,IAArCG,EAAoC,EAApCA,WAAYlD,EAAwB,EAAxBA,QAASiD,EAAe,EAAfA,SAErC,EAAsCrB,mBAAS,IAA/C,mBAAOuB,EAAP,KAAoBC,EAApB,KACA,EAA4BxB,mBAAS,GAArC,mBAAOyB,EAAP,KAAeC,EAAf,KAoBA,OAlBA7C,qBAAU,WACR2C,EACE9C,IAAOiD,KAAI,SAACC,EAAKC,GACf,IAAMC,EAAgBT,EAASQ,EAAQ,GAIjClB,GAHqBmB,EACvBC,OAAOC,OAAOF,GACd,CAAC,IAEgBG,QACjB,SAACC,EAAOC,GAAR,OAAyBD,EAAQC,MAC9B/D,EAAU,EAdF,EAcqBgE,GAEpC,OADAzB,GAAc,IAAMe,GAAU,SAAC1C,GAAD,OAAUA,EAAO,KACxC,2BAAK4C,GAAZ,IAAiBjB,aAAYc,iBAIhC,IAGD,sBAAKrC,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,iBAAf,UACGqC,EADH,MACc/C,IAAOE,UAEpB2C,EAAYI,KAAI,SAACC,EAAKC,GAAN,OACf,cAAC,EAAD,CAEEnB,UAAW,kBACT,eAAC,IAAD,CAEEtB,UAAU,oBACViD,GAAG,QACH/C,QAAS,kBAAMgC,EAAWO,EAAQ,IAJpC,UAME,qBACEzC,UAAU,cACVG,MAAO,CACLC,gBAAgB,oBAAD,OAAsBqC,EAAQ,EAA9B,cAGnB,qBAAKtC,MAAO,CAAE+C,WAAY,KAA1B,SAAkCV,EAAIpB,UAXjCqB,IAcTlB,WAAYiB,EAAIjB,YAjBXkB,a,gCCuBAV,G,MAAAA,aAJS,SAACC,GAAD,MAAY,CAClCC,SAAUD,KAGGD,EAjDF,SAAC,GAA2B,IAAD,EAAxB/C,EAAwB,EAAxBA,QAASiD,EAAe,EAAfA,SACjBkB,GAAI,GAERhE,SAAUiE,KAFF,cAGK,IAAZpE,EAAgB,iBAAmB,WAAaqE,KAHzC,yBAKEC,KALF,wBAMCC,KAND,2BAOIC,KAPJ,GAYV,OAFgB,IAAZxE,UAAsBmE,EAAKM,QAG7B,sBAAKzD,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,yBACA,qBAAKA,UAAU,eAAf,SACG2C,OAAOe,QAAQP,GAAMZ,KAAI,WAAeE,GAAW,IAAD,qBAAvBkB,EAAuB,KAAlBC,EAAkB,KACjD,OACE,cAAC,EAAD,CAEE5D,UAAU,YACVsB,UAAW,kBACT,eAAC,IAAD,CAAMtB,UAAU,kBAAkBiD,GAAIU,EAAtC,UACE,cAACC,EAAD,CAAO5D,UAAU,cACjB,qBAAKA,UAAU,cAAf,SAA8B2D,QAGlCpC,WAAU,UAAEU,EAASjD,UAAX,aAAE,EAAoB2E,IAR3BlB,eC9BNoB,EAAc,SAACC,GAAD,MAAc,CAAEC,KAAM,cAAeD,YCiDjDE,G,MA7CI,SAAC,GAOb,IAAD,IANJtC,eAMI,MANM,IAMN,EALJuC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,OACAC,EACI,EADJA,OAEA,EAAwCzD,mBAAS,IAAjD,mBAAO0D,EAAP,KAAqBC,EAArB,KAeA,OAbA9E,qBAAU,WACR,IAAI4E,EAAJ,CACA,MAA4B9F,EAAME,IAC/B+F,QAAQ,gBAAiB,IACzBA,QAAQ,OAAQ,IAChBC,MAAM,KAHT,mBAAOtF,EAAP,KAAiBH,EAAjB,KAIA0F,YAAW,WAAO,IAAD,EACE,UAAbvF,GAAwBA,EAAW,GACrCoF,EAAe,UAACjF,IAAOH,EAAW,GAAGkB,gBAAtB,aAAC,EAAgCrB,EAAU,MAC3D,SAEF,CAACT,EAAME,MAGR,sBACEuB,UAAU,eACVG,MAAO,CACLC,gBAAgB,kDAAD,OAAoDsB,EAApD,kCAAqFA,EAArF,OAHnB,UAMGuC,GACC,qBACEjE,UAAU,oBACVE,QAAS,kBAAMkE,GAAU7F,EAAMmB,MAAMuE,IAFvC,SAIE,cAAC,IAAD,MAGJ,oBAAIjE,UAAU,gBAAd,SAA+BsE,IAC/B,qBAAKtE,UAAU,uBAAf,SAAuCkE,IACvC,qBAAKlE,UAAU,yBAAf,SAAyCmE,SCHhCQ,G,MAvCFC,gBAAK,YAOd,IANF5C,EAMC,EANDA,MACAhD,EAKC,EALDA,QACAG,EAIC,EAJDA,SACAe,EAGC,EAHDA,QACA2E,EAEC,EAFDA,KACAC,EACC,EADDA,WAEA,OACE,sBACE9E,UAAU,OACVE,QAAS,kBAAMA,EAAQ8B,IACvB7B,MACE0E,EACI,CAAEE,gBAAiB,aACnBD,EACA,CAAEE,OAAO,cAAD,OAAgBF,EAAhB,MACR,GARR,UAWE,qBACE9E,UAAU,MACVG,MACE0E,GAAQ,EACJ,GACA,CACEzE,gBAAgB,oBAAD,OAAsBpB,EAAtB,YAAiCG,EAAjC,cAItB0F,GAAQ,IACT,oBAAI7E,UAAU,aAAd,SACGV,IAAON,EAAU,GAAGO,MAAMJ,EAAW,YCkGjC4C,G,MAAAA,iBAAQkD,GAJI,SAACC,GAAD,MAAe,CACxCrB,YAAa,SAACC,GAAD,OAAaoB,EAASrB,EAAYC,QAGlC/B,EA7HE,SAAC,GAAoC,IAAlC/C,EAAiC,EAAjCA,QAAS6E,EAAwB,EAAxBA,YAAasB,EAAW,EAAXA,KACxC,EAA0BvE,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcoD,EAAd,KACA,EAAoCxE,qBAApC,mBAAOyE,EAAP,KAAmBC,EAAnB,KACA,EAA4B1E,qBAA5B,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAwB5E,mBAAS,GAAjC,mBAAO6E,EAAP,KAAaC,EAAb,KACA,EAAkC9E,mBAAS,GAA3C,mBAAOuD,EAAP,KAAkBwB,EAAlB,KACA,EAA4B/E,oBAAS,GAArC,mBAAOwD,EAAP,KAAewB,EAAf,KACA,EAAkChF,oBAAS,GAA3C,mBAAOiF,EAAP,KAAkBC,EAAlB,KACA,EAA8BlF,mBAAS,IAAvC,mBAAOmF,EAAP,KAAgBC,EAAhB,KACMC,EAAUpF,mBAChBoF,EAAQnF,QAAUiF,EAClB,IAAMG,EAAY,GACZC,EAAY,KAEZC,EAAgBjB,EAAKiB,gBAE3B3G,qBACE,kBAAM,kBAAMwG,EAAQnF,QAAQuF,SAAQ,SAAC7D,GAAD,OAAS8D,aAAa9D,SAC1D,IAIF/C,qBAAU,WA6BJgG,EAAOS,EAlBb,WACEd,EAAS,IACTU,GAAa,GACb,IAAMS,EAAajH,IAAON,EAAU,GAAGO,MAAMC,OACvCgH,EAAQrB,EAAKsB,cAAc,CAAEC,UAxBnB,EAwB8BH,aAAYnB,aACtDgB,EAAeR,GAAU,GAE3BT,EAAKwB,UAAU,CACbH,QACAE,UA7BY,EA8BZP,YACAb,gBACAU,aACAvF,UAAU,IAKQmG,GAEpBzB,EAAK0B,QAAQ,CACXhD,cACAiD,OAASZ,KAAoBA,EAAY/B,GACzChF,SAAU,eAlCgB,CAACsG,IAEjChG,qBAAU,YAXQ,IAYZ4F,GAA4BQ,KAC9BL,EAAUL,EAAK4B,eAAe,CAAE/E,QAAO0E,UAbzB,KAcdtB,GAAS,SAACxF,GAAD,OAAUA,EAAKoH,MAAK,kBAAOlH,KAAKZ,SAAW,GAAM,GAAK,QAC/D0G,GAAU,MAGX,CAACP,EAAYQ,IA6BhB,IAAMoB,EAAgBC,uBACpB,SAACC,GACM/C,IACL7F,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCmI,EAAvC,SACIf,IAAkBP,IACtBD,GAAU,GACVT,EAAKiC,MACHjB,GACA,WACkBgB,IAAU5B,GAExBJ,EAAKjB,UACLiB,EAAKiC,MAAM,KAAM,kBAAM1B,GAAQ,SAAC9F,GAAD,OAAUA,EAAO,OAAIoG,KAEpDb,EAAKhB,YACLgB,EAAKiC,MAAM,KAAM,kBAWzB7I,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCuG,EAAvC,SACAI,GAAa,SAAC/F,GAAD,OAAUA,EAAO,UAC9BgG,GAAU,KAbuCI,MAG7CA,OAIJ,CAAC5B,EAAQyB,EAAWN,IAStB,OACE,sBAAKvF,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,wBACE6F,GAAaO,GACb,qBAAKpG,UAAU,YAAYE,QAAS,kBAAM4F,GAAa,IAAvD,kBAIF,qBAAK9F,UAAU,SAAf,SACGgC,EAAMO,KAAI,SAACC,EAAKC,GAAN,OACT,cAAC,EAAD,CAEET,MAAOQ,EACPxD,QAASA,EACTG,SAAUqD,EACVtC,QAAS+G,EACTnC,WAAYrC,IAAU4C,EAAa,EAAI,GALlC5C,QASX,cAAC,EAAD,CACEwB,MAAK,uBAAkBjF,EAAlB,YAA6BuG,EAA7B,QACLrB,QAASuB,EACTtB,UAAWA,EACXC,OAAQA,WC9FDiD,EA1BEzC,gBAAK,YAMlB,IALF5C,EAKC,EALDA,MACA7C,EAIC,EAJDA,SACAe,EAGC,EAHDA,QACA2E,EAEC,EAFDA,KACAC,EACC,EADDA,WAEA,OACE,qBACE9E,UAAU,OACVE,QAAS,kBAAMA,EAAQ8B,IACvB7B,MACE0E,EACI,CAAEE,gBAAiB,aACnBD,EACA,CAAEE,OAAO,cAAD,OAAgBF,EAAhB,MACR,GARR,SAWE,oBAAI9E,UAAU,oBAAd,WACK6E,GAAQ,IAAMvF,IAAO,GAAGC,MAAMJ,EAAW,UC+GrC4C,mBAAQkD,GAJI,SAACC,GAAD,MAAe,CACxCrB,YAAa,SAACC,GAAD,OAAaoB,EAASrB,EAAYC,QAGlC/B,EA9HQ,SAAC,GAAoC,IAAlC/C,EAAiC,EAAjCA,QAAS6E,EAAwB,EAAxBA,YAAasB,EAAW,EAAXA,KAC9C,EAA0BvE,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcoD,EAAd,KACA,EAAoCxE,qBAApC,mBAAOyE,EAAP,KAAmBC,EAAnB,KACA,EAA4B1E,qBAA5B,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAwB5E,mBAAS,GAAjC,mBAAO6E,EAAP,KAAaC,EAAb,KACA,EAAkC9E,mBAAS,GAA3C,mBAAOuD,EAAP,KAAkBwB,EAAlB,KACA,EAA4B/E,oBAAS,GAArC,mBAAOwD,EAAP,KAAewB,EAAf,KACA,EAAkChF,oBAAS,GAA3C,mBAAOiF,EAAP,KAAkBC,EAAlB,KACA,EAA8BlF,mBAAS,IAAvC,mBAAOmF,EAAP,KAAgBC,EAAhB,KACMC,EAAUpF,mBAChBoF,EAAQnF,QAAUiF,EAClB,IAAMG,EAAY5G,IAAO,GAAGC,MAAMC,OAAS,EACrC2G,EAAY,KAEZC,EAAgBjB,EAAKiB,gBAE3B3G,qBACE,kBAAM,kBAAMwG,EAAQnF,QAAQuF,SAAQ,SAAC7D,GAAD,OAAS8D,aAAa9D,SAC1D,IAIF/C,qBAAU,WA8BJgG,EAAOS,EAlBb,WACEd,EAAS,IACTU,GAAa,GACb,IAAMU,EAAQ,CAAQ,EAAPf,EAAW,EAAU,EAAPA,EAAW,EAAU,EAAPA,EAAW,GACtDL,EAASoB,GACLJ,EAAeR,GAAU,GAE3BT,EAAKwB,UAAU,CACbH,QACAE,UA9BY,EA+BZP,YACAb,gBACAU,aACAvF,UAAU,IAKQmG,GAEpBzB,EAAK0B,QAAQ,CACXhD,cACAiD,OAAqB,IAAZZ,GAAoBA,EAAY/B,GACzChF,SAAU,qBAnCgB,CAACsG,IAEjChG,qBAAU,WACR,GAZgB,IAYZ4F,GAA4BQ,EAAW,CACzC,IAAMyB,EAAMnC,EAAK4B,eAAe,CAAE/E,QAAO0E,UAb3B,IAcdlB,EAAU8B,GACVlC,GAAS,SAACxF,GAAD,OAAUA,EAAKoH,MAAK,kBAAOlH,KAAKZ,SAAW,GAAM,GAAK,QAC/D0G,GAAU,MAGX,CAACP,EAAYQ,IA6BhB,IAAMoB,EAAgBC,uBACpB,SAACC,GACM/C,IACL7F,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCmI,EAAvC,SACIf,IAAkBP,IACtBD,GAAU,GACVT,EAAKiC,MACHjB,GACA,WACkBgB,IAAU5B,GAExBJ,EAAKjB,UACLiB,EAAKiC,MAAM,KAAM,kBAAM1B,GAAQ,SAAC9F,GAAD,OAAUA,EAAO,OAAIoG,KAEpDb,EAAKhB,YACLgB,EAAKiC,MAAM,KAAM,kBAWzB7I,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCuG,EAAvC,SACAI,GAAa,SAAC/F,GAAD,OAAUA,EAAO,UAC9BgG,GAAU,KAbuCI,MAG7CA,OAIJ,CAAC5B,EAAQyB,EAAWN,IAStB,OACE,sBAAKvF,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,wBACE6F,GAAaO,GACb,qBAAKpG,UAAU,YAAYE,QAAS,kBAAM4F,GAAa,IAAvD,kBAIF,qBAAK9F,UAAU,wBAAf,SACGgC,EAAMO,KAAI,SAACC,EAAKC,GAAN,OACT,cAAC,EAAD,CAEET,MAAOQ,EACPrD,SAAUqD,EACVtC,QAAS+G,EACTnC,WAAYrC,IAAU4C,EAAa,EAAI,GAJlC7C,QAQX,cAAC,EAAD,CACEyB,MAAK,yBAAoBsB,EAApB,QACLrB,QAASuB,EACTtB,UAAWA,EACXC,OAAQA,EACRC,QAAQ,U,QCnHVkD,G,MAAW3C,gBAAK,YAA2C,IAA/B5F,EAA8B,EAA9BA,QAAS6E,EAAqB,EAArBA,YAAasB,EAAQ,EAARA,KACtD,EAA0BvE,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcoD,EAAd,KACA,EAA4BxE,qBAA5B,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAwB5E,mBAAS,GAAjC,mBAAO6E,EAAP,KAAaC,EAAb,KACA,EAA8B9E,mBAAS,GAAvC,mBAAOsD,EAAP,KAAgBsD,EAAhB,KACA,EAAkC5G,mBAAS,GAA3C,mBAAOuD,EAAP,KAAkBwB,EAAlB,KACA,EAA4B/E,oBAAS,GAArC,mBAAOwD,EAAP,KAAewB,EAAf,KAEM6B,EAActC,EAAKsC,YA6BzB,SAASV,EAAe/E,GACtBwD,EACEL,EAAKuC,2BAA2B,CAAE1F,QAAO0E,UAAW1E,EAAMxC,UAE5D2F,EAAKiC,MAAM,KAAM,kBAAMxB,GAAU,MAvBnCnG,qBAAU,WACJgG,EAZY,EAGlB,WACEL,EAAS,IACT,IAAMsB,EAAYjB,EAAO,EACnBc,EAAapB,EAAKoB,aAClBoB,EAAoBrI,IAAON,EAAU,GAAGO,MAAMC,OACpD2F,EAAKsB,cAAc,CAAEC,YAAWH,aAAYnB,WAAUuC,sBAKpDf,GAEAzB,EAAK0B,QAAQ,CACXC,OAAS,KAAO5C,EAAUC,GAAcD,EACxC/E,SAAU,WACV0E,kBAIH,CAAC4B,IAEJhG,qBAAU,WACJuC,EAAMxC,SAAWiG,EAAO,GAC1Bf,YAAW,kBAAMqC,EAAe/E,KAAQ,QAEzC,CAACA,IASJ,IAAMiF,EAAgBC,uBACpB,SAACC,GACC,GAAK/C,EAAL,CACAwB,GAAU,GACV,IAAMgC,EAAWH,EAAYN,EAAOnI,GACpCT,EAAMmB,MAAN,uBAA4BkI,EAAS5I,QAArC,YAAgD4I,EAASzI,SAAzD,SACAgG,EAAKiC,MAAM,KAAM,WACCD,IAAU5B,EAShC,SAAsB4B,GACpBhC,EAAKjB,UACLsD,GAAW,SAAC5H,GAAD,OAAUA,EAAO,KAC5BuF,EAAKiC,MAAM,MAAM,WACf,IAAMpF,EAAQ6F,EAAYV,GACL,IAAjBnF,EAAMxC,OAAckG,GAAQ,SAAC9F,GAAD,OAAUA,EAAO,KAC5CmH,EAAe/E,MAdL8F,CAAaX,IA0B9BhC,EAAKhB,YACLwB,GAAa,SAAC/F,GAAD,OAAUA,EAAO,KAC9BuF,EAAKiC,MAAM,MAAM,WACf,IAAMW,EAAgBN,EAAYlC,EAAQvG,GAC1CT,EAAMmB,MAAN,uBACkBqI,EAAc/I,QADhC,YAC2C+I,EAAc5I,SADzD,SAGAyG,GAAU,aA5BZ,CAACxB,IAaH,SAASyD,EAAYV,GACnB,IAAMrG,EAAO,YAAOkB,GAGpB,OAFAlB,EAAQkH,OAAOlH,EAAQmH,QAAQd,GAAQ,GACvC/B,EAAStE,GACFA,EAeT,OACE,sBAAKd,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,uBACA,qBAAKA,UAAU,SAAf,SACGgC,EAAMO,KAAI,SAACC,GACV,IAAM0F,EAAUT,EAAYjF,EAAKxD,GACjC,OAAOkJ,EAAQlJ,QAAU,EACvB,cAAC,EAAD,CAEEgD,MAAOQ,EACPxD,QAASkJ,EAAQlJ,QACjBG,SAAU+I,EAAQ/I,SAClBe,QAAS+G,GAJJzE,GAOP,cAAC,EAAD,CAEER,MAAOQ,EACPrD,SAAUqD,EACVtC,QAAS+G,GAHJzE,QAQb,cAAC,EAAD,CACEyB,MAAK,uBAAkBwD,EAAYlC,EAAQvG,GAASA,QAA/C,YACHyI,EAAYlC,EAAQvG,GAASG,SAD1B,QAGL+E,QAASA,EACTC,UAAWA,EACXC,OAAQA,WAUDrC,mBAAQkD,GAJI,SAACC,GAAD,MAAe,CACxCrB,YAAa,SAACC,GAAD,OAAaoB,EAASrB,EAAYC,QAGlC/B,CAAuCwF,GC0EvCxF,G,MAAAA,iBAAQkD,GAJI,SAACC,GAAD,MAAe,CACxCrB,YAAa,SAACC,GAAD,OAAaoB,EAASrB,EAAYC,QAGlC/B,EA3MI,SAAC,GAAoC,IAAlC/C,EAAiC,EAAjCA,QAAS6E,EAAwB,EAAxBA,YAAasB,EAAW,EAAXA,KAC1C,EAA0BvE,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcoD,EAAd,KACA,EAA4BxE,mBAAS,IAArC,mBAAOuH,EAAP,KAAeC,EAAf,KACA,EAA4BxH,qBAA5B,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAwB5E,mBAAS,GAAjC,mBAAO6E,EAAP,KAAaC,EAAb,KACA,EAA8B9E,mBAAS,GAAvC,mBAAOsD,EAAP,KAAgBsD,EAAhB,KACA,EAAkC5G,mBAAS,GAA3C,mBAAOuD,EAAP,KAAkBwB,EAAlB,KACA,EAA4B/E,oBAAS,GAArC,mBAAOwD,EAAP,KAAewB,EAAf,KACA,EAA8BhF,mBAAS,KAAvC,mBAAOc,EAAP,KAAgB2G,EAAhB,KACA,EAAoCzH,mBAAS,GAA7C,mBAAO0H,EAAP,KAAmBC,EAAnB,KACA,EAA0C3H,oBAAS,GAAnD,mBAAO4H,EAAP,KAAsBC,EAAtB,KACMC,EAAM7H,mBACZ6H,EAAI5H,QAAU,CAAE2E,OAAMzD,QAAON,UAAS8G,gBAAezC,QAASuC,GAC9D,IAAMb,GAActC,EAAKsC,YACnBkB,GAAalD,EAAO,EACpBW,GAAgBjB,EAAKiB,kBAAoBuC,GAC/C,GAAkC/H,oBAAS,GAA3C,qBAAOiF,GAAP,MAAkBC,GAAlB,MAEMY,GAAYjB,EAAO,EAUzBhG,qBAAU,kBAAM,kBAAMyB,cAAcwH,EAAI5H,QAAQiF,YAAU,IAE1DtG,qBAAU,WACJgG,EAdY,GAGlB,WACEL,EAAS,IACTiD,EAAW,KACX,IAAM9B,EAAapB,EAAKoB,aAClBoB,EAAoBrI,IAAON,EAAU,GAAGO,MAAMC,OACpD2F,EAAKsB,cAAc,CAAEC,aAAWH,aAAYnB,WAAUuC,sBAMhCf,GAEpBzB,EAAK0B,QAAQ,CACXC,OAAS,IAAM5C,GAAY,IAA0C,EAAZC,GACzDhF,SAAU,aACV0E,kBAGH,CAAC4B,IAEJhG,qBAAU,WACJuC,EAAMxC,SAAWkH,KAClBiC,IAAc5B,GAAe/E,KAG/B,CAACA,IAEJvC,qBAAU,WACRyB,cAAcoH,GACd,IACMvH,EAAaI,aAAY,WACzBuH,EAAI5H,QAAQ0H,gBACZE,EAAI5H,QAAQY,SAAW,GACzBR,cAAcH,GACV4H,IACFP,EAAUM,EAAI5H,QAAQkB,OACtB+E,GAAe2B,EAAI5H,QAAQkB,QAE3B0D,GAAQ,SAAC9F,GAAD,OAAUA,EAAO,OAG3B8I,EAAI5H,QAAQY,SAAW,EACvB2G,GAAW,SAACzI,GAAD,OAAUA,EAAO,WAE3B+I,GAAa,IAAO,MAASlD,GAfhBkD,GAAa,IAAO,MAegB,IACtDJ,EAAcxH,KAEb,CAACyH,EAAe/C,IAEnB,IAAMwB,GAAgBC,uBACpB,SAACC,GACC,GAAK/C,EAAL,CACA,MAA4CqD,GAAYN,EAAOnI,GAA9C4J,EAAjB,EAAQ5J,QAAuBG,EAA/B,EAA+BA,SAC/BZ,EAAMmB,MAAN,uBAA4BkJ,EAA5B,YAA4CzJ,EAA5C,SACAyG,GAAU,GACN+C,GAaR,SAAoBxB,GAClB,IAAMrG,EAAO,YAAOqH,GACdU,EAAc/H,EAAQmH,QAAQd,GACpCrG,EAAQ+H,IAAgB/H,EAAQ+H,GAChCT,EAAUtH,GAjBQgI,CAAW3B,GACtBsB,GAAiB,GACtBtD,EAAKiC,MAAM,MAAM,WACCD,IAAU5B,EAiBhC,SAAsB4B,GACpBhC,EAAKjB,UACLiB,EAAKiC,MAAM,KAAM,WAEf,GAAI3B,IAASiD,EAAI5H,QAAQ2E,KAAzB,CAEAW,IAAiBN,IAAa,GAC9B0B,GAAW,SAAC5H,GAAD,OAAUA,EAAO,KAC5B,IAAMoC,EAAQ6F,GAAYV,GACU,IAAjBnF,EAAMxC,QAEvBmJ,IAAcP,EAAU,IACxB1C,GAAQ,SAAC9F,GAAD,OAAUA,EAAO,OAEzB+I,IAAcP,EAAUpG,GACxB+E,GAAe/E,QA/BF8F,CAAaX,IA4C9BhC,EAAKhB,YACLwB,GAAa,SAAC/F,GAAD,OAAUA,EAAO,KAC9B+I,IAAcP,EAAUpG,GACxBmD,EAAKiC,MAAM,MAAM,WACf,IAAM2B,EAAYtB,GAAYlC,EAAQvG,GACtCT,EAAMmB,MAAN,uBACkBqJ,EAAU/J,QAD5B,YACuC+J,EAAU5J,SADjD,SAGAyG,GAAU,IACT+C,IAAcvC,IAAiBqC,GAAiB,QAnD9CE,KAAevC,IAAiBqC,GAAiB,SAItD,CAACrE,IA8BH,SAASyD,GAAYV,GACnB,IAAMrG,EAAO,YAAOkB,GAGpB,OAFAlB,EAAQkH,OAAOlH,EAAQmH,QAAQd,GAAQ,GACvC/B,EAAStE,GACFA,EAiBT,SAASiG,GAAe/E,GACtB,GAAIoE,KAAkBP,GAAW,OAAOC,IAAa,GACrDN,EACEL,EAAKuC,2BAA2B,CAAE1F,QAAO0E,UAAW1E,EAAMxC,UAE5D2F,EAAKiC,MAAM,KAAM,kBAAMxB,GAAU,MAGnCnG,qBAAU,WACRgJ,EAAiB5C,MAChB,CAACA,KAOJ,OACE,sBAAK7F,UAAU,cAAf,UACE,qBAAKA,UAAU,QAAf,yBACA,qBAAKA,UAAU,SAAf,SACG6F,GACC,qBAAK7F,UAAU,aAAaE,QAVZ,WACtB6G,GAAe/E,GACf8D,IAAa,IAQP,kBAIA9D,EAAMO,KAAI,SAACC,EAAKC,GACd,IAAMyF,EAAUT,GAAYjF,EAAKxD,GACjC,OAAOkJ,EAAQlJ,QAAU,EACvB,cAAC,EAAD,CAEEgD,MAAOQ,EACPxD,QAASkJ,EAAQlJ,QACjBG,SAAU+I,EAAQ/I,SAClBe,QAAS+G,GACTpC,KAAMsD,EAAO1F,IALRD,GAQP,cAAC,EAAD,CAEER,MAAOQ,EACPrD,SAAUqD,EACVtC,QAAS+G,GACTpC,KAAMsD,EAAO1F,IAJRD,QAUf,cAAC,EAAD,CACEd,QAASA,EACTuC,MAAK,uBAAkBwD,GAAYlC,EAAQvG,GAASA,QAA/C,YACHyI,GAAYlC,EAAQvG,GAASG,SAD1B,QAGL+E,QAASA,EACTC,UAAWA,EACXC,OAAQA,WClMV4E,G,MAAUpE,gBAAK,YAA2C,IAA/B5F,EAA8B,EAA9BA,QAAS6E,EAAqB,EAArBA,YAAasB,EAAQ,EAARA,KACrD,EAA0BvE,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcoD,EAAd,KACA,EAA4BxE,qBAA5B,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAwB5E,mBAAS,GAAjC,mBAAO6E,EAAP,KAAaC,EAAb,KACA,EAA8B9E,mBAAS,GAAvC,mBAAOsD,EAAP,KAAgBsD,EAAhB,KACA,EAAkC5G,mBAAS,GAA3C,mBAAOuD,EAAP,KAAkBwB,EAAlB,KACA,EAA4B/E,oBAAS,GAArC,mBAAOwD,EAAP,KAAewB,EAAf,KAiCA,SAASmB,EAAe/E,GACtB,IAAM0E,EAAY1E,EAAMxC,OAClB+F,EAASJ,EAAK4B,eAAe,CAAE/E,QAAO0E,YAAWuC,QAAQ,IAC/DzD,EAAUD,GACVJ,EAAKiC,MAAM,KAAM,kBAAMxB,GAAU,MA1BnCnG,qBAAU,WACJgG,EAXY,EAElB,WACEL,EAAS,IACTI,IACA,IACMe,EAAajH,IAAON,EAAU,GAAGO,MAAMC,OAC7C2F,EAAKsB,cAAc,CAAEC,UAFH,EAEcH,aAAYnB,aAK1CwB,GAEAzB,EAAK0B,QAAQ,CACXC,OAAS,KAAO5C,EAAUC,GAAcD,EACxC/E,SAAU,UACV0E,kBAIH,CAAC4B,IAEJhG,qBAAU,WACa,IAAjBuC,EAAMxC,QACRkF,YAAW,WACTqC,EAAe/E,KACd,QAGJ,CAACA,IASJ,IAAMiF,EAAgBC,uBACpB,SAACC,GACM/C,IACLwB,GAAU,GACVrH,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCmI,EAAvC,SACAhC,EAAKiC,MAAM,KAAM,WACCD,IAAU5B,EAShC,SAAsB4B,GACpBhC,EAAKjB,UACLsD,GAAW,SAAC5H,GAAD,OAAUA,EAAO,KAC5BuF,EAAKiC,MAAM,MAAM,WACf,IAAMpF,EAAQ6F,EAAYV,GACL,IAAjBnF,EAAMxC,OAAckG,GAAQ,SAAC9F,GAAD,OAAUA,EAAO,KAC5CmH,EAAe/E,MAdL8F,CAAaX,IA0B9BhC,EAAKhB,YACLwB,GAAa,SAAC/F,GAAD,OAAUA,EAAO,KAC9BuF,EAAKiC,MAAM,MAAM,kBAAMxB,GAAU,aAvBjC,CAACxB,IAaH,SAASyD,EAAYV,GACnB,IAAMrG,EAAO,YAAOkB,GAGpB,OAFAlB,EAAQkH,OAAOlH,EAAQmH,QAAQd,GAAQ,GACvC/B,EAAStE,GACFA,EAST,OACE,sBAAKd,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,qBACA,qBAAKA,UAAU,aAAf,SACGuF,EAASjG,IAAON,EAAU,GAAGkK,SAAS3D,EAAS,GAAK,MAEvD,qBAAKvF,UAAU,SAAf,SACGgC,EAAMO,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEER,MAAOQ,EACPxD,QAASA,EACTG,SAAUqD,EACVtC,QAAS+G,GAJJzE,QAQX,cAAC,EAAD,CAAY0B,QAASA,EAASC,UAAWA,EAAWC,OAAQA,WASnDrC,mBAAQkD,GAJI,SAACC,GAAD,MAAe,CACxCrB,YAAa,SAACC,GAAD,OAAaoB,EAASrB,EAAYC,QAGlC/B,CAAuCiH,GCzDvCG,G,MAjDE,SAAC,GAA6C,IAA3CnK,EAA0C,EAA1CA,QAASkD,EAAiC,EAAjCA,WAAYkH,EAAqB,EAArBA,SAAUjE,EAAW,EAAXA,KACjD,OACE,qBAAKnF,UAAU,sBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CACEiD,GAAE,WAA4B,UAAtBmG,EAASC,SAAuB,OAAS,IACjDrJ,UAAU,SAFZ,SAIyB,MAAtBoJ,EAASC,UAAoB,cAAC,IAAD,MAEhC,eAAC,IAAD,WASE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,CAAUtK,QAASA,EAAS+E,KAAK,eAEnC,cAAC,IAAD,CAAOuF,KAAK,QAAZ,SACE,cAAC,EAAD,CAAMtK,QAASA,EAASmG,KAAMA,MAEhC,cAAC,IAAD,CAAOmE,KAAK,YAAZ,SACE,cAAC,EAAD,CAAUtK,QAASA,EAASmG,KAAMA,MAEpC,cAAC,IAAD,CAAOmE,KAAK,kBAAZ,SACE,cAAC,EAAD,CAAgBtK,QAASA,EAASmG,KAAMA,MAE1C,cAAC,IAAD,CAAOmE,KAAK,YAAZ,SACE,cAAC,EAAD,CAAUtK,QAASA,EAASmG,KAAMA,MAEpC,cAAC,IAAD,CAAOmE,KAAK,WAAZ,SACE,cAAC,EAAD,CAAStK,QAASA,EAASmG,KAAMA,MAEnC,cAAC,IAAD,CAAOmE,KAAK,cAAZ,SACE,cAAC,EAAD,CAAYtK,QAASA,EAASmG,KAAMA,MAEtC,cAAC,IAAD,CAAOmE,KAAK,IAAZ,SACE,cAAC,EAAD,CAAQpH,WAAYA,EAAYlD,QAASA,gBCtDtC,MAA0B,iCCe1BuK,G,MAXA,WAEb,OACE,qBAAKvJ,UAAU,SAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,OAAOwJ,IAAKC,EAAMC,IAAI,iB,QCTvCC,EAAYC,OAAOC,aAAaC,QAAQ,WAAa,KACrDC,EAA6B,oBAAdJ,EAAkCK,KAAKC,MAAMN,GAAa,GAElEO,EAAU,WAAmC,IAAlClI,EAAiC,uDAAzB+H,EAAcI,EAAW,uCACvD,OAAQA,EAAOpG,MAUb,IAAK,cACH,IAAMjD,EAAUkJ,KAAKC,MAAMD,KAAKI,UAAUpI,IAC1C,EAAsCmI,EAAOrG,QAArC9E,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,SAAU2H,EAA3B,EAA2BA,OAI3B,OAHKhG,EAAQ9B,KAAU8B,EAAQ9B,GAAW,IACpC8B,EAAQ9B,GAASG,GAAY2H,IACjChG,EAAQ9B,GAASG,GAAY2H,GACxBhG,EAET,QACE,OAAOkB,ICgGEqI,E,iDAnHbrL,QAAU,E,KACVyH,cAAgB,YAQd,IAHE,IAJFC,EAIC,EAJDA,UACAH,EAGC,EAHDA,WACAnB,EAEC,EAFDA,SACAuC,EACC,EADDA,kBAEMnB,EAAQ,IAAI8D,IACdC,EAAI,EACDA,EAAI7D,GAAW,CACpB,IAAI7G,OAAK,EAOPA,EALE0G,IAAcoB,GACiB,IAAjC7H,KAAKC,KAAqB,EAAhBD,KAAKZ,UAIPY,KAAKC,KAAKD,KAAKZ,SAAWqH,GAF1BzG,KAAKC,KAAKD,KAAKZ,SAAWyI,GAAqBpB,EAIpDC,EAAMgE,IAAI3K,KACb0K,IACA/D,EAAMiE,IAAI5K,IAId,OADAuF,EAAS,YAAIoB,IACN,YAAIA,I,KAGbG,UAAY,YAQV,IADE,IAAD,OANDD,EAMC,EANDA,UACApB,EAKC,EALDA,cACAa,EAIC,EAJDA,UACAK,EAGC,EAHDA,MACA/F,EAEC,EAFDA,SACAuF,EACC,EADDA,WACC,WACQuE,GACP,EAAKnD,MACHjB,EAAYoE,GACZ,WACE9J,GACElC,EAAMmB,MAAN,uBAA4B,EAAKV,QAAjC,YAA4CwH,EAAM+D,GAAlD,SACFjF,EAAciF,KAEhBvE,IARKuE,EAAI,EAAGA,EAAI7D,EAAW6D,IAAM,EAA5BA,GAWT7L,KAAK0I,MAAMjB,EAAYO,GAAW,kBAAMpB,EAAcoB,O,KAExDG,QAAU,YAA8C,IAAlCC,EAAiC,EAAjCA,OAAQ3H,EAAyB,EAAzBA,UAC5B0E,EADqD,EAAfA,aAC1B,CAAEiD,SAAQ3H,WAAUH,QAASN,KAAKM,UAC9C0L,MAAM,WAAa5D,EAAS,M,KAG9BC,eAAiB,YAAyC,IAA7B/E,EAA4B,EAA5BA,MAAO0E,EAAqB,EAArBA,UAAWuC,EAAU,EAAVA,OACvCpJ,EAAQC,KAAK6K,MAAM7K,KAAKZ,SAAWwH,GAEzC,OADCuC,GAAU1K,EAAMmB,MAAN,uBAA4BhB,KAAKM,QAAjC,YAA4CgD,EAAMnC,GAAlD,SACJmC,EAAMnC,I,KAEf6H,2BAA6B,YAAiC,IAArB1F,EAAoB,EAApBA,MAAO0E,EAAa,EAAbA,UACxC7G,EAAQC,KAAK6K,MAAM7K,KAAKZ,SAAWwH,GACzC,EAA8BhI,KAAK+I,YAAYzF,EAAMnC,GAAQnB,KAAKM,SAA1DA,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,SAEjB,OADAZ,EAAMmB,MAAN,uBAA4BV,EAA5B,YAAuCG,EAAvC,SACO6C,EAAMnC,I,KAEfqE,QAAU,WACR3F,EAAMmB,MAAM,kB,KAEdyE,UAAY,WACV5F,EAAMmB,MAAM,iB,KAEd0H,MAAQ,SAAUwD,EAASC,EAAI7E,GAC7B,IAAM8E,EAAUpG,YAAW,WACzBmG,IACA7E,GACEA,GAAW,SAACpG,GACV,IAAM6C,EAAQ7C,EAAKqI,QAAQ6C,GAE3B,OADArI,GAAS,GAAK7C,EAAKoI,OAAOvF,EAAO,GAC1B7C,OAEVgL,GACH5E,GAAcA,GAAW,SAACpG,GAAD,4BAAcA,GAAd,CAAoBkL,Q,KAE/C1E,cAAgB,iBACd,iBAAkBwD,QAClBmB,UAAUC,eAAiB,GAC3BD,UAAUE,iBAAmB,G,KAC/B1E,WAAa,kBACXjH,IACG4L,MAAM,EAAG,EAAKlM,QAAU,GACxB6D,QACC,SAACC,EAAON,GAAR,OACoB,kBAAVM,EAAqBA,EAAQA,EAAMvD,MAAMC,QACjDgD,EAAIjD,MAAMC,SACZ,I,KAENiI,YAAc,SAAUzF,EAAOhD,GAK7B,IAJA,IACEmM,EACAhM,EAFEiM,EAAepJ,EAGjBqJ,EAAe,EACRd,EAAI,EAAGA,EAAIvL,EAASuL,IAAK,CAChC,IAAMzJ,EAAUxB,IAAOiL,GAAGhL,MAAMC,OAChC,GAAI4L,EAAetK,GAAW,EAAG,CAC/B3B,EAAW6C,EAAQqJ,EACnBF,EAAiBZ,EAAI,EACrB,MAEFa,GAAgBtK,EAChBuK,GAAgBvK,EAElB,MAAO,CAAE3B,WAAUH,QAASmM,EAAgBnJ,W,MC1DjCsJ,MA7Cf,WACE,IAAMC,EAAe3B,OAAOC,aAAaC,QAAQ,mBAAqB,IACtE,EAA8BlJ,mBAASoJ,KAAKC,MAAMsB,IAAlD,mBAAOvM,EAAP,KAAgBkD,EAAhB,KACMiD,EAAO,IAAIkF,EACjBlF,EAAKnG,QAAUA,EACf,IAAMwM,EAAQC,YAAYvB,GAEpBwB,EAAiB,SAAC7L,GACtBqC,EAAWrC,GACXsF,EAAKnG,QAAUa,EACf+J,OAAOC,aAAa8B,QAAQ,iBAAkB3B,KAAKI,UAAUvK,KAc/D,OAXA2L,EAAMI,WAAU,WAEdhC,OAAOC,aAAa8B,QAAQ,SAAU3B,KAAKI,UAAUoB,EAAMK,gBAU3D,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,sBAAKxL,UAAU,MAAf,UACE,cAAC,EAAD,CAAQkC,WAAYwJ,IACpB,cAAC,IAAD,CAAQI,SAAS,UAAjB,SACE,cAAC,IAAD,CACEC,OAAQ,gBAAG3C,EAAH,EAAGA,SAAH,OACN,cAAC,EAAD,CACEA,SAAUA,EACVpK,QAASA,EACTkD,WAAYwJ,EACZvG,KAAMA,eCnCP6G,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.621c9971.chunk.js","sourcesContent":["class SoundClass {\r\n    #audio = new Audio();\r\n    url = \"\";\r\n    stop() {\r\n        this.#audio.pause();\r\n        this.#audio.currentTime = 0;\r\n    }\r\n    start(url) {\r\n        this.stop();\r\n        this.#audio = new Audio(url);\r\n        this.url = url;\r\n        this.#audio.play();\r\n    }\r\n}\r\n\r\nconst Sound = new SoundClass();\r\n\r\nexport default Sound;","import React, { useEffect } from \"react\";\r\nimport { lesson } from \"../../../../data.json\";\r\nimport Sound from \"../../../../Sound\";\r\nimport \"./slider.css\";\r\n\r\nconst Slider = ({ lecture, auto, random, exercise, setExercise }) => {\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(\r\n    () => auto && Sound.start(`files/lecture${lecture}/${exercise}.m4a`),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [exercise]\r\n  );\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * max);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"switch switch--next\"\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n      ></button>\r\n      <div className=\"slider__img-container\">\r\n        <div\r\n          className=\"slider__img\"\r\n          onClick={() => Sound.start(`files/lecture${lecture}/${exercise}.m4a`)}\r\n          style={{\r\n            backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n          }}\r\n        ></div>\r\n        <h5>{lesson[lecture - 1].langauge?.[exercise - 1]}</h5>\r\n        <h5>{lesson[lecture - 1].words[exercise - 1]}</h5>\r\n      </div>\r\n      <button\r\n        className=\"switch\"\r\n        disabled={!random && exercise > max - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ auto, setAuto, random, setRandom, autoPlay, setAutoPlay }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button className=\"btn\" onClick={() => setRandom(random ? false : true)}>\r\n        {random ? \"Normal\" : \"Random\"}\r\n      </button>\r\n      <div className=\"btn\" onClick={() => setAuto(!auto)}>\r\n        {auto ? \"Auto\" : \"Manual\"}\r\n      </div>\r\n      <div className=\"btn\" onClick={() => setAutoPlay(!autoPlay)}>\r\n        {autoPlay ? \"Stop Auto Play\" : \"Start Auto Play\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Menu from \"./menu/menu\";\r\nimport \"./practice.css\";\r\n\r\nconst Practice = ({ lecture }) => {\r\n  const [auto, setAuto] = useState(true);\r\n  const [random, setRandom] = useState(false);\r\n  const [exercise, setExercise] = useState(1);\r\n  const currentExercise = useRef();\r\n  currentExercise.current = exercise;\r\n  const [autoPlay, setAutoPlay] = useState(false);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const currentIntervalId = useRef();\r\n  currentIntervalId.current = intervalId;\r\n  const max = lesson[lecture - 1].words.length;\r\n\r\n  useEffect(() => () => clearInterval(currentIntervalId.current), []);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId);\r\n    if (autoPlay)\r\n      setIntervalId(\r\n        setInterval(\r\n          () => setExercise((prev) => (prev < max ? prev + 1 : 1)),\r\n          4000\r\n        )\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoPlay]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">{lesson[lecture - 1].title}</div>\r\n      <div className=\"practice\">\r\n        <Slider\r\n          lecture={lecture}\r\n          auto={auto}\r\n          random={random}\r\n          exercise={exercise}\r\n          setExercise={setExercise}\r\n        />\r\n        <Menu\r\n          auto={auto}\r\n          setAuto={setAuto}\r\n          autoPlay={autoPlay}\r\n          setAutoPlay={setAutoPlay}\r\n          random={random}\r\n          setRandom={setRandom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React from \"react\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\nimport \"./progress.css\";\r\n\r\nconst Progress = ({ className, Component, percentage = 0, ...props }) => {\r\n  const color = { complete: 'rgb(180, 107, 83)', incomplete: 'rgb(102, 72, 62)' };\r\n  const percent = {\r\n    top: {\r\n      backgroundImage: `linear-gradient(to right, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    right: {\r\n      backgroundImage: `linear-gradient(to bottom, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    bottom: {\r\n      backgroundImage: `linear-gradient(to left, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    left: {\r\n      backgroundImage: `linear-gradient(to top, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n  };\r\n\r\n  if (percentage < 12.5)\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%, ${color.complete} ${\r\n      50 + percentage * 4\r\n    }%, ${color.incomplete} ${50 + percentage * 4}%)`;\r\n  else if (percentage < 37.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} ${\r\n      (percentage - 12.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 12.5) * 4}%)`;\r\n  } else if (percentage < 62.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} ${\r\n      (percentage - 37.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 37.5) * 4}%)`;\r\n  } else if (percentage < 87.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} ${\r\n      (percentage - 62.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 62.5) * 4}%)`;\r\n  } else {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.complete} ${\r\n      (percentage - 87.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 87.5) * 4}%, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n  }\r\n\r\n  return (\r\n    <div className={`progress-container ${className}`}>\r\n      <div className=\"progress__top\" style={percent.top}></div>\r\n      <div className=\"progress__body\">\r\n        <div className=\"progress__side\" style={percent.left}></div>\r\n        <Component {...props} />\r\n        {percentage >= 75 && (\r\n          <div className=\"progress__pass\">\r\n            <TiTickOutline className=\"progress__pass-img\" />\r\n          </div>\r\n        )}\r\n        <div className=\"progress__side\" style={percent.right}></div>\r\n      </div>\r\n      <div className=\"progress__bottom\" style={percent.bottom}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Progress from \"../../progress/progress\";\r\nimport \"./lesson.css\";\r\n\r\nconst Lesson = ({ setLecture, lecture, progress }) => {\r\n  const noOfExercise = 4;\r\n  const [progression, setProgression] = useState([]);\r\n  const [passed, setPassed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setProgression(\r\n      lesson.map((cur, index) => {\r\n        const levelProgress = progress[index + 1];\r\n        const levelProgressArray = levelProgress\r\n          ? Object.values(levelProgress)\r\n          : [0];\r\n        const percentage =\r\n          levelProgressArray.reduce(\r\n            (total, currentValue) => total + currentValue\r\n          ) / (lecture > 1 ? noOfExercise : noOfExercise - 1);\r\n        percentage >= 75 && setPassed((prev) => prev + 1);\r\n        return { ...cur, percentage, passed };\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Select Level</div>\r\n      <div className=\"lesson__length\">\r\n        {passed} / {lesson.length}\r\n      </div>\r\n      {progression.map((cur, index) => (\r\n        <Progress\r\n          key={index}\r\n          Component={() => (\r\n            <Link\r\n              key={index}\r\n              className=\"lesson__container\"\r\n              to=\"/task\"\r\n              onClick={() => setLecture(index + 1)}\r\n            >\r\n              <div\r\n                className=\"lesson__img\"\r\n                style={{\r\n                  backgroundImage: `url(./img/lecture${index + 1}/1.jpg)`,\r\n                }}\r\n              />\r\n              <div style={{ fontWeight: 700 }}>{cur.title}</div>\r\n            </Link>\r\n          )}\r\n          percentage={cur.percentage}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lesson);\r\n","import React from \"react\";\r\nimport { GiDiamondHard, GiGymBag, GiBookCover } from \"react-icons/gi\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\n// import { GrScheduleNew } from \"react-icons/gr\";\r\n// import { GiBugleCall } from \"react-icons/gi\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  const task = {\r\n    // lesson: GrScheduleNew,\r\n    exercise: GiGymBag,\r\n    [lecture === 1 ? \"easyGameAccent\" : \"easyGame\"]: SiWeasyl,\r\n    // speaking: IoMdMicrophone,\r\n    hardGame: GiDiamondHard,\r\n    reading: GiBookCover,\r\n    memoryGame: FaMemory,\r\n    // recall: GiBugleCall,\r\n  };\r\n  if (lecture === 1) delete task.reading;\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"title\">Select Task</div>\r\n      <div className=\"task__select\">\r\n        {Object.entries(task).map(([key, Value], index) => {\r\n          return (\r\n            <Progress\r\n              key={index}\r\n              className=\"task__box\"\r\n              Component={() => (\r\n                <Link className=\"task__container\" to={key}>\r\n                  <Value className=\"task__img\" />\r\n                  <div className=\"task__title\">{key}</div>\r\n                </Link>\r\n              )}\r\n              percentage={progress[lecture]?.[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);\r\n","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });","import React, { useState, useEffect } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\nimport \"./gameFooter.css\";\r\n\r\nconst GameFooter = ({\r\n  percent = 100,\r\n  audio,\r\n  correct,\r\n  incorrect,\r\n  active,\r\n  noText,\r\n}) => {\r\n  const [langaugeText, setLangaugeText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (noText) return;\r\n    const [exercise, lecture] = Sound.url\r\n      .replace(\"files/lecture\", \"\")\r\n      .replace(\".m4a\", \"\")\r\n      .split(\"/\");\r\n    setTimeout(() => {\r\n      if (exercise !== \"files\" && exercise > 0)\r\n        setLangaugeText(lesson[exercise - 1].langauge?.[lecture - 1]);\r\n    }, 1500);\r\n    // eslint-disable-next-line\r\n  }, [Sound.url]);\r\n\r\n  return (\r\n    <div\r\n      className=\"game__footer\"\r\n      style={{\r\n        backgroundImage: `linear-gradient(to right, rgb(90 44 29 / 100%) ${percent}%, rgb(90 44 29 / 23%) ${percent}%)`,\r\n      }}\r\n    >\r\n      {audio && (\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() => active && Sound.start(audio)}\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n      )}\r\n      <h5 className=\"langauge-text\">{langaugeText}</h5>\r\n      <div className=\"score score__correct\">{correct}</div>\r\n      <div className=\"score score__incorrect\">{incorrect}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameFooter;\r\n","import React, { memo } from \"react\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst Card = memo(function Card({\r\n  state,\r\n  lecture,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={() => onClick(state)}\r\n      style={\r\n        hide\r\n          ? { backgroundColor: \"#bbb7aa35\" }\r\n          : brightness\r\n          ? { filter: `brightness(${brightness})` }\r\n          : {}\r\n      }\r\n    >\r\n      <div\r\n        className=\"img\"\r\n        style={\r\n          hide >= 0\r\n            ? {}\r\n            : {\r\n                backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`,\r\n              }\r\n        }\r\n      />\r\n      {!(hide >= 0) && (\r\n        <h5 className=\"card__text\">\r\n          {lesson[lecture - 1].words[exercise - 1]}\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      setAnswer(Game.answerQuestion({ state, cardLimit }));\r\n      setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n      setActive(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const totalCards = lesson[lecture - 1].words.length;\r\n    const cards = Game.generateCards({ cardLimit, totalCards, setState });\r\n    if (isTouchDevice) setActive(true);\r\n    else\r\n      Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGame\",\r\n      });\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            Game.correct();\r\n            Game.delay(2000, () => setNext((prev) => prev + 1), setCleanUp);\r\n          } else {\r\n            Game.incorrect();\r\n            Game.delay(2000, () => incorrectInput(), setCleanUp);\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>\r\n          Play\r\n        </div>\r\n      )}\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <Card\r\n            key={index}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture${lecture}/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);\r\n","import React, { memo } from \"react\";\r\nimport { lesson } from \"../../data.json\";\r\nimport \"./card.css\";\r\n\r\nconst CardText = memo(function CardText({\r\n  state,\r\n  exercise,\r\n  onClick,\r\n  hide,\r\n  brightness,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onClick={() => onClick(state)}\r\n      style={\r\n        hide\r\n          ? { backgroundColor: \"#bbb7aa35\" }\r\n          : brightness\r\n          ? { filter: `brightness(${brightness})` }\r\n          : {}\r\n      }\r\n    >\r\n      <h1 className=\"card__text--large\">\r\n        {!(hide >= 0) && lesson[0].words[exercise - 1]}\r\n      </h1>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CardText;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport Sound from \"../../../Sound\";\r\nimport CardText from \"../../card/cardText\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGameAccent = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = lesson[0].words.length / 3;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 3;\r\n  const isTouchDevice = Game.isTouchDevice();\r\n\r\n  useEffect(\r\n    () => () => unMount.current.forEach((cur) => clearTimeout(cur)),\r\n    []\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      const ans = Game.answerQuestion({ state, cardLimit });\r\n      setAnswer(ans);\r\n      setState((prev) => prev.sort(() => (Math.random() > 0.5 ? 1 : -1)));\r\n      setActive(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const cards = [next * 3 + 1, next * 3 + 2, next * 3 + 3];\r\n    setState(cards);\r\n    if (isTouchDevice) setActive(true);\r\n    else\r\n      Game.playCards({\r\n        cards,\r\n        cardLimit,\r\n        gameSpeed,\r\n        setSoundState,\r\n        setCleanUp,\r\n        autoPlay: true,\r\n      });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        setProgress,\r\n        result: (gameLimit * 100) / (gameLimit + incorrect),\r\n        exercise: \"easyGameAccent\",\r\n      });\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      if (isTouchDevice && !touchPlay) return;\r\n      setActive(false);\r\n      Game.delay(\r\n        gameSpeed,\r\n        () => {\r\n          const CORRECT = input === answer;\r\n          if (CORRECT) {\r\n            Game.correct();\r\n            Game.delay(2000, () => setNext((prev) => prev + 1), setCleanUp);\r\n          } else {\r\n            Game.incorrect();\r\n            Game.delay(2000, () => incorrectInput(), setCleanUp);\r\n          }\r\n        },\r\n        setCleanUp\r\n      );\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active, touchPlay, answer]\r\n  );\r\n\r\n  function incorrectInput() {\r\n    Sound.start(`files/lecture${lecture}/${answer}.m4a`);\r\n    setIncorrect((prev) => prev + 1);\r\n    setActive(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && (\r\n        <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>\r\n          Play\r\n        </div>\r\n      )}\r\n      <div className=\"select select--accent\">\r\n        {state.map((cur, index) => (\r\n          <CardText\r\n            key={cur}\r\n            state={cur}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n            brightness={index === soundState ? 2 : 1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture1/${answer}.m4a`}\r\n        correct={next}\r\n        incorrect={incorrect}\r\n        active={active}\r\n        noText={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGameAccent);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const displayCard = Game.displayCard;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const cardLimit = next + 5;\r\n    const totalCards = Game.totalCards();\r\n    const lastLectureLength = lesson[lecture - 1].words.length;\r\n    Game.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) {\r\n      nextRound();\r\n    } else {\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"hardGame\",\r\n        setProgress,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === next + 5)\r\n      setTimeout(() => answerQuestion(state), 2500);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  function answerQuestion(state) {\r\n    setAnswer(\r\n      Game.answerQuestionMultLectures({ state, cardLimit: state.length })\r\n    );\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      const curInput = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${curInput.lecture}/${curInput.exercise}.m4a`);\r\n      Game.delay(2000, () => {\r\n        const correct = input === answer;\r\n        if (correct) correctInput(input);\r\n        else incorrectInput();\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const state = updateState(input);\r\n      if (state.length === 1) setNext((prev) => prev + 1);\r\n      else answerQuestion(state);\r\n    });\r\n  }\r\n\r\n  function updateState(input) {\r\n    const current = [...state];\r\n    current.splice(current.indexOf(input), 1);\r\n    setState(current);\r\n    return current;\r\n  }\r\n\r\n  function incorrectInput() {\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const currentAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${currentAnswer.lecture}/${currentAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Hard Game</div>\r\n      <div className=\"select\">\r\n        {state.map((cur) => {\r\n          const display = displayCard(cur, lecture);\r\n          return display.lecture > 1 ? (\r\n            <Card\r\n              key={cur}\r\n              state={cur}\r\n              lecture={display.lecture}\r\n              exercise={display.exercise}\r\n              onClick={handleOnClick}\r\n            />\r\n          ) : (\r\n            <CardText\r\n              key={cur}\r\n              state={cur}\r\n              exercise={cur}\r\n              onClick={handleOnClick}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <GameFooter\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport CardText from \"../../card/cardText\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress, Game }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const ref = useRef();\r\n  ref.current = { next, state, percent, pauseInterval, cleanUp: intervalID };\r\n  const displayCard = Game.displayCard;\r\n  const memoryGame = next < 5;\r\n  const isTouchDevice = Game.isTouchDevice() && !memoryGame;\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const gameLimit = 10;\r\n  const cardLimit = next + 2;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setPercent(100);\r\n    const totalCards = Game.totalCards();\r\n    const lastLectureLength = lesson[lecture - 1].words.length;\r\n    Game.generateCards({ cardLimit, totalCards, setState, lastLectureLength });\r\n  }\r\n\r\n  useEffect(() => () => clearInterval(ref.current.cleanUp), []);\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else\r\n      Game.endGame({\r\n        result: (200 * correct) / ((1 + gameLimit) * gameLimit + incorrect * 2),\r\n        exercise: \"memoryGame\",\r\n        setProgress,\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === cardLimit) {\r\n      !memoryGame && answerQuestion(state);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalID);\r\n    const increment = memoryGame ? 1000 : 3000;\r\n    const intervalId = setInterval(() => {\r\n      if (ref.current.pauseInterval) return;\r\n      if (ref.current.percent <= 0) {\r\n        clearInterval(intervalId);\r\n        if (memoryGame) {\r\n          setHidden(ref.current.state);\r\n          answerQuestion(ref.current.state);\r\n        } else {\r\n          setNext((prev) => prev + 1);\r\n        }\r\n      } else {\r\n        ref.current.percent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, ((memoryGame ? 5000 : 12000) + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pauseInterval, next]);\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      const { lecture: inputLecture, exercise } = displayCard(input, lecture);\r\n      Sound.start(`files/lecture${inputLecture}/${exercise}.m4a`);\r\n      setActive(false);\r\n      if (memoryGame) revealCard(input);\r\n      else setPauseInterval(true);\r\n      Game.delay(2500, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput();\r\n        !memoryGame && !isTouchDevice && setPauseInterval(false);\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function revealCard(input) {\r\n    const current = [...hidden];\r\n    const hiddenIndex = current.indexOf(input);\r\n    current[hiddenIndex] = -current[hiddenIndex];\r\n    setHidden(current);\r\n  }\r\n\r\n  function correctInput(input) {\r\n    Game.correct();\r\n    Game.delay(2000, () => {\r\n      // I dont understand this line\r\n      if (next !== ref.current.next) return;\r\n\r\n      isTouchDevice && setTouchPlay(true);\r\n      setCorrect((prev) => prev + 1);\r\n      const state = updateState(input);\r\n      const ENDOFROUND = state.length === 1;\r\n      if (ENDOFROUND) {\r\n        memoryGame && setHidden([]);\r\n        setNext((prev) => prev + 1);\r\n      } else {\r\n        memoryGame && setHidden(state);\r\n        answerQuestion(state);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateState(input) {\r\n    const current = [...state];\r\n    current.splice(current.indexOf(input), 1);\r\n    setState(current);\r\n    return current;\r\n  }\r\n\r\n  function incorrectInput() {\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    memoryGame && setHidden(state);\r\n    Game.delay(1500, () => {\r\n      const curAnswer = displayCard(answer, lecture);\r\n      Sound.start(\r\n        `files/lecture${curAnswer.lecture}/${curAnswer.exercise}.m4a`\r\n      );\r\n      setActive(true);\r\n      !memoryGame && isTouchDevice && setPauseInterval(false);\r\n    });\r\n  }\r\n\r\n  function answerQuestion(state) {\r\n    if (isTouchDevice && !touchPlay) return setTouchPlay(true);\r\n    setAnswer(\r\n      Game.answerQuestionMultLectures({ state, cardLimit: state.length })\r\n    );\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPauseInterval(touchPlay);\r\n  }, [touchPlay]);\r\n\r\n  const handleTouchPlay = () => {\r\n    answerQuestion(state);\r\n    setTouchPlay(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Memory Game</div>\r\n      <div className=\"select\">\r\n        {touchPlay ? (\r\n          <div className=\"touch-play\" onClick={handleTouchPlay}>\r\n            Play\r\n          </div>\r\n        ) : (\r\n          state.map((cur, index) => {\r\n            const display = displayCard(cur, lecture);\r\n            return display.lecture > 1 ? (\r\n              <Card\r\n                key={cur}\r\n                state={cur}\r\n                lecture={display.lecture}\r\n                exercise={display.exercise}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n              />\r\n            ) : (\r\n              <CardText\r\n                key={cur}\r\n                state={cur}\r\n                exercise={cur}\r\n                onClick={handleOnClick}\r\n                hide={hidden[index]}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <GameFooter\r\n        percent={percent}\r\n        audio={`files/lecture${displayCard(answer, lecture).lecture}/${\r\n          displayCard(answer, lecture).exercise\r\n        }.m4a`}\r\n        correct={correct}\r\n        incorrect={incorrect}\r\n        active={active}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);\r\n","import React, { useCallback, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport Sound from \"../../../Sound\";\r\nimport Card from \"../../card/card\";\r\nimport GameFooter from \"../../gameFooter/gameFooter\";\r\nimport \"./reading.css\";\r\n\r\nconst Reading = memo(function ({ lecture, setProgress, Game }) {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 4;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setAnswer();\r\n    const cardLimit = 6;\r\n    const totalCards = lesson[lecture - 1].words.length;\r\n    Game.generateCards({ cardLimit, totalCards, setState });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) {\r\n      nextRound();\r\n    } else {\r\n      Game.endGame({\r\n        result: (100 * (correct - incorrect)) / correct,\r\n        exercise: \"reading\",\r\n        setProgress,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === 6) {\r\n      setTimeout(() => {\r\n        answerQuestion(state);\r\n      }, 2500);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  function answerQuestion(state) {\r\n    const cardLimit = state.length;\r\n    const answer = Game.answerQuestion({ state, cardLimit, silent: true });\r\n    setAnswer(answer);\r\n    Game.delay(2000, () => setActive(true));\r\n  }\r\n\r\n  const handleOnClick = useCallback(\r\n    (input) => {\r\n      if (!active) return;\r\n      setActive(false);\r\n      Sound.start(`files/lecture${lecture}/${input}.m4a`);\r\n      Game.delay(2000, () => {\r\n        const CORRECT = input === answer;\r\n        if (CORRECT) correctInput(input);\r\n        else incorrectInput();\r\n      });\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [active]\r\n  );\r\n\r\n  function correctInput(input) {\r\n    Game.correct();\r\n    setCorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => {\r\n      const state = updateState(input);\r\n      if (state.length === 1) setNext((prev) => prev + 1);\r\n      else answerQuestion(state);\r\n    });\r\n  }\r\n\r\n  function updateState(input) {\r\n    const current = [...state];\r\n    current.splice(current.indexOf(input), 1);\r\n    setState(current);\r\n    return current;\r\n  }\r\n\r\n  function incorrectInput() {\r\n    Game.incorrect();\r\n    setIncorrect((prev) => prev + 1);\r\n    Game.delay(1500, () => setActive(true));\r\n  }\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Reading</div>\r\n      <div className=\"text-block\">\r\n        {answer ? lesson[lecture - 1].language[answer - 1] : \"?\"}\r\n      </div>\r\n      <div className=\"select\">\r\n        {state.map((cur) => (\r\n          <Card\r\n            key={cur}\r\n            state={cur}\r\n            lecture={lecture}\r\n            exercise={cur}\r\n            onClick={handleOnClick}\r\n          />\r\n        ))}\r\n      </div>\r\n      <GameFooter correct={correct} incorrect={incorrect} active={active} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(Reading);\r\n","import React from \"react\";\r\nimport Practice from \"./practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"./lesson/lesson\";\r\nimport Task from \"./task/task\";\r\nimport EasyGame from \"./easyGame/easyGame\";\r\nimport EasyGameAccent from \"./easyGame/easyGameAccent\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"./hardGame/hardGame\";\r\nimport MemoryGame from \"./memoryGame/memoryGame\";\r\nimport Reading from \"./reading/reading\";\r\nimport \"./exercise.css\";\r\n\r\nconst Exercise = ({ lecture, setLecture, location, Game }) => {\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        <Link\r\n          to={`/${location.pathname !== \"/task\" ? \"task\" : \"\"}`}\r\n          className=\"return\"\r\n        >\r\n          {location.pathname !== \"/\" && <TiArrowBack />}\r\n        </Link>\r\n        <Switch>\r\n          {/* <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route> */}\r\n          <Route path=\"/exercise\">\r\n            <Practice lecture={lecture} type=\"exercise\" />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/easyGameAccent\">\r\n            <EasyGameAccent lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/reading\">\r\n            <Reading lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} Game={Game} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Lesson setLecture={setLecture} lecture={lecture} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState = saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { lesson } from \"../../data.json\";\r\nimport Sound from \"../../Sound\";\r\n\r\nclass GameLogic {\r\n  lecture = 1;\r\n  generateCards = function ({\r\n    cardLimit,\r\n    totalCards,\r\n    setState,\r\n    lastLectureLength,\r\n  }) {\r\n    const cards = new Set();\r\n    let i = 0;\r\n    while (i < cardLimit) {\r\n      let value;\r\n      if (\r\n        (!totalCards || lastLectureLength) &&\r\n        Math.ceil(Math.random() * 2) === 2\r\n      ) {\r\n        value = Math.ceil(Math.random() * lastLectureLength) + totalCards;\r\n      } else {\r\n        value = Math.ceil(Math.random() * totalCards);\r\n      }\r\n      if (!cards.has(value)) {\r\n        i++;\r\n        cards.add(value);\r\n      }\r\n    }\r\n    setState([...cards]);\r\n    return [...cards];\r\n  };\r\n\r\n  playCards = function ({\r\n    cardLimit,\r\n    setSoundState,\r\n    gameSpeed,\r\n    cards,\r\n    autoPlay,\r\n    setCleanUp,\r\n  }) {\r\n    for (let i = 0; i < cardLimit; i++) {\r\n      this.delay(\r\n        gameSpeed * i,\r\n        () => {\r\n          autoPlay &&\r\n            Sound.start(`files/lecture${this.lecture}/${cards[i]}.m4a`);\r\n          setSoundState(i);\r\n        },\r\n        setCleanUp\r\n      );\r\n    }\r\n    this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n  };\r\n  endGame = function ({ result, exercise, setProgress }) {\r\n    setProgress({ result, exercise, lecture: this.lecture });\r\n    alert(\"result: \" + result + \"%\");\r\n  };\r\n\r\n  answerQuestion = function ({ state, cardLimit, silent }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    !silent && Sound.start(`files/lecture${this.lecture}/${state[value]}.m4a`);\r\n    return state[value];\r\n  };\r\n  answerQuestionMultLectures = function ({ state, cardLimit }) {\r\n    const value = Math.floor(Math.random() * cardLimit);\r\n    const { lecture, exercise } = this.displayCard(state[value], this.lecture);\r\n    Sound.start(`files/lecture${lecture}/${exercise}.m4a`);\r\n    return state[value];\r\n  };\r\n  correct = function () {\r\n    Sound.start(\"files/yes.m4a\");\r\n  };\r\n  incorrect = function () {\r\n    Sound.start(\"files/no.m4a\");\r\n  };\r\n  delay = function (timeout, cb, setCleanUp) {\r\n    const timeOut = setTimeout(() => {\r\n      cb();\r\n      setCleanUp &&\r\n        setCleanUp((prev) => {\r\n          const index = prev.indexOf(timeOut);\r\n          index > -1 && prev.splice(index, 1);\r\n          return prev;\r\n        });\r\n    }, timeout);\r\n    setCleanUp && setCleanUp((prev) => [...prev, timeOut]);\r\n  };\r\n  isTouchDevice = () =>\r\n    \"ontouchstart\" in window ||\r\n    navigator.maxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0;\r\n  totalCards = () =>\r\n    lesson\r\n      .slice(0, this.lecture - 1)\r\n      .reduce(\r\n        (total, cur) =>\r\n          (typeof total === \"number\" ? total : total.words.length) +\r\n          cur.words.length,\r\n        0\r\n      );\r\n  displayCard = function (state, lecture) {\r\n    let runningTotal = state,\r\n      currentLecture,\r\n      exercise,\r\n      accumulation = 0;\r\n    for (let i = 0; i < lecture; i++) {\r\n      const current = lesson[i].words.length;\r\n      if (runningTotal - current <= 0) {\r\n        exercise = state - accumulation;\r\n        currentLecture = i + 1;\r\n        break;\r\n      }\r\n      runningTotal -= current;\r\n      accumulation += current;\r\n    }\r\n    return { exercise, lecture: currentLecture, state };\r\n  };\r\n}\r\n\r\nexport default GameLogic;\r\n","import React, { useState } from \"react\";\nimport Exercise from \"./component/exercise/exercise\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport GameLogic from \"./component/exercise/gameLogic\";\nimport \"./App.css\";\n// import { Progress } from \"./progress\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const savedLecture = window.localStorage.getItem('Yourba-lecture') || '1';\n  const [lecture, setLecture] = useState(JSON.parse(savedLecture));\n  const Game = new GameLogic();\n  Game.lecture = lecture;\n  const store = createStore(reducer);\n\n  const setSaveLecture = (value) => {\n    setLecture(value);\n    Game.lecture = value;\n    window.localStorage.setItem('Yourba-lecture', JSON.stringify(value));\n  }\n\n  store.subscribe(() => {\n    // console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header setLecture={setSaveLecture} />\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Exercise\n                location={location}\n                lecture={lecture}\n                setLecture={setSaveLecture}\n                Game={Game}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}