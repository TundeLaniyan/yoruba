{"version":3,"sources":["component/exercise/practice/control/control.jsx","component/exercise/practice/menu/menu.jsx","component/exercise/practice/slider/slider.jsx","component/exercise/practice/practice.jsx","component/exercise/lesson/lesson.jsx","component/progress/progress.jsx","component/exercise/task/task.jsx","action.js","component/exercise/gameLogic.js","component/exercise/easyGame/easyGame.jsx","component/exercise/hardGame/hardGame.jsx","component/exercise/memoryGame/memoryGame.jsx","component/exercise/exercise.jsx","img/logo.png","component/header/header.jsx","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Control","lecture","exercise","useState","speed","setSpeed","className","src","controls","type","id","value","onChange","e","target","min","max","step","htmlFor","toFixed","Menu","active","auto","setAuto","random","setRandom","style","onClick","Slider","setExercise","limit","audio","setAudio","useEffect","pause","console","log","Audio","play","currentAudio","randomNumber","prev","Math","ceil","disabled","backgroundImage","Practice","lesson","lessons","length","title","check","result","fontWeight","boxShadow","transform","borderWidth","rando","Lesson","setLecture","history","onSubmit","preventDefault","push","Progress","Component","percentage","props","color","percent","top","right","bottom","left","connect","state","progress","task","GrScheduleNew","GiGymBag","easyGame","SiWeasyl","hardGame","GiDiamondHard","memoryGame","FaMemory","Object","entries","map","index","key","Value","to","setProgress","payload","generateCards","cardLimit","totalCards","setState","cards","Set","i","has","add","playCards","setSoundState","gameSpeed","autoPlay","setCleanUp","delay","this","endGame","alert","answerQuestion","floor","currentLecture","correct","incorrect","timeout","cb","timeOut","setTimeout","indexOf","splice","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","slice","reduce","total","cur","displayCard","position","runningTotal","accumulation","current","undefined","dispatch","soundState","answer","setAnswer","next","setNext","setIncorrect","setActive","touchPlay","setTouchPlay","cleanUp","unMount","useRef","gameLimit","gameLogic","forEach","clearTimeout","nextRound","sort","filter","input","setCorrect","answerLecture","element","currentPosition","cardLecture","inputLecture","handleOnClick","hidden","setHidden","setInput","addedTime","setAddedTime","setPercent","intervalID","setIntervalID","pauseInterval","setPauseInterval","nextRef","clearInterval","runningPercent","intervalId","setInterval","hiddenIndex","backgroundColor","Exercise","location","pathname","path","render","Header","logo","alt","saveState","localStorage","getItem","defaultState","JSON","parse","reducer","action","stringify","App","store","createStore","subscribe","getState","setItem","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.045e6dcf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./control.css\";\r\n\r\nconst Control = ({ lecture, exercise }) => {\r\n  const [speed, setSpeed] = useState(1);\r\n\r\n  // const active = (check, result) => {\r\n  //   if (check === result)\r\n  //     return {\r\n  //       fontWeight: 700,\r\n  //       boxShadow: \"0 .125rem 0 0 #00000026\",\r\n  //       transform: \"translateY(1px)\",\r\n  //       borderWidth: \"2px\",\r\n  //     };\r\n  // };\r\n\r\n  return (\r\n    <div className=\"type\">\r\n      <div className=\"sound-control\">\r\n        <audio\r\n          className=\"audio-setting\"\r\n          src={`./files/lecture${lecture}/${exercise}.m4a`}\r\n          controls\r\n        />\r\n        <div className=\"range\">\r\n          <input\r\n            type=\"range\"\r\n            id=\"volume\"\r\n            value={speed}\r\n            onChange={(e) => setSpeed(e.target.value)}\r\n            min={0.1}\r\n            max={1}\r\n            step={0.1}\r\n          />\r\n          <label htmlFor=\"volume\">Speed {(speed * 1).toFixed(1)}</label>\r\n        </div>\r\n      </div>\r\n      {/* <button\r\n        className=\"btn\"\r\n        disabled={!data.lesson[lecture].limit.lesson}\r\n        style={active(type, \"lesson\")}\r\n        onClick={() => setType(\"lesson\")}\r\n      >\r\n        Lesson\r\n      </button>\r\n      <button\r\n        className=\"btn\"\r\n        disabled={!data.lesson[lecture].limit.exercise}\r\n        style={active(type, \"exercise\")}\r\n        onClick={() => setType(\"exercise\")}\r\n      >\r\n        Exercise\r\n      </button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Control;","import React from \"react\";\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ active, auto, setAuto, random, setRandom }) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button\r\n        className=\"btn\"\r\n        style={active(random, true)}\r\n        onClick={() => setRandom(random ? false : true)}\r\n      >\r\n        Random\r\n      </button>\r\n      <div\r\n        className=\"btn\"\r\n        onClick={() => setAuto(auto === \"Auto\" ? \"Manual\" : \"Auto\")}\r\n      >\r\n        {auto}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;","import React, { useEffect, useState } from \"react\";\r\nimport \"./slider.css\";\r\n\r\nconst Slider = ({\r\n  lecture,\r\n  exercise,\r\n  setExercise,\r\n  limit,\r\n  type,\r\n  auto,\r\n  random,\r\n}) => {\r\n  const [audio, setAudio] = useState();\r\n\r\n  useEffect(() => {\r\n    if (auto === \"Auto\") {\r\n      audio?.pause();\r\n      console.log({exercise, lecture});\r\n      new Audio(`files/lecture${lecture}/${exercise}.m4a`).play()\r\n      const currentAudio = new Audio(`files/lecture${lecture}/${exercise}.m4a`);\r\n      currentAudio.play();\r\n      setAudio(currentAudio);\r\n    }\r\n  }, [exercise, lecture, type]);\r\n\r\n  const randomNumber = (prev, value) => {\r\n    if (random) return Math.ceil(Math.random() * limit);\r\n    return prev + value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <button\r\n        className=\"switch switch--next\"\r\n        disabled={!random && exercise < 2}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, -1))}\r\n      ></button>\r\n      <div\r\n        className=\"slider__img\"\r\n        style={{backgroundImage: `url(./img/lecture${lecture}/${exercise}.jpg)`}}\r\n      ></div>\r\n      <button\r\n        className=\"switch\"\r\n        disabled={!random && exercise > limit - 1}\r\n        onClick={() => setExercise((prev) => randomNumber(prev, 1))}\r\n      ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;","import React, { useEffect, useState } from \"react\";\r\nimport Control from \"./control/control\";\r\nimport Menu from \"./menu/menu\";\r\nimport Slider from \"./slider/slider\";\r\nimport { lesson } from \"../../../data.json\";\r\n\r\nconst Practice = ({ lecture, exercise, setExercise, type }) => {\r\n  const [auto, setAuto] = useState(\"Auto\");\r\n  const [random, setRandom] = useState(false);\r\n  const max = lesson[lecture - 1].lessons.length;\r\n\r\n  useEffect(() => { setExercise(1); }, [lecture, type]);\r\n\r\n  const active = (check, result) => {\r\n    if (check === result)\r\n      return {\r\n        fontWeight: 700,\r\n        boxShadow: \"0 .125rem 0 0 #00000026\",\r\n        transform: \"translateY(1px)\",\r\n        borderWidth: \"2px\",\r\n      };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"title\">{lesson[lecture].title}</div>\r\n      <Menu\r\n        active={active}\r\n        auto={auto}\r\n        setAuto={setAuto}\r\n        rando={random}\r\n        setRandom={setRandom}\r\n      />\r\n      <Control lecture={lecture} type={type} exercise={exercise} />\r\n      <Slider\r\n        lecture={lecture}\r\n        exercise={exercise}\r\n        setExercise={setExercise}\r\n        limit={max}\r\n        type={type}\r\n        auto={auto}\r\n        random={random}\r\n      />\r\n      <p className=\"progress\">{exercise}/{max}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Practice;","import React from \"react\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport \"./lesson.css\";\r\n\r\nconst Lesson = ({ setLecture, lecture, history }) => {\r\n\r\n  const onSelectLesson = e => {\r\n    e.preventDefault();\r\n    if (lecture > 0) history.push(\"/task\");\r\n  }\r\n  return (\r\n    <div className=\"lesson\">\r\n      <div className=\"title\">Select Level</div>\r\n      <div className=\"lesson__length\">Lessons {lesson.length}</div>\r\n      <form onSubmit={onSelectLesson} className=\"lesson__select\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"lesson__input\"\r\n          min=\"1\"\r\n          max={lesson.length}\r\n          value={lecture}\r\n          onChange={e => setLecture(e.target.value)}\r\n        />\r\n        <button className=\"lesson__btn\">Select</button>\r\n      </form>\r\n      {/* <div\r\n        className=\"lesson__container\"\r\n        onClick={() => { console.log({a: new Audio(`files/lecture1/1.m4a`)}); new Audio(`files/lecture1/7.m4a`).play(); }}\r\n      >\r\n        <div\r\n          className=\"lesson__img\"\r\n        >Click</div>\r\n        <div style={{ fontWeight: 700 }}>Play</div>\r\n      </div>\r\n        {lesson.map((cur, index) => (\r\n          <Progress\r\n            key={index}\r\n            Component={() => (\r\n              <Link\r\n                key={index}\r\n                className=\"lesson__container\"\r\n                to=\"/task\"\r\n                onClick={() => setLecture(index)}\r\n              >\r\n                <div\r\n                  className=\"lesson__img\"\r\n                //   style={{\r\n                //     backgroundImage: `url(../../img/lecture${\r\n                //       index + 1\r\n                //     }/exercise/1.png)`,\r\n                //   }}\r\n                >{index + 1}</div>\r\n                <div style={{ fontWeight: 700 }}>{cur.title}</div>\r\n              </Link>\r\n            )}\r\n            percentage={Math.floor(Math.random() * 100)}\r\n          />\r\n          // </>\r\n        ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lesson;","import React from \"react\";\r\nimport { TiTickOutline } from \"react-icons/ti\";\r\nimport \"./progress.css\";\r\n\r\nconst Progress = ({ className, Component, percentage = 0, ...props }) => {\r\n  const color = { complete: 'rgb(180, 107, 83)', incomplete: 'rgb(102, 72, 62)' };\r\n  const percent = {\r\n    top: {\r\n      backgroundImage: `linear-gradient(to right, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    right: {\r\n      backgroundImage: `linear-gradient(to bottom, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    bottom: {\r\n      backgroundImage: `linear-gradient(to left, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n    left: {\r\n      backgroundImage: `linear-gradient(to top, ${color.complete} 0%, ${color.incomplete} 0%)`,\r\n    },\r\n  };\r\n\r\n  if (percentage < 12.5)\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%, ${color.complete} ${\r\n      50 + percentage * 4\r\n    }%, ${color.incomplete} ${50 + percentage * 4}%)`;\r\n  else if (percentage < 37.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} ${\r\n      (percentage - 12.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 12.5) * 4}%)`;\r\n  } else if (percentage < 62.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} ${\r\n      (percentage - 37.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 37.5) * 4}%)`;\r\n  } else if (percentage < 87.5) {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} ${\r\n      (percentage - 62.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 62.5) * 4}%)`;\r\n  } else {\r\n    percent.top.backgroundImage = `linear-gradient(to right, ${color.complete} ${\r\n      (percentage - 87.5) * 4\r\n    }%, ${color.incomplete} ${(percentage - 87.5) * 4}%, ${color.incomplete} 50%, ${color.complete} 50%)`;\r\n    percent.right.backgroundImage = `linear-gradient(to bottom, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.bottom.backgroundImage = `linear-gradient(to left, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n    percent.left.backgroundImage = `linear-gradient(to top, ${color.complete} 100%, ${color.incomplete} 100%)`;\r\n  }\r\n\r\n  return (\r\n    <div className={`progress-container ${className}`}>\r\n      <div className=\"progress__top\" style={percent.top}></div>\r\n      <div className=\"progress__body\">\r\n        <div className=\"progress__side\" style={percent.left}></div>\r\n        {percentage >= 75 && (\r\n          <div className=\"progress__pass\">\r\n            <TiTickOutline className=\"progress__pass-img\" />\r\n          </div>\r\n        )}\r\n        <Component {...props} />\r\n        <div className=\"progress__side\" style={percent.right}></div>\r\n      </div>\r\n      <div className=\"progress__bottom\" style={percent.bottom}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;","import React from \"react\";\r\nimport { GiDiamondHard, GiGymBag } from \"react-icons/gi\";\r\nimport { GrScheduleNew } from \"react-icons/gr\";\r\nimport { SiWeasyl } from \"react-icons/si\";\r\n// import { GiBugleCall } from \"react-icons/gi\";\r\n// import { IoMdMicrophone } from \"react-icons/io\";\r\nimport { FaMemory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Progress from \"../../progress/progress\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({ lecture, progress }) => {\r\n  const task = {\r\n    lesson: GrScheduleNew,\r\n    exercise: GiGymBag,\r\n    easyGame: SiWeasyl,\r\n    // speaking: IoMdMicrophone,\r\n    hardGame: GiDiamondHard,\r\n    memoryGame: FaMemory,\r\n    // recall: GiBugleCall,\r\n  };\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"title\">Select Task</div>\r\n      <div className=\"task__select\">\r\n        {Object.entries(task).map(([key, Value], index) => {\r\n          return (\r\n            <Progress\r\n              key={index}\r\n              Component={() => (\r\n                <Link className=\"task__container\" to={key}>\r\n                  <Value className=\"task__img\" />\r\n                  <div className=\"task__title\">{key}</div>\r\n                </Link>\r\n              )}\r\n              percentage={progress[lecture]?.[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default Task;\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     progress: selectExpenses(state.expenses, state.filters)\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  progress: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Task);","export const increment = () => ({ type: \"INCREMENT\" });\r\nexport const decrement = () => ({ type: \"DECREMENT\" });\r\nexport const setProgress = (payload) => ({ type: \"SETPROGRESS\", payload });\r\nexport const getProgress = () => ({ type: \"GETPROGRESS\" });\r\nexport const set = (value) => ({ type: \"SET\", value });","import { lesson } from '../../data.json';\r\n\r\nexport default {\r\n    generateCards: function({ cardLimit, totalCards, setState }) {\r\n        const cards = new Set();\r\n        let i = 0;\r\n        while (i < cardLimit) {\r\n          const value = Math.ceil(Math.random() * totalCards);\r\n          if (!cards.has(value)) {\r\n            i++;\r\n            cards.add(value);\r\n          }\r\n        }\r\n        setState([...cards]);\r\n        return [...cards]\r\n      },\r\n    playCards: function({ cardLimit, setSoundState, gameSpeed, cards, lecture, autoPlay, setCleanUp }) {\r\n        for (let i = 0; i < cardLimit; i++) {\r\n            this.delay(gameSpeed * i, () => {\r\n                autoPlay && new Audio(`files/lecture${lecture}/${cards[i]}.m4a`).play();\r\n                setSoundState(i);\r\n            }, setCleanUp);\r\n        }\r\n        this.delay(gameSpeed * cardLimit, () => setSoundState(cardLimit));\r\n    },\r\n    endGame: function({ result, exercise, lecture, setProgress }) {\r\n        setProgress({ result, exercise, lecture });\r\n        alert(\"result: \" + result + \"%\");\r\n    },\r\n    answerQuestion: function({ state, lecture, cardLimit }) {\r\n        const value = Math.floor(Math.random() * cardLimit);\r\n        const currentLecture = typeof lecture === 'number' ? lecture : lecture[value];\r\n        new Audio(`files/lecture${currentLecture}/${state[value]}.m4a`).play();\r\n        return state[value];\r\n    },\r\n    correct: function() { new Audio(\"files/yes.m4a\").play() },\r\n    incorrect: function() { new Audio(\"files/no.m4a\").play() },\r\n    delay: function(timeout, cb, setCleanUp) { \r\n        const timeOut = setTimeout(() => { \r\n            cb();\r\n            setCleanUp && setCleanUp(prev => {\r\n                const index = prev.indexOf(timeOut);\r\n                index > -1 && prev.splice(index, 1);\r\n                return prev;\r\n            })\r\n        }, timeout);\r\n        setCleanUp && setCleanUp(prev => [...prev, timeOut]);\r\n    },\r\n    isTouchDevice: () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0,\r\n    totalCards: (lecture) => lesson.slice(0, lecture).reduce((total, cur) =>\r\n    (typeof total === \"number\" ? total : total.limit.lessons.length) + cur.limit.lessons.length\r\n    , 0),\r\n    displayCard: function(state, lecture) {\r\n        let runningTotal = state, currentLecture, position, accumulation = 0;\r\n        for (let i = 0; i < lecture; i++) {\r\n          const current = lesson[i].limit.lessons.length;\r\n          if (runningTotal - current <= 0) {\r\n            position = state - accumulation;\r\n            currentLecture = i + 1;\r\n            break;\r\n          }\r\n          runningTotal -= current;\r\n          accumulation +=current\r\n        }\r\n    \r\n        return { position, lecture: currentLecture }\r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./easyGame.css\";\r\n\r\nconst EasyGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [soundState, setSoundState] = useState();\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [touchPlay, setTouchPlay] = useState(false);\r\n  const [cleanUp, setCleanUp] = useState([]);\r\n  const unMount = useRef();\r\n  unMount.current = cleanUp;\r\n  const gameLimit = 10;\r\n  const gameSpeed = 3500;\r\n  const cardLimit = 4;\r\n  const isTouchDevice = gameLogic.isTouchDevice();\r\n\r\n  useEffect(() => () => unMount.current.forEach(cur => clearTimeout(cur)), []);\r\n  \r\n  useEffect(() => nextResponse(), [next]);\r\n\r\n  useEffect(() => {\r\n    if (soundState === cardLimit || touchPlay) {\r\n      setAnswer(gameLogic.answerQuestion({ state, lecture, cardLimit }));\r\n      setState(prev => prev.sort(() => (Math.random() > .5) ? 1 : -1));\r\n      setActive(true);\r\n    }\r\n  }, [soundState, touchPlay]);\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setTouchPlay(false);\r\n    const totalCards = lesson[lecture - 1].lessons.length;\r\n    const cards = gameLogic.generateCards({ cardLimit, totalCards, setState });\r\n    if(isTouchDevice) setActive(true);\r\n    else gameLogic.playCards({ cards, cardLimit, gameSpeed, setSoundState, lecture, setCleanUp, autoPlay: true });\r\n  }\r\n\r\n  function nextResponse() {\r\n    if (next < gameLimit) nextRound();\r\n    else gameLogic.endGame({ \r\n      setProgress,\r\n      result: (gameLimit * 100) / (gameLimit + incorrect),\r\n      exercise: \"easyGame\",\r\n      lecture,\r\n    });\r\n  };\r\n\r\n  function handleOnClick(input) {\r\n    if (!active) return;\r\n    new Audio(`files/lecture${lecture}/${input}.m4a`).play();\r\n    if (isTouchDevice && !touchPlay) return;\r\n    setActive(false);\r\n    gameLogic.delay(gameSpeed, () => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        gameLogic.delay(2000, () => {\r\n          setNext((prev) => prev + 1);\r\n        }, setCleanUp);\r\n      } else {\r\n        gameLogic.incorrect();\r\n        gameLogic.delay(2000, () => {\r\n          new Audio(`files/lecture${lecture}/${answer}.m4a`).play();\r\n          setIncorrect((prev) => prev + 1);\r\n          setActive(true);\r\n        }, setCleanUp);\r\n      }\r\n    }, setCleanUp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"easy-game\">\r\n      <div className=\"title\">Easy Game</div>\r\n      {!touchPlay && isTouchDevice && <div className=\"touch-btn\" onClick={() => setTouchPlay(true)}>Play</div>}\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"container\"\r\n            style={{ filter: `brightness(${index === soundState ? 2 : 1})`}}\r\n            onClick={() => handleOnClick(cur)}\r\n          >\r\n            <div\r\n              className=\"img\"\r\n              style={{ backgroundImage: `url(./img/lecture${lecture}/${cur}.jpg)` }}\r\n            ></div>\r\n            <h5>{lesson[lecture - 1].lessons[cur - 1]}</h5>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"easy-game__footer\">\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() => active && new Audio(`files/lecture${lecture}/${answer}.m4a`).play() }\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n        <div className=\"score score__correct\">{next}</div>\r\n        <div className=\"score score__incorrect\">{incorrect}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(EasyGame);","import React, { useEffect, useState } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./hardGame.css\";\r\n\r\nconst HardGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const gameLimit = 5;\r\n  const displayCard = gameLogic.displayCard;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    const cardLimit = next + 5;\r\n    const totalCards = gameLogic.totalCards(lecture);\r\n    gameLogic.generateCards({ cardLimit, totalCards, setState });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) {\r\n      nextRound()\r\n    } else {\r\n      gameLogic.endGame({ \r\n        result: (100 * (correct - incorrect)) / correct, \r\n        exercise: \"hardGame\", \r\n        lecture, \r\n        setProgress \r\n      })\r\n    }\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === next + 5) {\r\n      setTimeout(() => { answerQuestion(state) }, 2500);\r\n    }\r\n  }, [state]);\r\n  \r\n  function answerQuestion(state) {\r\n    const answerLecture = [], position = [];\r\n    state.forEach(element => {\r\n      const { lecture: currentLecture, currentPosition } = displayCard(element, lecture);\r\n      answerLecture.push(currentLecture);\r\n      position.push(currentPosition);\r\n    });\r\n    setAnswer(gameLogic.answerQuestion({ state: position, lecture: answerLecture, cardLimit: state.length }));\r\n    setActive(true);\r\n  }\r\n\r\n  function handleOnClick(input) {\r\n    if (!active) return;\r\n    setActive(false);\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    new Audio(`files/lecture${inputLecture}/${position}.m4a`).play();\r\n    gameLogic.delay(2000, () => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        setCorrect((prev) => prev + 1);\r\n        gameLogic.delay(1500, () => {\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          if (current.length === 1) setNext((prev) => prev + 1);\r\n          else answerQuestion(current);\r\n        });\r\n      } else {\r\n        gameLogic.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        gameLogic.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          new Audio(`files/lecture${answerLecture}/${position}.m4a`).play();\r\n          setActive(true);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"hard-game\">\r\n      <div className=\"title\">Hard Game</div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return(\r\n          <div\r\n            key={index}\r\n            className=\"container\"\r\n            onClick={() => handleOnClick(cur)}\r\n          >\r\n            <div\r\n              className=\"img\"\r\n              style={{\r\n                backgroundImage: `url(./img/lecture${cardLecture}/${position}.jpg)`,\r\n              }}\r\n            ></div>\r\n            <h5>{lesson[cardLecture - 1].lessons[position - 1]}</h5>\r\n          </div>\r\n        )})}\r\n      </div>\r\n      <div className=\"hard-game__footer\">\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() =>\r\n            active &&\r\n            new Audio(`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`).play()\r\n          }\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n        <div className=\"score score__correct\">{correct}</div>\r\n        <div className=\"score score__incorrect\">{incorrect}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapStateToDispatch)(HardGame);","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { GiSpeaker } from \"react-icons/gi\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProgress } from \"../../../action\";\r\nimport { lesson } from \"../../../data.json\";\r\nimport gameLogic from \"../gameLogic\";\r\nimport \"./memoryGame.css\";\r\n\r\nconst MemoryGame = ({ lecture, setProgress }) => {\r\n  const [state, setState] = useState([]);\r\n  const [hidden, setHidden] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [input, setInput] = useState();\r\n  const [next, setNext] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [incorrect, setIncorrect] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const [addedTime, setAddedTime] = useState(0);\r\n  const [percent, setPercent] = useState(100);\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const [pauseInterval, setPauseInterval] = useState(false);\r\n  const nextRef = useRef(next);\r\n  nextRef.current = next;\r\n  const displayCard = gameLogic.displayCard;\r\n  const gameLimit = 10;\r\n\r\n  function nextRound() {\r\n    setState([]);\r\n    setPercent(100);\r\n    setAddedTime(0);\r\n    const cardLimit = next + 2;\r\n    const totalCards = gameLogic.totalCards(lecture);\r\n    gameLogic.generateCards({ cardLimit, totalCards, setState });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (next < gameLimit) nextRound();\r\n    else gameLogic.endGame({ \r\n        result: (200 * correct) / ((1 + gameLimit) * gameLimit),\r\n        exercise: \"memoryGame\",\r\n        lecture,\r\n        setProgress \r\n      });\r\n  }, [next]);\r\n\r\n  useEffect(() => {\r\n    if (state.length === next + 2) {\r\n      next > 4 && answerQuestion(state);\r\n      setAddedTime((prev) => prev + 1);\r\n    }\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    if (!addedTime) return;\r\n    clearInterval(intervalID);\r\n    if (pauseInterval) return;\r\n    let runningPercent = percent;\r\n    const increment = next < 5 ? 1000 : 3000;\r\n    const intervalId = setInterval(() => {\r\n      if (runningPercent <= 0) {\r\n        clearInterval(intervalId);\r\n        if (next < 5) {\r\n          setHidden(state);\r\n          answerQuestion(state);\r\n        } else {\r\n          setNext((prev) => prev + 1);\r\n        }\r\n      } else {\r\n        runningPercent -= 5;\r\n        setPercent((prev) => prev - 5);\r\n      }\r\n    }, (addedTime + 6000 + next * increment) / 20);\r\n    setIntervalID(intervalId);\r\n  }, [addedTime, pauseInterval]);\r\n\r\n  useEffect(() => {\r\n    if (!input) return;\r\n    setActive(false);\r\n    next > 4 && setPauseInterval(true);\r\n    if (next < 5) {\r\n      const current = [...hidden];\r\n      const hiddenIndex = current.indexOf(input);\r\n      current[hiddenIndex] = -current[hiddenIndex];\r\n      setHidden(current);\r\n    }\r\n    const { lecture: inputLecture, position } = displayCard(input, lecture);\r\n    new Audio(`files/lecture${inputLecture}/${position}.m4a`).play();\r\n    setTimeout(() => {\r\n      if (input === answer) {\r\n        gameLogic.correct();\r\n        gameLogic.delay(2000, () => {\r\n          if (next !== nextRef.current) return;\r\n          setCorrect((prev) => prev + 1);\r\n          const current = [...state];\r\n          current.splice(current.indexOf(input), 1);\r\n          setState(current);\r\n          next < 5 && setHidden(current);\r\n          if (current.length === 1) {\r\n            next < 5 && setHidden([]);\r\n            setNext((prev) => prev + 1);\r\n          } else answerQuestion(current);\r\n        });\r\n      } else {\r\n        gameLogic.incorrect();\r\n        setIncorrect((prev) => prev + 1);\r\n        next < 5 && setHidden(state);\r\n        gameLogic.delay(1500, () => {\r\n          const { lecture: answerLecture, position } = displayCard(answer, lecture);\r\n          new Audio(`files/lecture${answerLecture}/${position}.m4a`).play()\r\n          setActive(true);\r\n        })\r\n      }\r\n      next > 4 && setPauseInterval(false);\r\n    }, [2500]);\r\n  }, [input]);\r\n\r\n  const answerQuestion = (state) => {\r\n    const answerLecture = [], position = [];\r\n    state.forEach(element => {\r\n      const { lecture: currentLecture, currentPosition } = displayCard(element, lecture);\r\n      answerLecture.push(currentLecture);\r\n      position.push(currentPosition);\r\n    });\r\n    setAnswer(gameLogic.answerQuestion({ state: position, lecture: answerLecture, cardLimit: state.length }));\r\n    setActive(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <div className=\"title\">Memory Game</div>\r\n      <div className=\"select\">\r\n        {state.map((cur, index) => {\r\n          const { lecture: cardLecture, position } = displayCard(cur, lecture)\r\n          return (\r\n            <div\r\n              key={index}\r\n              className=\"container\"\r\n              onClick={() => active && setInput(cur)}\r\n              style={hidden[index] ? { backgroundColor: \"#bbb7aa35\" } : {}}\r\n            >\r\n              <div\r\n                className=\"img\"\r\n                style={\r\n                  hidden[index] >= 0\r\n                    ? {}\r\n                    : { backgroundImage: `url(./img/lecture${cardLecture}/${position}.jpg)`,}\r\n                }\r\n              ></div>\r\n              {!(hidden[index] >= 0) && <h5>{lesson[cardLecture - 1].lessons[position - 1]}</h5>}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <div\r\n        className=\"memory-game__footer\"\r\n        style={{\r\n          backgroundImage: `linear-gradient(to right, #b7ab85 ${percent}%, #b7ab8560 ${percent}%)`,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"score score__play\"\r\n          onClick={() =>\r\n            active &&\r\n            new Audio(`files/lecture${displayCard(answer, lecture).lecture}/${displayCard(answer, lecture).position}.m4a`).play()\r\n          }\r\n        >\r\n          <GiSpeaker />\r\n        </div>\r\n        <div className=\"score score__correct\">{correct}</div>\r\n        <div className=\"score score__incorrect\">{incorrect}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapPropsToDispatch = (dispatch) => ({\r\n  setProgress: (payload) => dispatch(setProgress(payload)),\r\n});\r\n\r\nexport default connect(undefined, mapPropsToDispatch)(MemoryGame);","import React, { useState } from \"react\";\r\nimport Practice from \"./practice/practice\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from \"./lesson/lesson\";\r\nimport Task from \"./task/task\";\r\nimport EasyGame from \"./easyGame/easyGame\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport HardGame from \"./hardGame/hardGame\";\r\nimport MemoryGame from \"./memoryGame/memoryGame\";\r\nimport \"./exercise.css\";\r\n\r\nconst Exercise = ({ lecture, setLecture, location }) => {\r\n  const [exercise, setExercise] = useState(1);\r\n\r\n  return (\r\n    <div className=\"exercise__container\">\r\n      <div className=\"exercise\">\r\n        <Link\r\n          to={`/${location.pathname !== \"/task\" ? \"task\" : \"\"}`}\r\n          className=\"return\"\r\n        >\r\n          {location.pathname !== \"/\" && <TiArrowBack />}\r\n        </Link>\r\n        <Switch>\r\n          <Route path=\"/lesson\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"lesson\"\r\n            />\r\n          </Route>\r\n          <Route path=\"/exercise\">\r\n            <Practice\r\n              lecture={lecture}\r\n              exercise={exercise}\r\n              setExercise={setExercise}\r\n              type=\"exercise\"\r\n            />\r\n          </Route>\r\n          <Route path=\"/task\">\r\n            <Task lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/easyGame\">\r\n            <EasyGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/hardGame\">\r\n            <HardGame lecture={lecture} />\r\n          </Route>\r\n          <Route path=\"/memoryGame\">\r\n            <MemoryGame lecture={lecture} />\r\n          </Route>\r\n          <Route \r\n            path=\"/\" \r\n            render={({history}) => \r\n              <Lesson \r\n                history={history} \r\n                setLecture={setLecture} \r\n                lecture={lecture}\r\n              />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise;","export default __webpack_public_path__ + \"static/media/logo.271d96d0.png\";","import React from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logo\" src={logo} alt=\"Yoruba\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","const saveState = window.localStorage.getItem(\"Yoruba\") || \"{}\";\r\nconst defaultState = saveState !== \"[object Object]\" ? JSON.parse(saveState) : {};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    // case 'INCREMENT':\r\n    //   return ({lecture: state.lecture + 1})\r\n\r\n    // case 'DECREMENT':\r\n    //   return ({lecture: state.lecture - 1})\r\n\r\n    // case 'SET':\r\n    //   return ({lecture: action.value})\r\n\r\n    case \"SETPROGRESS\":\r\n      const current = JSON.parse(JSON.stringify(state));\r\n      const { lecture, exercise, result } = action.payload;\r\n      if (!current[lecture]) current[lecture] = {};\r\n      if (!(current[lecture][exercise] > result))\r\n        current[lecture][exercise] = result;\r\n      return current;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useState } from \"react\";\nimport Exercise from \"./component/exercise/exercise\";\nimport Header from \"./component/header/header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\n// import { Progress } from \"./progress\";\nimport { Provider } from \"react-redux\";\nimport { reducer } from \"./reducer\";\nimport \"./App.css\";\n// import { decrement, increment, set, setProgress, getProgress } from \"./action\";\n\nfunction App() {\n  const [lecture, setLecture] = useState(1);\n  const store = createStore(reducer);\n\n  store.subscribe(() => {\n    console.log(\"store\", store.getState());\n    window.localStorage.setItem(\"Yoruba\", JSON.stringify(store.getState()));\n  });\n\n  // store.dispatch(increment());\n  // store.dispatch(increment());\n  // store.dispatch(set(20));\n  // store.dispatch(decrement());\n  // const progressValue = { progress, setProgress };\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header setLecture={setLecture} />\n        <Router basename=\"/yoruba\">\n          <Route\n            render={({ location }) => (\n              <Exercise\n                location={location}\n                lecture={lecture}\n                setLecture={setLecture}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}